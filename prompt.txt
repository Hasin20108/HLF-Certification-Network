network/docker-base/docker-compose-base.yaml
version: '2'

services:

  orderer.certification-network.com:
    container_name: orderer.certification-network.com
    image: hyperledger/fabric-orderer:latest
    environment:
      - FABRIC_LOGGING_SPEC=INFO
      - ORDERER_GENERAL_LISTENADDRESS=0.0.0.0
      - ORDERER_GENERAL_GENESISMETHOD=file
      - ORDERER_GENERAL_GENESISFILE=/var/hyperledger/orderer/orderer.genesis.block
      - ORDERER_GENERAL_LOCALMSPID=OrdererMSP
      - ORDERER_GENERAL_LOCALMSPDIR=/var/hyperledger/orderer/msp
      # enabled TLS
      - ORDERER_GENERAL_TLS_ENABLED=false
      - ORDERER_GENERAL_TLS_PRIVATEKEY=/var/hyperledger/orderer/tls/server.key
      - ORDERER_GENERAL_TLS_CERTIFICATE=/var/hyperledger/orderer/tls/server.crt
      - ORDERER_GENERAL_TLS_ROOTCAS=[/var/hyperledger/orderer/tls/ca.crt]
      #- GODEBUG=netdns=go
    working_dir: /opt/gopath/src/github.com/hyperledger/fabric
    command: orderer
    volumes:
    - ../channel-artifacts/genesis.block:/var/hyperledger/orderer/orderer.genesis.block
    - ../crypto-config/ordererOrganizations/certification-network.com/orderers/orderer.certification-network.com/msp:/var/hyperledger/orderer/msp
    - ../crypto-config/ordererOrganizations/certification-network.com/orderers/orderer.certification-network.com/tls/:/var/hyperledger/orderer/tls
    - orderer.certification-network.com:/var/hyperledger/production/orderer
    ports:
      - 7050:7050

  peer0.iit.certification-network.com:
    container_name: peer0.iit.certification-network.com
    extends:
      file: docker-compose-peer.yaml
      service: peer-base
    environment:
      - CORE_PEER_ID=peer0.iit.certification-network.com
      - CORE_PEER_ADDRESS=peer0.iit.certification-network.com:7051
      - CORE_PEER_LISTENADDRESS=0.0.0.0:7051
      - CORE_PEER_CHAINCODEADDRESS=peer0.iit.certification-network.com:7053
      - CORE_PEER_CHAINCODELISTENADDRESS=0.0.0.0:7053
      - CORE_PEER_GOSSIP_BOOTSTRAP=peer1.iit.certification-network.com:8051
      - CORE_PEER_GOSSIP_EXTERNALENDPOINT=peer0.iit.certification-network.com:7051
      - CORE_PEER_LOCALMSPID=iitMSP
    volumes:
        - /var/run/:/host/var/run/
        - ../crypto-config/peerOrganizations/iit.certification-network.com/peers/peer0.iit.certification-network.com/msp:/etc/hyperledger/fabric/msp
        - ../crypto-config/peerOrganizations/iit.certification-network.com/peers/peer0.iit.certification-network.com/tls:/etc/hyperledger/fabric/tls
        - peer0.iit.certification-network.com:/var/hyperledger/production
    ports:
      - 7051:7051
      - 7053:7053

  peer1.iit.certification-network.com:
    container_name: peer1.iit.certification-network.com
    extends:
      file: docker-compose-peer.yaml
      service: peer-base
    environment:
      - CORE_PEER_ID=peer1.iit.certification-network.com
      - CORE_PEER_ADDRESS=peer1.iit.certification-network.com:8051
      - CORE_PEER_LISTENADDRESS=0.0.0.0:8051
      - CORE_PEER_CHAINCODEADDRESS=peer0.iit.certification-network.com:8053
      - CORE_PEER_CHAINCODELISTENADDRESS=0.0.0.0:8053
      - CORE_PEER_GOSSIP_EXTERNALENDPOINT=peer1.iit.certification-network.com:8051
      - CORE_PEER_GOSSIP_BOOTSTRAP=peer0.iit.certification-network.com:7051
      - CORE_PEER_LOCALMSPID=iitMSP
    volumes:
        - /var/run/:/host/var/run/
        - ../crypto-config/peerOrganizations/iit.certification-network.com/peers/peer1.iit.certification-network.com/msp:/etc/hyperledger/fabric/msp
        - ../crypto-config/peerOrganizations/iit.certification-network.com/peers/peer1.iit.certification-network.com/tls:/etc/hyperledger/fabric/tls
        - peer1.iit.certification-network.com:/var/hyperledger/production

    ports:
      - 8051:8051
      - 8053:8053

  peer0.mhrd.certification-network.com:
    container_name: peer0.mhrd.certification-network.com
    extends:
      file: docker-compose-peer.yaml
      service: peer-base
    environment:
      - CORE_PEER_ID=peer0.mhrd.certification-network.com
      - CORE_PEER_ADDRESS=peer0.mhrd.certification-network.com:9051
      - CORE_PEER_LISTENADDRESS=0.0.0.0:9051
      - CORE_PEER_CHAINCODEADDRESS=peer0.mhrd.certification-network.com:9053
      - CORE_PEER_CHAINCODELISTENADDRESS=0.0.0.0:9053
      - CORE_PEER_GOSSIP_EXTERNALENDPOINT=peer0.mhrd.certification-network.com:9051
      - CORE_PEER_GOSSIP_BOOTSTRAP=peer1.mhrd.certification-network.com:10051
      - CORE_PEER_LOCALMSPID=mhrdMSP
    volumes:
        - /var/run/:/host/var/run/
        - ../crypto-config/peerOrganizations/mhrd.certification-network.com/peers/peer0.mhrd.certification-network.com/msp:/etc/hyperledger/fabric/msp
        - ../crypto-config/peerOrganizations/mhrd.certification-network.com/peers/peer0.mhrd.certification-network.com/tls:/etc/hyperledger/fabric/tls
        - peer0.mhrd.certification-network.com:/var/hyperledger/production
    ports:
      - 9051:9051
      - 9053:9053

  peer1.mhrd.certification-network.com:
    container_name: peer1.mhrd.certification-network.com
    extends:
      file: docker-compose-peer.yaml
      service: peer-base
    environment:
      - CORE_PEER_ID=peer1.mhrd.certification-network.com
      - CORE_PEER_ADDRESS=peer1.mhrd.certification-network.com:10051
      - CORE_PEER_LISTENADDRESS=0.0.0.0:10051
      - CORE_PEER_CHAINCODEADDRESS=peer0.mhrd.certification-network.com:10053
      - CORE_PEER_CHAINCODELISTENADDRESS=0.0.0.0:10053
      - CORE_PEER_GOSSIP_EXTERNALENDPOINT=peer1.mhrd.certification-network.com:10051
      - CORE_PEER_GOSSIP_BOOTSTRAP=peer0.mhrd.certification-network.com:9051
      - CORE_PEER_LOCALMSPID=mhrdMSP
    volumes:
        - /var/run/:/host/var/run/
        - ../crypto-config/peerOrganizations/mhrd.certification-network.com/peers/peer1.mhrd.certification-network.com/msp:/etc/hyperledger/fabric/msp
        - ../crypto-config/peerOrganizations/mhrd.certification-network.com/peers/peer1.mhrd.certification-network.com/tls:/etc/hyperledger/fabric/tls
        - peer1.mhrd.certification-network.com:/var/hyperledger/production
    ports:
      - 10051:10051
      - 10053:10053

  peer0.upgrad.certification-network.com:
    container_name: peer0.upgrad.certification-network.com
    extends:
      file: docker-compose-peer.yaml
      service: peer-base
    environment:
      - CORE_PEER_ID=peer0.upgrad.certification-network.com
      - CORE_PEER_ADDRESS=peer0.upgrad.certification-network.com:11051
      - CORE_PEER_LISTENADDRESS=0.0.0.0:11051
      - CORE_PEER_CHAINCODEADDRESS=peer0.upgrad.certification-network.com:11053
      - CORE_PEER_CHAINCODELISTENADDRESS=0.0.0.0:11053
      - CORE_PEER_GOSSIP_EXTERNALENDPOINT=peer0.upgrad.certification-network.com:11051
      - CORE_PEER_GOSSIP_BOOTSTRAP=peer1.upgrad.certification-network.com:12051
      - CORE_PEER_LOCALMSPID=upgradMSP
    volumes:
        - /var/run/:/host/var/run/
        - ../crypto-config/peerOrganizations/upgrad.certification-network.com/peers/peer0.upgrad.certification-network.com/msp:/etc/hyperledger/fabric/msp
        - ../crypto-config/peerOrganizations/upgrad.certification-network.com/peers/peer0.upgrad.certification-network.com/tls:/etc/hyperledger/fabric/tls
        - peer0.upgrad.certification-network.com:/var/hyperledger/production
    ports:
      - 11051:11051
      - 11053:11053

  peer1.upgrad.certification-network.com:
    container_name: peer1.upgrad.certification-network.com
    extends:
      file: docker-compose-peer.yaml
      service: peer-base
    environment:
      - CORE_PEER_ID=peer1.upgrad.certification-network.com
      - CORE_PEER_ADDRESS=peer1.upgrad.certification-network.com:12051
      - CORE_PEER_LISTENADDRESS=0.0.0.0:12051
      - CORE_PEER_CHAINCODEADDRESS=peer0.upgrad.certification-network.com:12053
      - CORE_PEER_CHAINCODELISTENADDRESS=0.0.0.0:12053
      - CORE_PEER_GOSSIP_EXTERNALENDPOINT=peer1.upgrad.certification-network.com:12051
      - CORE_PEER_GOSSIP_BOOTSTRAP=peer0.upgrad.certification-network.com:11051
      - CORE_PEER_LOCALMSPID=upgradMSP
    volumes:
        - /var/run/:/host/var/run/
        - ../crypto-config/peerOrganizations/upgrad.certification-network.com/peers/peer1.upgrad.certification-network.com/msp:/etc/hyperledger/fabric/msp
        - ../crypto-config/peerOrganizations/upgrad.certification-network.com/peers/peer1.upgrad.certification-network.com/tls:/etc/hyperledger/fabric/tls
        - peer1.upgrad.certification-network.com:/var/hyperledger/production
    ports:
      - 12051:12051
      - 12053:12053



network/docker-base/docker-compose-peer.yaml
version: '2'

services:
  peer-base:
    image: hyperledger/fabric-peer:latest
    environment:
      - CORE_VM_ENDPOINT=unix:///host/var/run/docker.sock
      - CORE_VM_DOCKER_HOSTCONFIG_NETWORKMODE=network_certification
      - FABRIC_LOGGING_SPEC=INFO
      - CORE_PEER_TLS_ENABLED=false
      - CORE_PEER_GOSSIP_USELEADERELECTION=true
      - CORE_PEER_GOSSIP_ORGLEADER=false
      - CORE_PEER_PROFILE_ENABLED=true
      - CORE_PEER_TLS_CERT_FILE=/etc/hyperledger/fabric/tls/server.crt
      - CORE_PEER_TLS_KEY_FILE=/etc/hyperledger/fabric/tls/server.key
      - CORE_PEER_TLS_ROOTCERT_FILE=/etc/hyperledger/fabric/tls/ca.crt
    volumes:
      - ../crypto-config:/opt/gopath/src/github.com/hyperledger/fabric/peer/crypto
    working_dir: /opt/gopath/src/github.com/hyperledger/fabric/peer
    command: peer node start # --peer-chaincodedev


network/scripts/bootstrap.sh
#!/bin/bash

echo
echo " ____    _____      _      ____    _____ "
echo "/ ___|  |_   _|    / \    |  _ \  |_   _|"
echo "\___ \    | |     / _ \   | |_) |   | |  "
echo " ___) |   | |    / ___ \  |  _ <    | |  "
echo "|____/    |_|   /_/   \_\ |_| \_\   |_|  "
echo
echo "Setting Up Hyperledger Fabric Network"
echo
CHANNEL_NAME="$1"
DELAY="$2"
LANGUAGE="$3"
TIMEOUT="$4"
VERBOSE="$5"
: ${CHANNEL_NAME:="certificationchannel"}
: ${DELAY:="5"}
: ${LANGUAGE:="node"}
: ${TIMEOUT:="15"}
: ${VERBOSE:="false"}
LANGUAGE=$(echo "$LANGUAGE" | tr [:upper:] [:lower:])
COUNTER=1
MAX_RETRY=15
ORGS="iit mhrd upgrad"

if [ "$LANGUAGE" = "node" ]; then
  CC_SRC_PATH="/opt/gopath/src/github.com/hyperledger/fabric/peer/chaincode/"
fi

echo "Channel name : "$CHANNEL_NAME

# import utils
. scripts/utils.sh

createChannel() {
  setGlobals 0 'iit'
  if [ -z "$CORE_PEER_TLS_ENABLED" -o "$CORE_PEER_TLS_ENABLED" = "false" ]; then
    set -x
    peer channel create -o orderer.certification-network.com:7050 -c $CHANNEL_NAME -f ./channel-artifacts/channel.tx >&log.txt
    res=$?
    set +x
  else
    set -x
    peer channel create -o orderer.certification-network.com:7050 -c $CHANNEL_NAME -f ./channel-artifacts/channel.tx --tls $CORE_PEER_TLS_ENABLED --cafile $ORDERER_CA >&log.txt
    res=$?
    set +x
  fi
  cat log.txt
  verifyResult $res "Channel creation failed"
  echo "===================== Channel '$CHANNEL_NAME' created ===================== "
  echo
}

joinChannel() {

  for org in $ORGS; do
    for peer in 0 1; do
      joinChannelWithRetry $peer $org
      echo "===================== peer${peer}.${org}.certification-network.com  joined channel '$CHANNEL_NAME' ===================== "
      sleep $DELAY
      echo
    done
  done
}

## Create channel
echo "Creating channel..."
createChannel

## Join all the peers to the channel
echo "Having all peers join the channel..."
joinChannel

## Set the anchor peers for each org in the channel
echo "Updating anchor peers for IIT..."
updateAnchorPeers 0 'iit'
echo "Updating anchor peers for MHRD..."
updateAnchorPeers 0 'mhrd'
echo "Updating anchor peers for UpGrad..."
updateAnchorPeers 0 'upgrad'

echo
echo "========= All GOOD, Hyperledger Fabric Certification Network Is Now Up and Running! =========== "
echo

echo
echo " _____   _   _   ____   "
echo "| ____| | \ | | |  _ \  "
echo "|  _|   |  \| | | | | | "
echo "| |___  | |\  | | |_| | "
echo "|_____| |_| \_| |____/  "
echo

exit 0


network/scripts/installChaincode.sh
#!/bin/bash

echo
echo " ____    _____      _      ____    _____ "
echo "/ ___|  |_   _|    / \    |  _ \  |_   _|"
echo "\___ \    | |     / _ \   | |_) |   | |  "
echo " ___) |   | |    / ___ \  |  _ <    | |  "
echo "|____/    |_|   /_/   \_\ |_| \_\   |_|  "
echo
echo "Deploying Chaincode CERTNET On Certification Network"
echo
CHANNEL_NAME="$1"
DELAY="$2"
LANGUAGE="$3"
VERSION="$4"
TYPE="$5"
: ${CHANNEL_NAME:="certificationchannel"}
: ${DELAY:="5"}
: ${LANGUAGE:="node"}
: ${VERSION:=1.1}
: ${TYPE="basic"}

LANGUAGE=`echo "$LANGUAGE" | tr [:upper:] [:lower:]`
ORGS="iit mhrd upgrad"
TIMEOUT=15

if [ "$TYPE" = "basic" ]; then
  CC_SRC_PATH="/opt/gopath/src/github.com/hyperledger/fabric/peer/chaincode/"
else
  CC_SRC_PATH="/opt/gopath/src/github.com/hyperledger/fabric/peer/chaincode-advanced/"
fi

echo "Channel name : "$CHANNEL_NAME

# import utils
. scripts/utils.sh

## Install new version of chaincode on peer0 of all 3 orgs making them endorsers
echo "Installing chaincode on peer0.iit.certification-network.com ..."
installChaincode 0 'iit' $VERSION
echo "Installing chaincode on peer0.mhrd.certification-network.com ..."
installChaincode 0 'mhrd' $VERSION
echo "Installing chaincode on peer0.upgrad.certification-network.com ..."
installChaincode 0 'upgrad' $VERSION

# Instantiate chaincode on the channel using peer0.iit
echo "Instantiating chaincode on channel using peer0.iit.certification-network.com ..."
instantiateChaincode 0 'iit' $VERSION

echo
echo "========= All GOOD, Chaincode CERTNET Is Now Installed & Instantiated On Certification Network =========== "
echo

echo
echo " _____   _   _   ____   "
echo "| ____| | \ | | |  _ \  "
echo "|  _|   |  \| | | | | | "
echo "| |___  | |\  | | |_| | "
echo "|_____| |_| \_| |____/  "
echo

exit 0


network/scripts/updateChaincode.sh
#!/bin/bash

echo
echo " ____    _____      _      ____    _____ "
echo "/ ___|  |_   _|    / \    |  _ \  |_   _|"
echo "\___ \    | |     / _ \   | |_) |   | |  "
echo " ___) |   | |    / ___ \  |  _ <    | |  "
echo "|____/    |_|   /_/   \_\ |_| \_\   |_|  "
echo
echo "Updating Chaincode CERTNET On Certification Network"
echo
CHANNEL_NAME="$1"
DELAY="$2"
LANGUAGE="$3"
VERSION="$4"
TYPE="$5"
: ${CHANNEL_NAME:="certificationchannel"}
: ${DELAY:="5"}
: ${LANGUAGE:="node"}
: ${VERSION:=1.1}
: ${TYPE="basic"}

LANGUAGE=`echo "$LANGUAGE" | tr [:upper:] [:lower:]`
ORGS="iit mhrd upgrad"
TIMEOUT=15

if [ "$TYPE" = "basic" ]; then
  CC_SRC_PATH="/opt/gopath/src/github.com/hyperledger/fabric/peer/chaincode/"
else
  CC_SRC_PATH="/opt/gopath/src/github.com/hyperledger/fabric/peer/chaincode-advanced/"
fi

echo "New Version : "$VERSION

# import utils
. scripts/utils.sh

## Install new version of chaincode on peer0 of all 3 orgs making them endorsers
echo "Updating chaincode on peer0.iit.certification-network.com ..."
installChaincode 0 'iit' $VERSION
echo "Updating chaincode on peer0.mhrd.certification-network.com ..."
installChaincode 0 'mhrd' $VERSION
echo "Updating chaincode on peer0.upgrad.certification-network.com ..."
installChaincode 0 'upgrad' $VERSION

# Upgrade chaincode on the channel using peer0.iit
echo "Upgrading chaincode on channel using peer0.iit.certification-network.com ..."
upgradeChaincode 0 'iit' $VERSION

echo
echo "========= All GOOD, Chaincode CERTNET Is Now Updated To Version '$VERSION' =========== "
echo

echo
echo " _____   _   _   ____   "
echo "| ____| | \ | | |  _ \  "
echo "|  _|   |  \| | | | | | "
echo "| |___  | |\  | | |_| | "
echo "|_____| |_| \_| |____/  "
echo

exit 0



network/scripts/utils.sh
#
# Copyright IBM Corp All Rights Reserved
#
# SPDX-License-Identifier: Apache-2.0
#

# This is a collection of bash functions used by different scripts

ORDERER_CA=/opt/gopath/src/github.com/hyperledger/fabric/peer/crypto/ordererOrganizations/certification-network.com/orderers/orderer.certification-network.com/msp/tlscacerts/tlsca.certification-network.com-cert.pem
PEER0_IIT_CA=/opt/gopath/src/github.com/hyperledger/fabric/peer/crypto/peerOrganizations/iit.certification-network.com/peers/peer0.iit.certification-network.com/tls/ca.crt
PEER0_MHRD_CA=/opt/gopath/src/github.com/hyperledger/fabric/peer/crypto/peerOrganizations/mhrd.certification-network.com/peers/peer0.mhrd.certification-network.com/tls/ca.crt
PEER0_UPGRAD_CA=/opt/gopath/src/github.com/hyperledger/fabric/peer/crypto/peerOrganizations/upgrad.certification-network.com/peers/peer0.upgrad.certification-network.com/tls/ca.crt

# verify the result of the end-to-end test
verifyResult() {
  if [ "$1" -ne 0 ]; then
    echo "!!!!!!!!!!!!!!! "$2" !!!!!!!!!!!!!!!!"
    echo "========= ERROR !!! FAILED to execute Certification Network Bootstrap ==========="
    echo
    exit 1
  fi
}

# Set OrdererOrg.Admin globals
setOrdererGlobals() {
  CORE_PEER_LOCALMSPID="OrdererMSP"
  CORE_PEER_TLS_ROOTCERT_FILE=/opt/gopath/src/github.com/hyperledger/fabric/peer/crypto/ordererOrganizations/certification-network.com/orderers/orderer.certification-network.com/msp/tlscacerts/tlsca.certification-network.com-cert.pem
  CORE_PEER_MSPCONFIGPATH=/opt/gopath/src/github.com/hyperledger/fabric/peer/crypto/ordererOrganizations/certification-network.com/users/Admin@certification-network.com/msp
}

setGlobals() {
  PEER=$1
  ORG=$2
  if [ "$ORG" == 'iit' ]; then
    CORE_PEER_LOCALMSPID="iitMSP"
    CORE_PEER_TLS_ROOTCERT_FILE=$PEER0_IIT_CA
    CORE_PEER_MSPCONFIGPATH=/opt/gopath/src/github.com/hyperledger/fabric/peer/crypto/peerOrganizations/iit.certification-network.com/users/Admin@iit.certification-network.com/msp
    if [ "$PEER" -eq 0 ]; then
      CORE_PEER_ADDRESS=peer0.iit.certification-network.com:7051
    else
      CORE_PEER_ADDRESS=peer1.iit.certification-network.com:8051
    fi
  elif [ "$ORG" == 'mhrd' ]; then
    CORE_PEER_LOCALMSPID="mhrdMSP"
    CORE_PEER_TLS_ROOTCERT_FILE=$PEER0_MHRD_CA
    CORE_PEER_MSPCONFIGPATH=/opt/gopath/src/github.com/hyperledger/fabric/peer/crypto/peerOrganizations/mhrd.certification-network.com/users/Admin@mhrd.certification-network.com/msp
    if [ "$PEER" -eq 0 ]; then
      CORE_PEER_ADDRESS=peer0.mhrd.certification-network.com:9051
    else
      CORE_PEER_ADDRESS=peer1.mhrd.certification-network.com:10051
    fi

  elif [ "$ORG" == 'upgrad' ]; then
    CORE_PEER_LOCALMSPID="upgradMSP"
    CORE_PEER_TLS_ROOTCERT_FILE=$PEER0_UPGRAD_CA
    CORE_PEER_MSPCONFIGPATH=/opt/gopath/src/github.com/hyperledger/fabric/peer/crypto/peerOrganizations/upgrad.certification-network.com/users/Admin@upgrad.certification-network.com/msp
    if [ "$PEER" -eq 0 ]; then
      CORE_PEER_ADDRESS=peer0.upgrad.certification-network.com:11051
    else
      CORE_PEER_ADDRESS=peer1.upgrad.certification-network.com:12051
    fi
  else
    echo "================== ERROR !!! ORG Unknown =================="
  fi
}

updateAnchorPeers() {
  PEER=$1
  ORG=$2
  setGlobals "$PEER" "$ORG"

  if [ -z "$CORE_PEER_TLS_ENABLED" -o "$CORE_PEER_TLS_ENABLED" = "false" ]; then
    set -x
    peer channel update -o orderer.certification-network.com:7050 -c "$CHANNEL_NAME" -f ./channel-artifacts/${CORE_PEER_LOCALMSPID}anchors.tx >&log.txt
    res=$?
    set +x
  else
    set -x
    peer channel update -o orderer.certification-network.com:7050 -c "$CHANNEL_NAME" -f ./channel-artifacts/${CORE_PEER_LOCALMSPID}anchors.tx --tls "$CORE_PEER_TLS_ENABLED" --cafile $ORDERER_CA >&log.txt
    res=$?
    set +x
  fi
  cat log.txt
  verifyResult $res "Anchor peer update failed"
  echo "===================== Anchor peers updated for org '$CORE_PEER_LOCALMSPID' on channel '$CHANNEL_NAME' ===================== "
  sleep "$DELAY"
  echo
}

## Sometimes Join takes time hence RETRY at least 5 times
joinChannelWithRetry() {
  PEER=$1
  ORG=$2
  setGlobals "$PEER" "$ORG"

  set -x
  peer channel join -b "$CHANNEL_NAME".block >&log.txt
  res=$?
  set +x
  cat log.txt
  if [ $res -ne 0 -a "$COUNTER" -lt "$MAX_RETRY" ]; then
    COUNTER=$(expr "$COUNTER" + 1)
    echo "peer${PEER}.${ORG} failed to join the channel, Retry after $DELAY seconds"
    sleep "$DELAY"
    joinChannelWithRetry "$PEER" "$ORG"
  else
    COUNTER=1
  fi
  verifyResult $res "After $MAX_RETRY attempts, peer${PEER}.${ORG} has failed to join channel '$CHANNEL_NAME' "
}

installChaincode() {
  PEER=$1
  ORG=$2
  setGlobals "$PEER" "$ORG"
  VERSION=${3:-1.0}
  set -x
  peer chaincode install -n certnet -v "${VERSION}" -l "${LANGUAGE}" -p "${CC_SRC_PATH}" >&log.txt
  res=$?
  set +x
  cat log.txt
  verifyResult $res "Chaincode installation on peer${PEER}.${ORG} has failed"
  echo "===================== Chaincode is installed on peer${PEER}.${ORG} ===================== "
  echo
}

instantiateChaincode() {
  PEER=$1
  ORG=$2
  setGlobals "$PEER" "$ORG"
  VERSION=${3:-1.0}

  # while 'peer chaincode' command can get the orderer endpoint from the peer
  # (if join was successful), let's supply it directly as we know it using
  # the "-o" option
  if [ -z "$CORE_PEER_TLS_ENABLED" -o "$CORE_PEER_TLS_ENABLED" = "false" ]; then
    set -x
    peer chaincode instantiate -o orderer.certification-network.com:7050 -C "$CHANNEL_NAME" -n certnet -l "${LANGUAGE}" -v "${VERSION}" -c '{"Args":["org.certification-network.certnet:instantiate"]}' -P "OR ('iitMSP.member','mhrdMSP.member','upgradMSP.member')" >&log.txt
    res=$?
    set +x
  else
    set -x
    peer chaincode instantiate -o orderer.certification-network.com:7050 --tls "$CORE_PEER_TLS_ENABLED" --cafile $ORDERER_CA -C $CHANNEL_NAME -n certnet -l ${LANGUAGE} -v ${VERSION} -c '{"Args":["org.certification-network.certnet:instantiate"]}' -P "OR ('iitMSP.member','mhrdMSP.member','upgradMSP.member')" >&log.txt
    res=$?
    set +x
  fi
  cat log.txt
  verifyResult $res "Chaincode instantiation on peer${PEER}.${ORG} on channel '$CHANNEL_NAME' failed"
  echo "===================== Chaincode is instantiated on peer${PEER}.${ORG} on channel '$CHANNEL_NAME' ===================== "
  echo
}

upgradeChaincode() {
  PEER=$1
  ORG=$2
  setGlobals $PEER $ORG
  VERSION=${3:-1.0}

  if [ -z "$CORE_PEER_TLS_ENABLED" -o "$CORE_PEER_TLS_ENABLED" = "false" ]; then
    set -x
    peer chaincode upgrade -o orderer.certification-network.com:7050 -C $CHANNEL_NAME -n certnet -l ${LANGUAGE} -v ${VERSION} -p ${CC_SRC_PATH} -c '{"Args":["org.certification-network.certnet:instantiate"]}' -P "OR ('iitMSP.member','mhrdMSP.member','upgradMSP.member')" >&log.txt
    res=$?
    set +x
  else
    set -x
    peer chaincode upgrade -o orderer.certification-network.com:7050 --tls $CORE_PEER_TLS_ENABLED --cafile $ORDERER_CA -C $CHANNEL_NAME -n certnet -l ${LANGUAGE} -v ${VERSION} -p ${CC_SRC_PATH} -c '{"Args":["org.certification-network.certnet:instantiate"]}' -P "OR ('iitMSP.member','mhrdMSP.member','upgradMSP.member')" >&log.txt
    res=$?
    set +x
  fi
  cat log.txt
  verifyResult $res "Chaincode upgrade on peer${PEER}.${ORG} has failed"
  echo "===================== Chaincode is upgraded on peer${PEER}.${ORG} on channel '$CHANNEL_NAME' ===================== "
  echo
}

chaincodeQuery() {
  PEER=$1
  ORG=$2
  setGlobals $PEER $ORG
  EXPECTED_RESULT=$3
  echo "===================== Querying on peer${PEER}.${ORG} on channel '$CHANNEL_NAME'... ===================== "
  local rc=1
  local starttime=$(date +%s)

  # continue to poll
  # we either get a successful response, or reach TIMEOUT
  while
    test "$(($(date +%s) - starttime))" -lt "$TIMEOUT" -a $rc -ne 0
  do
    sleep $DELAY
    echo "Attempting to Query peer${PEER}.${ORG} ...$(($(date +%s) - starttime)) secs"
    set -x
    peer chaincode query -C $CHANNEL_NAME -n certnet -c '{"Args":["org.certification-network.certnet:instantiate"]}' >&log.txt
    res=$?
    set +x
    test $res -eq 0 && VALUE=$(cat log.txt | awk '/Query Result/ {print $NF}')
    test "$VALUE" = "$EXPECTED_RESULT" && let rc=0
    # removed the string "Query Result" from peer chaincode query command
    # result. as a result, have to support both options until the change
    # is merged.
    test $rc -ne 0 && VALUE=$(cat log.txt | egrep '^[0-9]+$')
    test "$VALUE" = "$EXPECTED_RESULT" && let rc=0
  done
  echo
  cat log.txt
  if test $rc -eq 0; then
    echo "===================== Query successful on peer${PEER}.${ORG} on channel '$CHANNEL_NAME' ===================== "
  else
    echo "!!!!!!!!!!!!!!! Query result on peer${PEER}.${ORG} is INVALID !!!!!!!!!!!!!!!!"
    echo "================== ERROR !!! FAILED to query Chaincode on Certification Network =================="
    echo
    exit 1
  fi
}

# chaincodeInvoke <peer> <org> ...
# Accepts as many peer/org pairs as desired and requests endorsement from each
chaincodeInvoke() {
  parsePeerConnectionParameters $@
  res=$?
  verifyResult $res "Invoke transaction failed on channel '$CHANNEL_NAME' due to uneven number of peer and org parameters "

  # while 'peer chaincode' command can get the orderer endpoint from the
  # peer (if join was successful), let's supply it directly as we know
  # it using the "-o" option
  if [ -z "$CORE_PEER_TLS_ENABLED" -o "$CORE_PEER_TLS_ENABLED" = "false" ]; then
    set -x
    peer chaincode invoke -o orderer.certification-network.com:7050 -C $CHANNEL_NAME -n certnet $PEER_CONN_PARMS -c '{"Args":["org.certification-network.certnet:createStudent","0001","Aakash Bansal","connect@aakashbansal.com","15"]}' >&log.txt
    res=$?
    set +x
  else
    set -x
    peer chaincode invoke -o orderer.certification-network.com:7050 --tls $CORE_PEER_TLS_ENABLED --cafile $ORDERER_CA -C $CHANNEL_NAME -n certnet $PEER_CONN_PARMS -c '{"Args":["org.certification-network.certnet:createStudent","0001","Aakash Bansal","connect@aakashbansal.com"]}' >&log.txt
    res=$?
    set +x
  fi
  cat log.txt
  verifyResult $res "Invoke execution on $PEERS failed "
  echo "===================== Invoke transaction successful on $PEERS on channel '$CHANNEL_NAME' ===================== "
  echo
}



network/configtx.yaml
Organizations:
  - &OrdererOrg
    Name: Orderer
    ID: OrdererMSP
    MSPDir: crypto-config/ordererOrganizations/certification-network.com/msp
    Policies:
      Readers:
        Type: Signature
        Rule: "OR('OrdererMSP.member')"
      Writers:
        Type: Signature
        Rule: "OR('OrdererMSP.member')"
      Admins:
        Type: Signature
        Rule: "OR('OrdererMSP.member')"

  - &iit
    Name: iitMSP
    ID: iitMSP
    MSPDir: crypto-config/peerOrganizations/iit.certification-network.com/msp
    Policies:
      Readers:
        Type: Signature
        Rule: "OR('iitMSP.admin', 'iitMSP.peer', 'iitMSP.client')"
      Writers:
        Type: Signature
        Rule: "OR('iitMSP.admin', 'iitMSP.peer', 'iitMSP.client')"
      Admins:
        Type: Signature
        Rule: "OR('iitMSP.admin', 'iitMSP.peer', 'iitMSP.client')"
    AnchorPeers:
      - Host: peer0.iit.certification-network.com
        Port: 7051

  - &mhrd
    Name: mhrdMSP
    ID: mhrdMSP
    MSPDir: crypto-config/peerOrganizations/mhrd.certification-network.com/msp
    Policies:
      Readers:
        Type: Signature
        Rule: "OR('mhrdMSP.admin', 'mhrdMSP.peer', 'mhrdMSP.client')"
      Writers:
        Type: Signature
        Rule: "OR('mhrdMSP.admin', 'mhrdMSP.peer', 'mhrdMSP.client')"
      Admins:
        Type: Signature
        Rule: "OR('mhrdMSP.admin', 'mhrdMSP.peer', 'mhrdMSP.client')"
    AnchorPeers:
      - Host: peer0.mhrd.certification-network.com
        Port: 9051

  - &upgrad
    Name: upgradMSP
    ID: upgradMSP
    MSPDir: crypto-config/peerOrganizations/upgrad.certification-network.com/msp
    Policies:
      Readers:
        Type: Signature
        Rule: "OR('upgradMSP.admin', 'upgradMSP.peer', 'upgradMSP.client')"
      Writers:
        Type: Signature
        Rule: "OR('upgradMSP.admin', 'upgradMSP.peer', 'upgradMSP.client')"
      Admins:
        Type: Signature
        Rule: "OR('upgradMSP.admin', 'upgradMSP.peer', 'upgradMSP.client')"
    AnchorPeers:
      - Host: peer0.upgrad.certification-network.com
        Port: 11051



#Capabilities

Capabilities:
  Channel: &ChannelCapabilities
    V1_4_3: true
    V1_3: false
    V1_1: false
  Orderer: &OrdererCapabilities
    V1_4_2: true
    V1_1: false
  Application: &ApplicationCapabilities
    V1_4_2: true
    V1_3: false
    V1_2: false
    V1_1: false

#Application

Application: &ApplicationDefaults
  Organizations:
  Policies: &ApplicationDefaultPolicies
    Readers:
      Type: ImplicitMeta
      Rule: "ANY Readers"
    Writers:
      Type: ImplicitMeta
      Rule: "ANY Writers"
    Admins:
      Type: ImplicitMeta
      Rule: "ANY Admins"
  Capabilities: *ApplicationCapabilities

#Orderer
Orderer: &OrdererDefaults
  OrdererType: solo
  Addresses:
    - orderer.certification-network.com:7050
  BatchTimeout: 2s
  BatchSize:
    MaxMessageCount: 10
    AbsoluteMaxBytes: 99 MB
    PreferredMaxBytes: 512 KB
  Organizations:
  Capabilities: *OrdererCapabilities
  Policies:
    Readers:
      Type: ImplicitMeta
      Rule: "ANY Readers"
    Writers:
      Type: ImplicitMeta
      Rule: "ANY Writers"
    Admins:
      Type: ImplicitMeta
      Rule: "ANY Admins"
    # BlockValidation specifies what signatures must be included in the block
    # from the orderer for the peer to validate it.
    BlockValidation:
      Type: ImplicitMeta
      Rule: "ANY Writers"

Channel: &ChannelDefaults
  Policies:
    # Who may invoke the 'Deliver' API
    Readers:
      Type: ImplicitMeta
      Rule: "ANY Readers"
    # Who may invoke the 'Broadcast' API
    Writers:
      Type: ImplicitMeta
      Rule: "ANY Writers"
    # By default, who may modify elements at this config level
    Admins:
      Type: ImplicitMeta
      Rule: "ANY Admins"
  Capabilities:
    <<: *ChannelCapabilities


#Profiles
Profiles:
  OrdererGenesis:
    <<: *ChannelDefaults
    Capabilities:
      <<: *ChannelCapabilities
    Orderer:
      <<: *OrdererDefaults
      Organizations:
        - *OrdererOrg
      Capabilities:
        <<: *OrdererCapabilities
    Consortiums:
      CertificationConsortium:
        Organizations:
          - *iit
          - *mhrd
          - *upgrad

  CertificationChannel:
    Consortium: CertificationConsortium
    Application:
      <<: *ApplicationDefaults
      Organizations:
        - *iit
        - *mhrd
        - *upgrad
      Capabilities:
        <<: *ApplicationCapabilities


network/crypto-config.yaml
OrdererOrgs:
  - Name: Orderer
    Domain: certification-network.com
    Specs:
      - Hostname: orderer
PeerOrgs:
 - Name: iit
   Domain: iit.certification-network.com
   EnableNodeOUs: true
   Template:
      Count: 2
   Users:
      Count: 1
 - Name: mhrd
   Domain: mhrd.certification-network.com
   EnableNodeOUs: true
   Template:
      Count: 2
   Users:
      Count: 1
 - Name: upgrad
   Domain: upgrad.certification-network.com
   EnableNodeOUs: true
   Template:
      Count: 2
   Users:
      Count: 1


network/docker-compose-e2e.yaml
version: '2'

volumes:
  orderer.certification-network.com:
  peer0.iit.certification-network.com:
  peer1.iit.certification-network.com:
  peer0.mhrd.certification-network.com:
  peer1.mhrd.certification-network.com:
  peer0.upgrad.certification-network.com:
  peer1.upgrad.certification-network.com:

networks:
  certification:

services:

  ca.iit.certification-network.com:
    image: hyperledger/fabric-ca:latest
    environment:
      - FABRIC_CA_HOME=/etc/hyperledger/fabric-ca-server
      - FABRIC_CA_SERVER_CA_NAME=ca.iit.certification-network.com
      - FABRIC_CA_SERVER_TLS_ENABLED=false
      # - FABRIC_CA_SERVER_TLS_CERTFILE=/etc/hyperledger/fabric-ca-server-config/ca.iit.certification-network.com-cert.pem
      # - FABRIC_CA_SERVER_TLS_KEYFILE=/etc/hyperledger/fabric-ca-server-config/2c37055164e26b18f858ddb8f8995e9d4ffc0afc7c4e2b70ee9d651739c25d45_sk
    ports:
      - "7054:7054"
    command: sh -c 'fabric-ca-server start -b admin:adminpw -d' # --ca.certfile /etc/hyperledger/fabric-ca-server-config/ca.iit.certification-network.com-cert.pem --ca.keyfile /etc/hyperledger/fabric-ca-server-config/2c37055164e26b18f858ddb8f8995e9d4ffc0afc7c4e2b70ee9d651739c25d45_sk -b admin:adminpw -d'
    volumes:
      - ./crypto-config/peerOrganizations/iit.certification-network.com/ca/:/etc/hyperledger/fabric-ca-server-config
    container_name: ca.iit.certification-network.com
    networks:
      - certification

  ca.mhrd.certification-network.com:
    image: hyperledger/fabric-ca:latest
    environment:
      - FABRIC_CA_HOME=/etc/hyperledger/fabric-ca-server
      - FABRIC_CA_SERVER_CA_NAME=ca.mhrd.certification-network.com
      - FABRIC_CA_SERVER_TLS_ENABLED=false
      # - FABRIC_CA_SERVER_TLS_CERTFILE=/etc/hyperledger/fabric-ca-server-config/ca.mhrd.certification-network.com-cert.pem
      # - FABRIC_CA_SERVER_TLS_KEYFILE=/etc/hyperledger/fabric-ca-server-config/daa0814c3045799d3781a34eaf71fb5f3b7b33c7c618f4eec7ea41b1e5aa1690_sk
    ports:
      - "8054:7054"
    command: sh -c 'fabric-ca-server start -b admin:adminpw -d' # --ca.certfile /etc/hyperledger/fabric-ca-server-config/ca.mhrd.certification-network.com-cert.pem --ca.keyfile /etc/hyperledger/fabric-ca-server-config/daa0814c3045799d3781a34eaf71fb5f3b7b33c7c618f4eec7ea41b1e5aa1690_sk -b admin:adminpw -d'
    volumes:
      - ./crypto-config/peerOrganizations/mhrd.certification-network.com/ca/:/etc/hyperledger/fabric-ca-server-config
    container_name: ca.mhrd.certification-network.com
    networks:
      - certification

  ca.upgrad.certification-network.com:
    image: hyperledger/fabric-ca:latest
    environment:
      - FABRIC_CA_HOME=/etc/hyperledger/fabric-ca-server
      - FABRIC_CA_SERVER_CA_NAME=ca.upgrad.certification-network.com
      - FABRIC_CA_SERVER_TLS_ENABLED=false
      # - FABRIC_CA_SERVER_TLS_CERTFILE=/etc/hyperledger/fabric-ca-server-config/ca.upgrad.certification-network.com-cert.pem
      # - FABRIC_CA_SERVER_TLS_KEYFILE=/etc/hyperledger/fabric-ca-server-config/ddef67151495f2ac9ca5d3ae2ddcc42a0f6e48c37ded15c9d028f490920ab11c_sk
    ports:
      - "9054:7054"
    command: sh -c 'fabric-ca-server start -b admin:adminpw -d' # --ca.certfile /etc/hyperledger/fabric-ca-server-config/ca.upgrad.certification-network.com-cert.pem --ca.keyfile /etc/hyperledger/fabric-ca-server-config/ddef67151495f2ac9ca5d3ae2ddcc42a0f6e48c37ded15c9d028f490920ab11c_sk -b admin:adminpw -d'
    volumes:
      - ./crypto-config/peerOrganizations/upgrad.certification-network.com/ca/:/etc/hyperledger/fabric-ca-server-config
    container_name: ca.upgrad.certification-network.com
    networks:
      - certification

  orderer.certification-network.com:
    extends:
      file:   docker-base/docker-compose-base.yaml
      service: orderer.certification-network.com
    container_name: orderer.certification-network.com
    networks:
      - certification

  peer0.iit.certification-network.com:
    container_name: peer0.iit.certification-network.com
    extends:
      file:  docker-base/docker-compose-base.yaml
      service: peer0.iit.certification-network.com
    networks:
      - certification

  peer1.iit.certification-network.com:
    container_name: peer1.iit.certification-network.com
    extends:
      file:  docker-base/docker-compose-base.yaml
      service: peer1.iit.certification-network.com
    networks:
      - certification

  peer0.mhrd.certification-network.com:
    container_name: peer0.mhrd.certification-network.com
    extends:
      file:  docker-base/docker-compose-base.yaml
      service: peer0.mhrd.certification-network.com
    networks:
      - certification

  peer1.mhrd.certification-network.com:
    container_name: peer1.mhrd.certification-network.com
    extends:
      file:  docker-base/docker-compose-base.yaml
      service: peer1.mhrd.certification-network.com
    networks:
      - certification

  peer0.upgrad.certification-network.com:
    container_name: peer0.upgrad.certification-network.com
    extends:
      file:  docker-base/docker-compose-base.yaml
      service: peer0.upgrad.certification-network.com
    networks:
      - certification

  peer1.upgrad.certification-network.com:
    container_name: peer1.upgrad.certification-network.com
    extends:
      file:  docker-base/docker-compose-base.yaml
      service: peer1.upgrad.certification-network.com
    networks:
      - certification

  cli:
    container_name: cli
    image: hyperledger/fabric-tools:latest
    tty: true
    stdin_open: true
    environment:
      - GOPATH=/opt/gopath
      - CORE_VM_ENDPOINT=unix:///host/var/run/docker.sock
      - FABRIC_LOGGING_SPEC=INFO
      - CORE_PEER_ID=cli
      - CORE_PEER_ADDRESS=peer0.iit.certification-network.com:7051
      - CORE_PEER_LOCALMSPID=iitMSP
      - CORE_PEER_TLS_ENABLED=false
      - CORE_PEER_TLS_CERT_FILE=/opt/gopath/src/github.com/hyperledger/fabric/peer/crypto/peerOrganizations/iit.certification-network.com/peers/peer0.iit.certification-network.com/tls/server.crt
      - CORE_PEER_TLS_KEY_FILE=/opt/gopath/src/github.com/hyperledger/fabric/peer/crypto/peerOrganizations/iit.certification-network.com/peers/peer0.iit.certification-network.com/tls/server.key
      - CORE_PEER_TLS_ROOTCERT_FILE=/opt/gopath/src/github.com/hyperledger/fabric/peer/crypto/peerOrganizations/iit.certification-network.com/peers/peer0.iit.certification-network.com/tls/ca.crt
      - CORE_PEER_MSPCONFIGPATH=/opt/gopath/src/github.com/hyperledger/fabric/peer/crypto/peerOrganizations/iit.certification-network.com/users/Admin@iit.certification-network.com/msp
    working_dir: /opt/gopath/src/github.com/hyperledger/fabric/peer
    command: /bin/bash
    volumes:
      - /var/run/:/host/var/run/
      - ./../chaincode/:/opt/gopath/src/github.com/hyperledger/fabric/peer/chaincode/
   #   - ./../chaincode-advanced/:/opt/gopath/src/github.com/hyperledger/fabric/peer/chaincode-advanced/
      - ./crypto-config:/opt/gopath/src/github.com/hyperledger/fabric/peer/crypto/
      - ./scripts:/opt/gopath/src/github.com/hyperledger/fabric/peer/scripts/
      - ./channel-artifacts:/opt/gopath/src/github.com/hyperledger/fabric/peer/channel-artifacts
    depends_on:
      - ca.iit.certification-network.com
      - ca.mhrd.certification-network.com
      - ca.upgrad.certification-network.com
      - orderer.certification-network.com
      - peer0.iit.certification-network.com
      - peer1.iit.certification-network.com
      - peer0.mhrd.certification-network.com
      - peer1.mhrd.certification-network.com
      - peer0.upgrad.certification-network.com
      - peer1.upgrad.certification-network.com
    networks:
      - certification

  chaincode:
    container_name: chaincode
    image: hyperledger/fabric-ccenv:latest
    tty: true
    environment:
      - GOPATH=/opt/gopath
      - CORE_VM_ENDPOINT=unix:///host/var/run/docker.sock
      - FABRIC_LOGGING_SPEC=INFO
      - CORE_PEER_ID=chaincode
      - CORE_PEER_ADDRESS=peer0.iit.certification-network.com:7051
      - CORE_PEER_LOCALMSPID=iitMSP
      - CORE_PEER_TLS_ENABLED=false
      - CORE_PEER_MSPCONFIGPATH=/opt/gopath/src/crypto/peerOrganizations/iit.certification-network.com/users/Admin@iit.certification-network.com/msp
      - CORE_TLS_CLIENT_KEY_PATH=/opt/gopath/src/crypto/peerOrganizations/iit.certification-network.com/users/Admin@iit.certification-network.com/tls/client.key
      - CORE_TLS_CLIENT_CERT_PATH=/opt/gopath/src/crypto/peerOrganizations/iit.certification-network.com/users/Admin@iit.certification-network.com/tls/client.crt
      - CORE_PEER_TLS_ROOTCERT_FILE=/opt/gopath/src/crypto/peerOrganizations/iit.certification-network.com/users/Admin@iit.certification-network.com/tls/ca.crt
    working_dir: /opt/gopath/src/chaincode
    command: /bin/bash -c 'sleep 6000000'
    volumes:
      - /var/run/:/host/var/run/
      - ./../chaincode:/opt/gopath/src/chaincode
     # - ./../chaincode-advanced:/opt/gopath/src/chaincode-advanced
      - ./crypto-config:/opt/gopath/src/crypto
    networks:
      - certification


network/docker-compose-template.yaml
version: '2'

volumes:
  orderer.certification-network.com:
  peer0.iit.certification-network.com:
  peer1.iit.certification-network.com:
  peer0.mhrd.certification-network.com:
  peer1.mhrd.certification-network.com:
  peer0.upgrad.certification-network.com:
  peer1.upgrad.certification-network.com:

networks:
  certification:

services:

  ca.iit.certification-network.com:
    image: hyperledger/fabric-ca:latest
    environment:
      - FABRIC_CA_HOME=/etc/hyperledger/fabric-ca-server
      - FABRIC_CA_SERVER_CA_NAME=ca.iit.certification-network.com
      - FABRIC_CA_SERVER_TLS_ENABLED=false
      # - FABRIC_CA_SERVER_TLS_CERTFILE=/etc/hyperledger/fabric-ca-server-config/ca.iit.certification-network.com-cert.pem
      # - FABRIC_CA_SERVER_TLS_KEYFILE=/etc/hyperledger/fabric-ca-server-config/IIT_CA_PRIVATE_KEY
    ports:
      - "7054:7054"
    command: sh -c 'fabric-ca-server start -b admin:adminpw -d' # --ca.certfile /etc/hyperledger/fabric-ca-server-config/ca.iit.certification-network.com-cert.pem --ca.keyfile /etc/hyperledger/fabric-ca-server-config/IIT_CA_PRIVATE_KEY -b admin:adminpw -d'
    volumes:
      - ./crypto-config/peerOrganizations/iit.certification-network.com/ca/:/etc/hyperledger/fabric-ca-server-config
    container_name: ca.iit.certification-network.com
    networks:
      - certification

  ca.mhrd.certification-network.com:
    image: hyperledger/fabric-ca:latest
    environment:
      - FABRIC_CA_HOME=/etc/hyperledger/fabric-ca-server
      - FABRIC_CA_SERVER_CA_NAME=ca.mhrd.certification-network.com
      - FABRIC_CA_SERVER_TLS_ENABLED=false
      # - FABRIC_CA_SERVER_TLS_CERTFILE=/etc/hyperledger/fabric-ca-server-config/ca.mhrd.certification-network.com-cert.pem
      # - FABRIC_CA_SERVER_TLS_KEYFILE=/etc/hyperledger/fabric-ca-server-config/MHRD_CA_PRIVATE_KEY
    ports:
      - "8054:7054"
    command: sh -c 'fabric-ca-server start -b admin:adminpw -d' # --ca.certfile /etc/hyperledger/fabric-ca-server-config/ca.mhrd.certification-network.com-cert.pem --ca.keyfile /etc/hyperledger/fabric-ca-server-config/MHRD_CA_PRIVATE_KEY -b admin:adminpw -d'
    volumes:
      - ./crypto-config/peerOrganizations/mhrd.certification-network.com/ca/:/etc/hyperledger/fabric-ca-server-config
    container_name: ca.mhrd.certification-network.com
    networks:
      - certification

  ca.upgrad.certification-network.com:
    image: hyperledger/fabric-ca:latest
    environment:
      - FABRIC_CA_HOME=/etc/hyperledger/fabric-ca-server
      - FABRIC_CA_SERVER_CA_NAME=ca.upgrad.certification-network.com
      - FABRIC_CA_SERVER_TLS_ENABLED=false
      # - FABRIC_CA_SERVER_TLS_CERTFILE=/etc/hyperledger/fabric-ca-server-config/ca.upgrad.certification-network.com-cert.pem
      # - FABRIC_CA_SERVER_TLS_KEYFILE=/etc/hyperledger/fabric-ca-server-config/UPGRAD_CA_PRIVATE_KEY
    ports:
      - "9054:7054"
    command: sh -c 'fabric-ca-server start -b admin:adminpw -d' # --ca.certfile /etc/hyperledger/fabric-ca-server-config/ca.upgrad.certification-network.com-cert.pem --ca.keyfile /etc/hyperledger/fabric-ca-server-config/UPGRAD_CA_PRIVATE_KEY -b admin:adminpw -d'
    volumes:
      - ./crypto-config/peerOrganizations/upgrad.certification-network.com/ca/:/etc/hyperledger/fabric-ca-server-config
    container_name: ca.upgrad.certification-network.com
    networks:
      - certification

  orderer.certification-network.com:
    extends:
      file:   docker-base/docker-compose-base.yaml
      service: orderer.certification-network.com
    container_name: orderer.certification-network.com
    networks:
      - certification

  peer0.iit.certification-network.com:
    container_name: peer0.iit.certification-network.com
    extends:
      file:  docker-base/docker-compose-base.yaml
      service: peer0.iit.certification-network.com
    networks:
      - certification

  peer1.iit.certification-network.com:
    container_name: peer1.iit.certification-network.com
    extends:
      file:  docker-base/docker-compose-base.yaml
      service: peer1.iit.certification-network.com
    networks:
      - certification

  peer0.mhrd.certification-network.com:
    container_name: peer0.mhrd.certification-network.com
    extends:
      file:  docker-base/docker-compose-base.yaml
      service: peer0.mhrd.certification-network.com
    networks:
      - certification

  peer1.mhrd.certification-network.com:
    container_name: peer1.mhrd.certification-network.com
    extends:
      file:  docker-base/docker-compose-base.yaml
      service: peer1.mhrd.certification-network.com
    networks:
      - certification

  peer0.upgrad.certification-network.com:
    container_name: peer0.upgrad.certification-network.com
    extends:
      file:  docker-base/docker-compose-base.yaml
      service: peer0.upgrad.certification-network.com
    networks:
      - certification

  peer1.upgrad.certification-network.com:
    container_name: peer1.upgrad.certification-network.com
    extends:
      file:  docker-base/docker-compose-base.yaml
      service: peer1.upgrad.certification-network.com
    networks:
      - certification

  cli:
    container_name: cli
    image: hyperledger/fabric-tools:latest
    tty: true
    stdin_open: true
    environment:
      - GOPATH=/opt/gopath
      - CORE_VM_ENDPOINT=unix:///host/var/run/docker.sock
      - FABRIC_LOGGING_SPEC=INFO
      - CORE_PEER_ID=cli
      - CORE_PEER_ADDRESS=peer0.iit.certification-network.com:7051
      - CORE_PEER_LOCALMSPID=iitMSP
      - CORE_PEER_TLS_ENABLED=false
      - CORE_PEER_TLS_CERT_FILE=/opt/gopath/src/github.com/hyperledger/fabric/peer/crypto/peerOrganizations/iit.certification-network.com/peers/peer0.iit.certification-network.com/tls/server.crt
      - CORE_PEER_TLS_KEY_FILE=/opt/gopath/src/github.com/hyperledger/fabric/peer/crypto/peerOrganizations/iit.certification-network.com/peers/peer0.iit.certification-network.com/tls/server.key
      - CORE_PEER_TLS_ROOTCERT_FILE=/opt/gopath/src/github.com/hyperledger/fabric/peer/crypto/peerOrganizations/iit.certification-network.com/peers/peer0.iit.certification-network.com/tls/ca.crt
      - CORE_PEER_MSPCONFIGPATH=/opt/gopath/src/github.com/hyperledger/fabric/peer/crypto/peerOrganizations/iit.certification-network.com/users/Admin@iit.certification-network.com/msp
    working_dir: /opt/gopath/src/github.com/hyperledger/fabric/peer
    command: /bin/bash
    volumes:
      - /var/run/:/host/var/run/
      - ./../chaincode/:/opt/gopath/src/github.com/hyperledger/fabric/peer/chaincode/
   #   - ./../chaincode-advanced/:/opt/gopath/src/github.com/hyperledger/fabric/peer/chaincode-advanced/
      - ./crypto-config:/opt/gopath/src/github.com/hyperledger/fabric/peer/crypto/
      - ./scripts:/opt/gopath/src/github.com/hyperledger/fabric/peer/scripts/
      - ./channel-artifacts:/opt/gopath/src/github.com/hyperledger/fabric/peer/channel-artifacts
    depends_on:
      - ca.iit.certification-network.com
      - ca.mhrd.certification-network.com
      - ca.upgrad.certification-network.com
      - orderer.certification-network.com
      - peer0.iit.certification-network.com
      - peer1.iit.certification-network.com
      - peer0.mhrd.certification-network.com
      - peer1.mhrd.certification-network.com
      - peer0.upgrad.certification-network.com
      - peer1.upgrad.certification-network.com
    networks:
      - certification

  chaincode:
    container_name: chaincode
    image: hyperledger/fabric-ccenv:latest
    tty: true
    environment:
      - GOPATH=/opt/gopath
      - CORE_VM_ENDPOINT=unix:///host/var/run/docker.sock
      - FABRIC_LOGGING_SPEC=INFO
      - CORE_PEER_ID=chaincode
      - CORE_PEER_ADDRESS=peer0.iit.certification-network.com:7051
      - CORE_PEER_LOCALMSPID=iitMSP
      - CORE_PEER_TLS_ENABLED=false
      - CORE_PEER_MSPCONFIGPATH=/opt/gopath/src/crypto/peerOrganizations/iit.certification-network.com/users/Admin@iit.certification-network.com/msp
      - CORE_TLS_CLIENT_KEY_PATH=/opt/gopath/src/crypto/peerOrganizations/iit.certification-network.com/users/Admin@iit.certification-network.com/tls/client.key
      - CORE_TLS_CLIENT_CERT_PATH=/opt/gopath/src/crypto/peerOrganizations/iit.certification-network.com/users/Admin@iit.certification-network.com/tls/client.crt
      - CORE_PEER_TLS_ROOTCERT_FILE=/opt/gopath/src/crypto/peerOrganizations/iit.certification-network.com/users/Admin@iit.certification-network.com/tls/ca.crt
    working_dir: /opt/gopath/src/chaincode
    command: /bin/bash -c 'sleep 6000000'
    volumes:
      - /var/run/:/host/var/run/
      - ./../chaincode:/opt/gopath/src/chaincode
     # - ./../chaincode-advanced:/opt/gopath/src/chaincode-advanced
      - ./crypto-config:/opt/gopath/src/crypto
    networks:
      - certification


network/docker-compose.yaml 
version: '2'

volumes:
  orderer.certification-network.com:
  peer0.iit.certification-network.com:
  peer1.iit.certification-network.com:
  peer0.mhrd.certification-network.com:
  peer1.mhrd.certification-network.com:
  peer0.upgrad.certification-network.com:
  peer1.upgrad.certification-network.com:

networks:
  certification:

services:

  ca.iit.certification-network.com:
    image: hyperledger/fabric-ca:latest
    environment:
      - FABRIC_CA_HOME=/etc/hyperledger/fabric-ca-server
      - FABRIC_CA_SERVER_CA_NAME=ca.iit.certification-network.com
      - FABRIC_CA_SERVER_TLS_ENABLED=false
      # - FABRIC_CA_SERVER_TLS_CERTFILE=/etc/hyperledger/fabric-ca-server-config/ca.iit.certification-network.com-cert.pem
      # - FABRIC_CA_SERVER_TLS_KEYFILE=/etc/hyperledger/fabric-ca-server-config/754fccf4ad3f6a483161cf597b79fbdbdadaf1ee2f024e79da8c8e9b8bfb6dcb_sk
    ports:
      - "7054:7054"
    command: sh -c 'fabric-ca-server start -b admin:adminpw -d' # --ca.certfile /etc/hyperledger/fabric-ca-server-config/ca.iit.certification-network.com-cert.pem --ca.keyfile /etc/hyperledger/fabric-ca-server-config/754fccf4ad3f6a483161cf597b79fbdbdadaf1ee2f024e79da8c8e9b8bfb6dcb_sk
    volumes:
      - ./crypto-config/peerOrganizations/iit.certification-network.com/ca/:/etc/hyperledger/fabric-ca-server-config
    container_name: ca.iit.certification-network.com
    networks:
      - certification

  ca.mhrd.certification-network.com:
    image: hyperledger/fabric-ca:latest
    environment:
      - FABRIC_CA_HOME=/etc/hyperledger/fabric-ca-server
      - FABRIC_CA_SERVER_CA_NAME=ca.mhrd.certification-network.com
      - FABRIC_CA_SERVER_TLS_ENABLED=false
      # - FABRIC_CA_SERVER_TLS_CERTFILE=/etc/hyperledger/fabric-ca-server-config/ca.mhrd.certification-network.com-cert.pem
      # - FABRIC_CA_SERVER_TLS_KEYFILE=/etc/hyperledger/fabric-ca-server-config/69f46c1ef51a71ee0aaadc9cef23aef7b44df2b1e84dad62484980170c01aa22_sk
    ports:
      - "8054:7054"
    command: sh -c 'fabric-ca-server start -b admin:adminpw -d' # --ca.certfile /etc/hyperledger/fabric-ca-server-config/ca.mhrd.certification-network.com-cert.pem --ca.keyfile /etc/hyperledger/fabric-ca-server-config/69f46c1ef51a71ee0aaadc9cef23aef7b44df2b1e84dad62484980170c01aa22_sk
    volumes:
      - ./crypto-config/peerOrganizations/mhrd.certification-network.com/ca/:/etc/hyperledger/fabric-ca-server-config
    container_name: ca.mhrd.certification-network.com
    networks:
      - certification

  ca.upgrad.certification-network.com:
    image: hyperledger/fabric-ca:latest
    environment:
      - FABRIC_CA_HOME=/etc/hyperledger/fabric-ca-server
      - FABRIC_CA_SERVER_CA_NAME=ca.upgrad.certification-network.com
      - FABRIC_CA_SERVER_TLS_ENABLED=false
      # - FABRIC_CA_SERVER_TLS_CERTFILE=/etc/hyperledger/fabric-ca-server-config/ca.upgrad.certification-network.com-cert.pem
      # - FABRIC_CA_SERVER_TLS_KEYFILE=/etc/hyperledger/fabric-ca-server-config/9ed31fcf7a2fd649ac2e52254a041e4244dca899f86e6532789601c6fe18a019_sk
    ports:
      - "9054:7054"
    command: sh -c 'fabric-ca-server start -b admin:adminpw -d' # --ca.certfile /etc/hyperledger/fabric-ca-server-config/ca.upgrad.certification-network.com-cert.pem --ca.keyfile /etc/hyperledger/fabric-ca-server-config/9ed31fcf7a2fd649ac2e52254a041e4244dca899f86e6532789601c6fe18a019_sk
    volumes:
      - ./crypto-config/peerOrganizations/upgrad.certification-network.com/ca/:/etc/hyperledger/fabric-ca-server-config
    container_name: ca.upgrad.certification-network.com
    networks:
      - certification

  orderer.certification-network.com:
    extends:
      file:   docker-base/docker-compose-base.yaml
      service: orderer.certification-network.com
    container_name: orderer.certification-network.com
    networks:
      - certification

  peer0.iit.certification-network.com:
    container_name: peer0.iit.certification-network.com
    extends:
      file:  docker-base/docker-compose-base.yaml
      service: peer0.iit.certification-network.com
    networks:
      - certification

  peer1.iit.certification-network.com:
    container_name: peer1.iit.certification-network.com
    extends:
      file:  docker-base/docker-compose-base.yaml
      service: peer1.iit.certification-network.com
    networks:
      - certification

  peer0.mhrd.certification-network.com:
    container_name: peer0.mhrd.certification-network.com
    extends:
      file:  docker-base/docker-compose-base.yaml
      service: peer0.mhrd.certification-network.com
    networks:
      - certification

  peer1.mhrd.certification-network.com:
    container_name: peer1.mhrd.certification-network.com
    extends:
      file:  docker-base/docker-compose-base.yaml
      service: peer1.mhrd.certification-network.com
    networks:
      - certification

  peer0.upgrad.certification-network.com:
    container_name: peer0.upgrad.certification-network.com
    extends:
      file:  docker-base/docker-compose-base.yaml
      service: peer0.upgrad.certification-network.com
    networks:
      - certification

  peer1.upgrad.certification-network.com:
    container_name: peer1.upgrad.certification-network.com
    extends:
      file:  docker-base/docker-compose-base.yaml
      service: peer1.upgrad.certification-network.com
    networks:
      - certification

  cli:
    container_name: cli
    image: hyperledger/fabric-tools:latest
    tty: true
    stdin_open: true
    environment:
      - GOPATH=/opt/gopath
      - CORE_VM_ENDPOINT=unix:///host/var/run/docker.sock
      - FABRIC_LOGGING_SPEC=INFO
      - CORE_PEER_ID=cli
      - CORE_PEER_ADDRESS=peer0.iit.certification-network.com:7051
      - CORE_PEER_LOCALMSPID=iitMSP
      - CORE_PEER_TLS_ENABLED=false
      - CORE_PEER_TLS_CERT_FILE=/opt/gopath/src/github.com/hyperledger/fabric/peer/crypto/peerOrganizations/iit.certification-network.com/peers/peer0.iit.certification-network.com/tls/server.crt
      - CORE_PEER_TLS_KEY_FILE=/opt/gopath/src/github.com/hyperledger/fabric/peer/crypto/peerOrganizations/iit.certification-network.com/peers/peer0.iit.certification-network.com/tls/server.key
      - CORE_PEER_TLS_ROOTCERT_FILE=/opt/gopath/src/github.com/hyperledger/fabric/peer/crypto/peerOrganizations/iit.certification-network.com/peers/peer0.iit.certification-network.com/tls/ca.crt
      - CORE_PEER_MSPCONFIGPATH=/opt/gopath/src/github.com/hyperledger/fabric/peer/crypto/peerOrganizations/iit.certification-network.com/users/Admin@iit.certification-network.com/msp
    working_dir: /opt/gopath/src/github.com/hyperledger/fabric/peer
    command: /bin/bash
    volumes:
      - /var/run/:/host/var/run/
      - ./../chaincode/:/opt/gopath/src/github.com/hyperledger/fabric/peer/chaincode/
    #  - ./../chaincode-advanced/:/opt/gopath/src/github.com/hyperledger/fabric/peer/chaincode-advanced/
      - ./crypto-config:/opt/gopath/src/github.com/hyperledger/fabric/peer/crypto/
      - ./scripts:/opt/gopath/src/github.com/hyperledger/fabric/peer/scripts/
      - ./channel-artifacts:/opt/gopath/src/github.com/hyperledger/fabric/peer/channel-artifacts
    depends_on:
      - ca.iit.certification-network.com
      - ca.mhrd.certification-network.com
      - ca.upgrad.certification-network.com
      - orderer.certification-network.com
      - peer0.iit.certification-network.com
      - peer1.iit.certification-network.com
      - peer0.mhrd.certification-network.com
      - peer1.mhrd.certification-network.com
      - peer0.upgrad.certification-network.com
      - peer1.upgrad.certification-network.com
    networks:
      - certification

  chaincode:
    container_name: chaincode
    image: hyperledger/fabric-ccenv:latest
    tty: true
    environment:
      - GOPATH=/opt/gopath
      - CORE_VM_ENDPOINT=unix:///host/var/run/docker.sock
      - FABRIC_LOGGING_SPEC=INFO
      - CORE_PEER_ID=chaincode
      - CORE_PEER_ADDRESS=peer0.iit.certification-network.com:7051
      - CORE_PEER_LOCALMSPID=iitMSP
      - CORE_PEER_TLS_ENABLED=false
      - CORE_PEER_MSPCONFIGPATH=/opt/gopath/src/crypto/peerOrganizations/iit.certification-network.com/users/Admin@iit.certification-network.com/msp
      - CORE_TLS_CLIENT_KEY_PATH=/opt/gopath/src/crypto/peerOrganizations/iit.certification-network.com/users/Admin@iit.certification-network.com/tls/client.key
      - CORE_TLS_CLIENT_CERT_PATH=/opt/gopath/src/crypto/peerOrganizations/iit.certification-network.com/users/Admin@iit.certification-network.com/tls/client.crt
      - CORE_PEER_TLS_ROOTCERT_FILE=/opt/gopath/src/crypto/peerOrganizations/iit.certification-network.com/users/Admin@iit.certification-network.com/tls/ca.crt
    working_dir: /opt/gopath/src/chaincode
    command: /bin/bash -c 'sleep 6000000'
    volumes:
      - /var/run/:/host/var/run/
      - ./../chaincode:/opt/gopath/src/chaincode
     # - ./../chaincode-advanced:/opt/gopath/src/chaincode-advanced
      - ./crypto-config:/opt/gopath/src/crypto
    networks:
      - certification


network/fabricNetwork.sh 
#!/bin/bash

export PATH=${PWD}/bin:${PWD}:$PATH
export FABRIC_CFG_PATH=${PWD}
export VERBOSE=false

# Print the usage message
function printHelp() {
  echo "Usage: "
  echo "  network.sh <mode> [-c <channel name>] [-t <timeout>] [-d <delay>] [-f <docker-compose-file>] [-s <dbtype>] [-l <language>] [-o <consensus-type>] [-i <imagetag>] [-v]"
  echo "    <mode> - one of 'up', 'down', 'restart', 'retry', 'install', 'update' or 'generate'"
  echo "      - 'up' - bring up the network with docker-compose up"
  echo "      - 'down' - clear the network with docker-compose down"
  echo "      - 'restart' - restart the network"
  echo "      - 'retry' - retry bootstrapping the network"
  echo "      - 'install' - install a specific version of chaincode"
  echo "      - 'update' - update chaincode to a new version"
  echo "      - 'generate' - generate required certificates and genesis block"
  echo "    -c <channel name> - channel name to use (defaults to \"certificationchannel\")"
  echo "    -t <timeout> - CLI timeout duration in seconds (defaults to 20)"
  echo "    -d <delay> - delay duration in seconds (defaults to 20)"
  echo "    -f <docker-compose-file> - specify which docker-compose file use (defaults to docker-compose-e2e.yaml)"
  echo "    -s <dbtype> - the database backend to use: couchdb (default)"
  echo "    -l <language> - the chaincode language: node (default)"
  echo "    -i <imagetag> - the tag to be used to launch the network (defaults to \"latest\")"
  echo "    -v new version of updated chaincode to install on all endorsers"
  echo "  network.sh -h (print this message)"
  echo
  echo "Typically, one would first generate the required certificates and "
  echo "genesis block, then bring up the network. e.g.:"
  echo
  echo "	fabricNetwork.sh generate -c certificationchannel"
  echo "	fabricNetwork up -c certificationchannel -s couchdb"
  echo "        fabricNetwork up -c certificationchannel -s couchdb -i 1.4.0"
  echo "	fabricNetwork up -l node"
  echo "	fabricNetwork down -c certificationchannel"
  echo
  echo "Taking all defaults:"
  echo "	fabricNetwork generate"
  echo "	fabricNetwork up"
  echo "	fabricNetwork install"
  echo "	fabricNetwork down"
}

# Ask user for confirmation to proceed
function askProceed() {
  read -p "Continue? [Y/n] " ans
  case "$ans" in
  y | Y | "")
    echo "proceeding ..."
    ;;
  n | N)
    echo "exiting..."
    exit 1
    ;;
  *)
    echo "invalid response"
    askProceed
    ;;
  esac
}

# Obtain CONTAINER_IDS and remove them
# TODO Might want to make this optional - could clear other containers
function clearContainers() {
  CONTAINER_IDS=$(docker ps -a | awk '($2 ~ /dev-peer.*.mycc.*/) {print $1}')
  if [ -z "$CONTAINER_IDS" -o "$CONTAINER_IDS" == " " ]; then
    echo "---- No containers available for deletion ----"
  else
    docker rm -f "$CONTAINER_IDS"
  fi
}

# Delete any images that were generated as a part of this setup
# specifically the following images are often left behind:
# TODO list generated image naming patterns
function removeUnwantedImages() {
  DOCKER_IMAGE_IDS=$(docker images | awk '($1 ~ /dev-peer.*.mycc.*/) {print $3}')
  if [ -z "$DOCKER_IMAGE_IDS" -o "$DOCKER_IMAGE_IDS" == " " ]; then
    echo "---- No images available for deletion ----"
  else
    docker rmi -f "$DOCKER_IMAGE_IDS"
  fi
}

# Versions of fabric known not to work with this release of first-network
BLACKLISTED_VERSIONS="^1\.0\. ^1\.1\.0-preview ^1\.1\.0-alpha"

# Do some basic sanity checking to make sure that the appropriate versions of fabric
# binaries/images are available.  In the future, additional checking for the presence
# of go or other items could be added.
function checkPrereqs() {
  # Note, we check configtxlator externally because it does not require a config file, and peer in the
  # docker image because of FAB-8551 that makes configtxlator return 'development version' in docker
  LOCAL_VERSION=$(configtxlator version | sed -ne 's/ Version: //p')
  DOCKER_IMAGE_VERSION=$(docker run --rm hyperledger/fabric-tools:"$IMAGETAG" peer version | sed -ne 's/ Version: //p' | head -1)

  echo "LOCAL_VERSION=$LOCAL_VERSION"
  echo "DOCKER_IMAGE_VERSION=$DOCKER_IMAGE_VERSION"

  if [ "$LOCAL_VERSION" != "$DOCKER_IMAGE_VERSION" ]; then
    echo "=================== WARNING ==================="
    echo "  Local fabric binaries and docker images are  "
    echo "  out of  sync. This may cause problems.       "
    echo "==============================================="
  fi

  for UNSUPPORTED_VERSION in $BLACKLISTED_VERSIONS; do
    echo "$LOCAL_VERSION" | grep -q "$UNSUPPORTED_VERSION"
    if [ $? -eq 0 ]; then
      echo "ERROR! Local Fabric binary version of $LOCAL_VERSION does not match this newer version of certification-network and is unsupported. Either move to a later version of Fabric or checkout an earlier version of certification-network."
      exit 1
    fi

    echo "$DOCKER_IMAGE_VERSION" | grep -q "$UNSUPPORTED_VERSION"
    if [ $? -eq 0 ]; then
      echo "ERROR! Fabric Docker image version of $DOCKER_IMAGE_VERSION does not match this newer version of certification-network and is unsupported. Either move to a later version of Fabric or checkout an earlier version of certification-network."
      exit 1
    fi
  done
}

# Generate the needed certificates, the genesis block and start the network.
function networkUp() {
  checkPrereqs
  # generate artifacts if they don't exist
  if [ ! -d "crypto-config" ]; then
    generateCerts
    replacePrivateKey
    generateChannelArtifacts
  fi
  # Start the docker containers using compose file
  IMAGE_TAG=$IMAGETAG docker-compose -f "$COMPOSE_FILE" up -d 2>&1
  docker ps -a
  if [ $? -ne 0 ]; then
    echo "ERROR !!!! Unable to start network"
    exit 1
  fi
  # Wait for 10 seconds to allow the docker network to stabilise
  sleep 1
  echo "Sleeping 10s to allow cluster to complete booting"
  sleep 9

  # now run the bootstrap script
  docker exec cli scripts/bootstrap.sh "$CHANNEL_NAME" "$CLI_DELAY" "$LANGUAGE" "$CLI_TIMEOUT" "$VERBOSE"
  if [ $? -ne 0 ]; then
    echo "ERROR !!!! Test failed"
    exit 1
  fi
}

# Generate the needed certificates, the genesis block and start the network.
function bootstrapRetry() {
  checkPrereqs
  # now run the bootstrap script
  docker exec cli scripts/bootstrap.sh "$CHANNEL_NAME" "$CLI_DELAY" "$LANGUAGE" "$CLI_TIMEOUT" "$VERBOSE"
}

function updateChaincode() {
  checkPrereqs
  docker exec cli scripts/updateChaincode.sh "$CHANNEL_NAME" "$CLI_DELAY" "$LANGUAGE" "$VERSION_NO" "$TYPE"
}

function installChaincode() {
  checkPrereqs
  docker exec cli scripts/installChaincode.sh "$CHANNEL_NAME" "$CLI_DELAY" "$LANGUAGE" "$VERSION_NO" "$TYPE"
}

# Tear down running network
function networkDown() {
  # stop all containers
  # stop kafka and zookeeper containers in case we're running with kafka consensus-type
  docker-compose -f "$COMPOSE_FILE" down --volumes --remove-orphans

  # Don't remove the generated artifacts -- note, the ledgers are always removed
  if [ "$MODE" != "restart" ]; then
    # Bring down the network, deleting the volumes
    #Delete any ledger backups
    docker run -v "$PWD":/tmp/certificationchannel --rm hyperledger/fabric-tools:"$IMAGETAG" rm -Rf /tmp/certificationchannel/ledgers-backup
    #Cleanup the chaincode containers
    clearContainers
    #Cleanup images
    removeUnwantedImages
    # remove orderer block and other channel configuration transactions and certs
    rm -rf channel-artifacts/*.block channel-artifacts/*.tx crypto-config
  fi
}

# Using docker-compose-e2e.yml, replace constants with private key file names
# generated by the cryptogen tool and output a docker-compose-e2e.yml specific to this
# configuration
function replacePrivateKey() {
  # sed on MacOSX does not support -i flag with a null extension. We will use
  # 't' for our back-up's extension and delete it at the end of the function
  ARCH=$(uname -s | grep Darwin)
  if [ "$ARCH" == "Darwin" ]; then
    OPTS="-it"
  else
    OPTS="-i"
  fi

  # Copy the template to the file that will be modified to add the private key
  cp docker-compose-template.yaml docker-compose-e2e.yml

  # The next steps will replace the template's contents with the
  # actual values of the private key file names for the two CAs.
  CURRENT_DIR=$PWD
  cd crypto-config/peerOrganizations/iit.certification-network.com/ca/ || exit
  PRIV_KEY=$(ls *_sk)
  cd "$CURRENT_DIR" || exit
  sed $OPTS "s/IIT_CA_PRIVATE_KEY/${PRIV_KEY}/g" docker-compose-e2e.yml
  cd crypto-config/peerOrganizations/mhrd.certification-network.com/ca/ || exit
  PRIV_KEY=$(ls *_sk)
  cd "$CURRENT_DIR" || exit
  sed $OPTS "s/MHRD_CA_PRIVATE_KEY/${PRIV_KEY}/g" docker-compose-e2e.yml
  cd crypto-config/peerOrganizations/upgrad.certification-network.com/ca/ || exit
  PRIV_KEY=$(ls *_sk)
  cd "$CURRENT_DIR" || exit
  sed $OPTS "s/UPGRAD_CA_PRIVATE_KEY/${PRIV_KEY}/g" docker-compose-e2e.yml
  # If MacOSX, remove the temporary backup of the docker-compose file
  if [ "$ARCH" == "Darwin" ]; then
    rm docker-compose-e2e.ymlt
  fi
}

# Generates Org certs using cryptogen tool
function generateCerts() {
  which cryptogen
  if [ "$?" -ne 0 ]; then
    echo "cryptogen tool not found. exiting"
    exit 1
  fi
  echo
  echo "##########################################################"
  echo "##### Generate certificates using cryptogen tool #########"
  echo "##########################################################"

  if [ -d "crypto-config" ]; then
    rm -Rf crypto-config
  fi
  set -x
  cryptogen generate --config=./crypto-config.yaml
  res=$?
  set +x
  if [ $res -ne 0 ]; then
    echo "Failed to generate certificates..."
    exit 1
  fi
  echo
}

# Generate orderer genesis block, channel configuration transaction and
# anchor peer update transactions
function generateChannelArtifacts() {
  which configtxgen
  if [ "$?" -ne 0 ]; then
    echo "configtxgen tool not found. exiting"
    exit 1
  fi

  echo "##########################################################"
  echo "#########  Generating Orderer Genesis block ##############"
  echo "##########################################################"
  # Note: For some unknown reason (at least for now) the block file can't be
  # named orderer.genesis.block or the orderer will fail to launch!
  set -x
  configtxgen -profile OrdererGenesis -channelID upgrad-sys-channel -outputBlock ./channel-artifacts/genesis.block
  res=$?
  set +x
  if [ $res -ne 0 ]; then
    echo "Failed to generate orderer genesis block..."
    exit 1
  fi
  echo
  echo "#################################################################"
  echo "### Generating channel configuration transaction 'channel.tx' ###"
  echo "#################################################################"
  set -x
  configtxgen -profile CertificationChannel -outputCreateChannelTx ./channel-artifacts/channel.tx -channelID "$CHANNEL_NAME"
  res=$?
  set +x
  if [ $res -ne 0 ]; then
    echo "Failed to generate channel configuration transaction..."
    exit 1
  fi

  echo
  echo "#################################################################"
  echo "#######    Generating anchor peer update for iitMSP   ##########"
  echo "#################################################################"
  set -x
  configtxgen -profile CertificationChannel -outputAnchorPeersUpdate ./channel-artifacts/iitMSPanchors.tx -channelID "$CHANNEL_NAME" -asOrg iitMSP
  res=$?
  set +x
  if [ $res -ne 0 ]; then
    echo "Failed to generate anchor peer update for IIT..."
    exit 1
  fi

  echo
  echo "#################################################################"
  echo "#######    Generating anchor peer update for mhrdMSP   ##########"
  echo "#################################################################"
  set -x
  configtxgen -profile CertificationChannel -outputAnchorPeersUpdate ./channel-artifacts/mhrdMSPanchors.tx -channelID "$CHANNEL_NAME" -asOrg mhrdMSP
  res=$?
  set +x
  if [ $res -ne 0 ]; then
    echo "Failed to generate anchor peer update for MHRD..."
    exit 1
  fi
  echo

  echo
  echo "#################################################################"
  echo "#######    Generating anchor peer update for upgradMSP   ##########"
  echo "#################################################################"
  set -x
  configtxgen -profile CertificationChannel -outputAnchorPeersUpdate ./channel-artifacts/upgradMSPanchors.tx -channelID "$CHANNEL_NAME" -asOrg upgradMSP
  res=$?
  set +x
  if [ $res -ne 0 ]; then
    echo "Failed to generate anchor peer update for UPGRAD..."
    exit 1
  fi
  echo

}

# timeout duration - the duration the CLI should wait for a response from
# another container before giving up
CLI_TIMEOUT=15
# default for delay between commands
CLI_DELAY=5
# channel name defaults to "certificationchannel"
CHANNEL_NAME="certificationchannel"
# version for updating chaincode
VERSION_NO=1.1
# type of chaincode to be installed
TYPE="basic"
# use this as the default docker-compose yaml definition
COMPOSE_FILE=docker-compose-e2e.yml
# use node as the default language for chaincode
LANGUAGE="node"
# default image tag
IMAGETAG="latest"
# Parse commandline args
if [ "$1" = "-m" ]; then # supports old usage, muscle memory is powerful!
  shift
fi
MODE=$1
shift
# Determine which command to run
if [ "$MODE" == "up" ]; then
  EXPMODE="Starting"
elif [ "$MODE" == "down" ]; then
  EXPMODE="Stopping"
elif [ "$MODE" == "restart" ]; then
  EXPMODE="Restarting"
elif [ "$MODE" == "retry" ]; then
  EXPMODE="Retrying network bootstrap"
elif [ "$MODE" == "update" ]; then
  EXPMODE="Updating chaincode"
elif [ "$MODE" == "install" ]; then
  EXPMODE="Installing chaincode"
elif [ "$MODE" == "generate" ]; then
  EXPMODE="Generating certs and genesis block"
else
  printHelp
  exit 1
fi

while getopts "h?c:t:d:f:l:i:v:m:" opt; do
  case "$opt" in
  h | \?)
    printHelp
    exit 0
    ;;
  c)
    CHANNEL_NAME=$OPTARG
    ;;
  t)
    CLI_TIMEOUT=$OPTARG
    ;;
  d)
    CLI_DELAY=$OPTARG
    ;;
  f)
    COMPOSE_FILE=$OPTARG
    ;;
  l)
    LANGUAGE=$OPTARG
    ;;
  v)
    VERSION_NO=$OPTARG
    ;;
  m)
    TYPE=$OPTARG
    ;;
  i)
    IMAGETAG=$(go env GOARCH)"-"$OPTARG
    ;;
  esac
done

# Announce what was requested
echo "${EXPMODE} for channel '${CHANNEL_NAME}' with CLI timeout of '${CLI_TIMEOUT}' seconds and CLI delay of '${CLI_DELAY}' seconds and chaincode version '${VERSION_NO}' "
# ask for confirmation to proceed
askProceed

#Create the network using docker compose
if [ "${MODE}" == "up" ]; then
  networkUp
elif [ "${MODE}" == "down" ]; then ## Clear the network
  networkDown
elif [ "${MODE}" == "generate" ]; then ## Generate Artifacts
  generateCerts
  replacePrivateKey
  generateChannelArtifacts
elif [ "${MODE}" == "restart" ]; then ## Restart the network
  networkDown
  networkUp
elif [ "${MODE}" == "retry" ]; then ## Retry bootstrapping the network
  bootstrapRetry
elif [ "${MODE}" == "update" ]; then ## Run the composer setup commands
  updateChaincode
elif [ "${MODE}" == "install" ]; then ## Run the composer setup commands
  installChaincode
else
  printHelp
  exit 1
fi


chaincode/package.json
{
  "name": "pharmanet",
  "version": "0.0.1",
  "description": "pharmanet Network",
  "main": "index.js",
  "engines": {
    "node": ">=8",
    "npm": ">=5"
  },
  "scripts": {
    "lint": "eslint .",
    "pretest": "npm run lint",
    "test": "nyc mocha test --recursive",
    "start-dev": "fabric-chaincode-node start --peer.address  peer0.manufacturer.pharma-network.com:7053 --chaincode-id-name pharmanet:1.1",
    "start": "fabric-chaincode-node start",
    "mocha": "mocha test --recursive"
  },
  "engineStrict": true,
  "author": "Avi",
  "dependencies": {
    "fabric-contract-api": "~1.4.2",
    "fabric-shim": "~1.4.2"
  },
  "devDependencies": {
    "chai": "^4.1.2",
    "chai-as-promised": "^7.1.1",
    "eslint": "^4.19.1",
    "mocha": "^5.2.0",
    "nyc": "^12.0.2",
    "sinon": "^6.0.0",
    "sinon-chai": "^3.2.0"
  },
  "nyc": {
    "exclude": [
      "coverage/**",
      "test/**"
    ],
    "reporter": [
      "text-summary",
      "html"
    ],
    "all": true,
    "check-coverage": true,
    "statements": 100,
    "branches": 100,
    "functions": 100,
    "lines": 100
  }
}


chaincode/contract.js
'use strict';

const {Contract} = require('fabric-contract-api');

class CertnetContract extends Contract {
	
	constructor() {
		// Provide a custom name to refer to this smart contract
		super('org.certification-network.certnet');
	}
	
	/* ****** All custom functions are defined below ***** */
	
	// This is a basic user defined function used at the time of instantiating the smart contract
	// to print the success message on console
	async instantiate(ctx) {
		console.log('Certnet Smart Contract Instantiated');
	}
	
	/**
	 * Create a new student account on the network
	 * @param ctx - The transaction context object
	 * @param studentId - ID to be used for creating a new student account
	 * @param name - Name of the student
	 * @param email - Email ID of the student
	 * @returns
	 */
	async createStudent(ctx, studentId, name, email) {
		// Create a new composite key for the new student account
		const studentKey = ctx.stub.createCompositeKey('org.certification-network.certnet.student', [studentId]);
		
		// Create a student object to be stored in blockchain
		let newStudentObject = {
			studentId: studentId,
			name: name,
			email: email,
			school: ctx.clientIdentity.getID(),
			createdAt: new Date(),
			updatedAt: new Date(),
		};
		
		// Convert the JSON object to a buffer and send it to blockchain for storage
		let dataBuffer = Buffer.from(JSON.stringify(newStudentObject));
		await ctx.stub.putState(studentKey, dataBuffer);
		// Return value of new student account created to user
		return newStudentObject;
	}
	
	/**
	 * Get a student account's details from the blockchain
	 * @param ctx - The transaction context
	 * @param studentId - Student ID for which to fetch details
	 * @returns
	 */
	async getStudent(ctx, studentId) {
		// Create the composite key required to fetch record from blockchain
		const studentKey = ctx.stub.createCompositeKey('org.certification-network.certnet.student', [studentId]);
		
		// Return value of student account from blockchain
		let studentBuffer = await ctx.stub
				.getState(studentKey)
				.catch(err => console.log(err));
		return JSON.parse(studentBuffer.toString());
	}
	
	/**
	 * Issue a certificate to the student after completing the course
	 * @param ctx
	 * @param studentId
	 * @param courseId
	 * @param gradeReceived
	 * @param originalHash
	 * @returns {Object}
	 */
	async issueCertificate(ctx, studentId, courseId, gradeReceived, originalHash) {
		let msgSender = ctx.clientIdentity.getID();
		let certificateKey = ctx.stub.createCompositeKey('org.certification-network.certnet.certificate',[courseId + '-' + studentId]);
		let studentKey = ctx.stub.createCompositeKey('org.certification-network.certnet.student', [studentId]);
		
		// Fetch student with given ID from blockchain
		let student = await ctx.stub
				.getState(studentKey)
				.catch(err => console.log(err));
		
		// Fetch certificate with given ID from blockchain
		let certificate = await ctx.stub
				.getState(certificateKey)
				.catch(err => console.log(err));
		
		// Make sure that student already exists and certificate with given ID does not exist.
		if (student.length === 0 || certificate.length !== 0) {
			throw new Error('Invalid Student ID: ' + studentId + ' or Course ID: ' + courseId + '. Either student does not exist or certificate already exists.');
		} else {
			let certificateObject = {
				studentId: studentId,
				courseId: courseId,
				teacher: msgSender,
				certId: courseId + '-' + studentId,
				originalHash: originalHash,
				grade: gradeReceived,
				createdAt: new Date(),
				updatedAt: new Date(),
			};
			// Convert the JSON object to a buffer and send it to blockchain for storage
			let dataBuffer = Buffer.from(JSON.stringify(certificateObject));
			await ctx.stub.putState(certificateKey, dataBuffer);
			// Return value of new certificate issued to student
			return certificateObject;
		}
	}
	
	/**
	 * Verify Certificate 
	 * @param ctx
	 * @param studentId
	 * @param courseId
	 * @param currentHash
	 * @returns {Object}
	 */
	async verifyCertificate(ctx, studentId, courseId, currentHash) {
		let verifier = ctx.clientIdentity.getID();
		let certificateKey = ctx.stub.createCompositeKey('org.certification-network.certnet.certificate', [courseId + '-' + studentId]);
		
		// Fetch certificate with given ID from blockchain
		let certificateBuffer = await ctx.stub
				.getState(certificateKey)
				.catch(err => console.log(err));
		
		// Convert the received certificate buffer to a JSON object
		const certificate = JSON.parse(certificateBuffer.toString());
		
		// Check if original certificate hash matches the current hash provided for certificate
		if (certificate === undefined || certificate.originalHash !== currentHash) {
			// Certificate is not valid, issue event notifying the student application
			let verificationResult = {
				certificate: courseId + '-' + studentId,
				student: studentId,
				verifier: verifier,
				result: 'xxx - INVALID',
				verifiedOn: new Date()
			};
			ctx.stub.setEvent('verifyCertificate', Buffer.from(JSON.stringify(verificationResult)));
			return verificationResult;
		} else {
			// Certificate is valid, issue event notifying the student application
			let verificationResult = {
				certificate: courseId + '-' + studentId,
				student: studentId,
				verifier: verifier,
				result: '*** - VALID',
				verifiedOn: new Date()
			};
			ctx.stub.setEvent('verifyCertificate', Buffer.from(JSON.stringify(verificationResult)));
			return verificationResult;
		}
	}
	
}

module.exports = CertnetContract;



application/contractHelper.js
const fs = require('fs');
const yaml = require('js-yaml');
const { FileSystemWallet, Gateway } = require('fabric-network');
let gateway;


async function getContractInstance() {
	
	// A gateway defines which peer is used to access Fabric network
	// It uses a common connection profile (CCP) to connect to a Fabric Peer
	// A CCP is defined manually in file connection-profile-iit.yaml
	gateway = new Gateway();
	
	// A wallet is where the credentials to be used for this transaction exist
	// Credentials for user IIT_ADMIN was initially added to this wallet.
	const wallet = new FileSystemWallet('./identity/mhrd');
	
	// What is the username of this Client user accessing the network?
	const fabricUserName = 'MHRD_ADMIN';
	
	// Load connection profile; will be used to locate a gateway; The CCP is converted from YAML to JSON.
	let connectionProfile = yaml.safeLoad(fs.readFileSync('./connection-profile-mhrd.yaml', 'utf8'));
	
	// Set connection options; identity and wallet
	let connectionOptions = {
		wallet: wallet,
		identity: fabricUserName,
		discovery: { enabled: false, asLocalhost: true }
	};
	
	// Connect to gateway using specified parameters
	console.log('.....Connecting to Fabric Gateway');
	await gateway.connect(connectionProfile, connectionOptions);
	
	// Access certification channel
	console.log('.....Connecting to channel - certificationchannel');
	const channel = await gateway.getNetwork('certificationchannel');
	
	// Get instance of deployed Certnet contract
	// @param Name of chaincode
	// @param Name of smart contract
	console.log('.....Connecting to Certnet Smart Contract');
	return channel.getContract('certnet', 'org.certification-network.certnet');
}

function disconnect() {
	console.log('.....Disconnecting from Fabric Gateway');
	gateway.disconnect();
}

module.exports.getContractInstance = getContractInstance;
module.exports.disconnect = disconnect;


application/package-lock.json
{
	"name": "certification_network",
	"version": "1.0.0",
	"lockfileVersion": 3,
	"requires": true,
	"packages": {
		"": {
			"name": "certification_network",
			"version": "1.0.0",
			"dependencies": {
				"cors": "^2.8.5",
				"express": "^4.17.1",
				"fabric-client": "~1.4.4",
				"fabric-network": "~1.4.4",
				"js-yaml": "^3.12.0",
				"pug": "^2.0.4"
			},
			"devDependencies": {
				"eslint": "^5.6.0"
			}
		},
		"node_modules/@babel/code-frame": {
			"version": "7.5.5",
			"resolved": "https://registry.npmjs.org/@babel/code-frame/-/code-frame-7.5.5.tgz",
			"integrity": "sha512-27d4lZoomVyo51VegxI20xZPuSHusqbQag/ztrBC7wegWoQ1nLREPVSKSW8byhTlzTKyNE4ifaTA6lCp7JjpFw==",
			"dev": true,
			"dependencies": {
				"@babel/highlight": "^7.0.0"
			}
		},
		"node_modules/@babel/highlight": {
			"version": "7.5.0",
			"resolved": "https://registry.npmjs.org/@babel/highlight/-/highlight-7.5.0.tgz",
			"integrity": "sha512-7dV4eu9gBxoM0dAnj/BCFDW9LFU0zvTrkq0ugM7pnHEgguOEeOz1so2ZghEdzviYzQEED0r4EAgpsBChKy1TRQ==",
			"dev": true,
			"dependencies": {
				"chalk": "^2.0.0",
				"esutils": "^2.0.2",
				"js-tokens": "^4.0.0"
			}
		},
		"node_modules/@types/babel-types": {
			"version": "7.0.7",
			"resolved": "https://registry.npmjs.org/@types/babel-types/-/babel-types-7.0.7.tgz",
			"integrity": "sha512-dBtBbrc+qTHy1WdfHYjBwRln4+LWqASWakLHsWHR2NWHIFkv4W3O070IGoGLEBrJBvct3r0L1BUPuvURi7kYUQ=="
		},
		"node_modules/@types/babylon": {
			"version": "6.16.5",
			"resolved": "https://registry.npmjs.org/@types/babylon/-/babylon-6.16.5.tgz",
			"integrity": "sha512-xH2e58elpj1X4ynnKp9qSnWlsRTIs6n3tgLGNfwAGHwePw0mulHQllV34n0T25uYSu1k0hRKkWXF890B1yS47w==",
			"dependencies": {
				"@types/babel-types": "*"
			}
		},
		"node_modules/@types/bytebuffer": {
			"version": "5.0.40",
			"resolved": "https://registry.npmjs.org/@types/bytebuffer/-/bytebuffer-5.0.40.tgz",
			"integrity": "sha512-h48dyzZrPMz25K6Q4+NCwWaxwXany2FhQg/ErOcdZS1ZpsaDnDMZg8JYLMTGz7uvXKrcKGJUZJlZObyfgdaN9g==",
			"dependencies": {
				"@types/long": "*",
				"@types/node": "*"
			}
		},
		"node_modules/@types/long": {
			"version": "4.0.0",
			"resolved": "https://registry.npmjs.org/@types/long/-/long-4.0.0.tgz",
			"integrity": "sha512-1w52Nyx4Gq47uuu0EVcsHBxZFJgurQ+rTKS3qMHxR1GY2T8c2AJYd6vZoZ9q1rupaDjU0yT+Jc2XTyXkjeMA+Q=="
		},
		"node_modules/@types/node": {
			"version": "12.7.5",
			"resolved": "https://registry.npmjs.org/@types/node/-/node-12.7.5.tgz",
			"integrity": "sha512-9fq4jZVhPNW8r+UYKnxF1e2HkDWOWKM5bC2/7c9wPV835I0aOrVbS/Hw/pWPk2uKrNXQqg9Z959Kz+IYDd5p3w=="
		},
		"node_modules/accepts": {
			"version": "1.3.7",
			"resolved": "https://registry.npmjs.org/accepts/-/accepts-1.3.7.tgz",
			"integrity": "sha512-Il80Qs2WjYlJIBNzNkK6KYqlVMTbZLXgHx2oT0pU/fjRHyEp+PEfEPY0R3WCwAGVOtauxh1hOxNgIf5bv7dQpA==",
			"dependencies": {
				"mime-types": "~2.1.24",
				"negotiator": "0.6.2"
			},
			"engines": {
				"node": ">= 0.6"
			}
		},
		"node_modules/acorn": {
			"version": "6.3.0",
			"resolved": "https://registry.npmjs.org/acorn/-/acorn-6.3.0.tgz",
			"integrity": "sha512-/czfa8BwS88b9gWQVhc8eknunSA2DoJpJyTQkhheIf5E48u1N0R4q/YxxsAeqRrmK9TQ/uYfgLDfZo91UlANIA==",
			"dev": true,
			"bin": {
				"acorn": "bin/acorn"
			},
			"engines": {
				"node": ">=0.4.0"
			}
		},
		"node_modules/acorn-globals": {
			"version": "3.1.0",
			"resolved": "https://registry.npmjs.org/acorn-globals/-/acorn-globals-3.1.0.tgz",
			"integrity": "sha1-/YJw9x+7SZawBPqIDuXUZXOnMb8=",
			"dependencies": {
				"acorn": "^4.0.4"
			}
		},
		"node_modules/acorn-globals/node_modules/acorn": {
			"version": "4.0.13",
			"resolved": "https://registry.npmjs.org/acorn/-/acorn-4.0.13.tgz",
			"integrity": "sha1-EFSVrlNh1pe9GVyCUZLhrX8lN4c=",
			"bin": {
				"acorn": "bin/acorn"
			},
			"engines": {
				"node": ">=0.4.0"
			}
		},
		"node_modules/acorn-jsx": {
			"version": "5.0.2",
			"resolved": "https://registry.npmjs.org/acorn-jsx/-/acorn-jsx-5.0.2.tgz",
			"integrity": "sha512-tiNTrP1MP0QrChmD2DdupCr6HWSFeKVw5d/dHTu4Y7rkAkRhU/Dt7dphAfIUyxtHpl/eBVip5uTNSpQJHylpAw==",
			"dev": true,
			"peerDependencies": {
				"acorn": "^6.0.0 || ^7.0.0"
			}
		},
		"node_modules/ajv": {
			"version": "6.10.2",
			"resolved": "https://registry.npmjs.org/ajv/-/ajv-6.10.2.tgz",
			"integrity": "sha512-TXtUUEYHuaTEbLZWIKUr5pmBuhDLy+8KYtPYdcV8qC+pOZL+NKqYwvWSRrVXHn+ZmRRAu8vJTAznH7Oag6RVRw==",
			"dependencies": {
				"fast-deep-equal": "^2.0.1",
				"fast-json-stable-stringify": "^2.0.0",
				"json-schema-traverse": "^0.4.1",
				"uri-js": "^4.2.2"
			}
		},
		"node_modules/align-text": {
			"version": "0.1.4",
			"resolved": "https://registry.npmjs.org/align-text/-/align-text-0.1.4.tgz",
			"integrity": "sha1-DNkKVhCT810KmSVsIrcGlDP60Rc=",
			"dependencies": {
				"kind-of": "^3.0.2",
				"longest": "^1.0.1",
				"repeat-string": "^1.5.2"
			},
			"engines": {
				"node": ">=0.10.0"
			}
		},
		"node_modules/ansi-escapes": {
			"version": "3.2.0",
			"resolved": "https://registry.npmjs.org/ansi-escapes/-/ansi-escapes-3.2.0.tgz",
			"integrity": "sha512-cBhpre4ma+U0T1oM5fXg7Dy1Jw7zzwv7lt/GoCpr+hDQJoYnKVPLL4dCvSEFMmQurOQvSrwT7SL/DAlhBI97RQ==",
			"dev": true,
			"engines": {
				"node": ">=4"
			}
		},
		"node_modules/ansi-regex": {
			"version": "2.1.1",
			"resolved": "https://registry.npmjs.org/ansi-regex/-/ansi-regex-2.1.1.tgz",
			"integrity": "sha1-w7M6te42DYbg5ijwRorn7yfWVN8=",
			"engines": {
				"node": ">=0.10.0"
			}
		},
		"node_modules/ansi-styles": {
			"version": "3.2.1",
			"resolved": "https://registry.npmjs.org/ansi-styles/-/ansi-styles-3.2.1.tgz",
			"integrity": "sha512-VT0ZI6kZRdTh8YyJw3SMbYm/u+NqfsAxEpWO0Pf9sq8/e94WxxOpPKx9FR1FlyCtOVDNOQ+8ntlqFxiRc+r5qA==",
			"dev": true,
			"dependencies": {
				"color-convert": "^1.9.0"
			},
			"engines": {
				"node": ">=4"
			}
		},
		"node_modules/argparse": {
			"version": "1.0.10",
			"resolved": "https://registry.npmjs.org/argparse/-/argparse-1.0.10.tgz",
			"integrity": "sha512-o5Roy6tNG4SL/FOkCAN6RzjiakZS25RLYFrcMttJqbdd8BWrnA+fGz57iN5Pb06pvBGvl5gQ0B48dJlslXvoTg==",
			"dependencies": {
				"sprintf-js": "~1.0.2"
			}
		},
		"node_modules/array-flatten": {
			"version": "1.1.1",
			"resolved": "https://registry.npmjs.org/array-flatten/-/array-flatten-1.1.1.tgz",
			"integrity": "sha1-ml9pkFGx5wczKPKgCJaLZOopVdI="
		},
		"node_modules/asap": {
			"version": "2.0.6",
			"resolved": "https://registry.npmjs.org/asap/-/asap-2.0.6.tgz",
			"integrity": "sha1-5QNHYR1+aQlDIIu9r+vLwvuGbUY="
		},
		"node_modules/ascli": {
			"version": "1.0.1",
			"resolved": "https://registry.npmjs.org/ascli/-/ascli-1.0.1.tgz",
			"integrity": "sha1-vPpZdKYvGOgcq660lzKrSoj5Brw=",
			"dependencies": {
				"colour": "~0.7.1",
				"optjs": "~3.2.2"
			}
		},
		"node_modules/asn1": {
			"version": "0.2.4",
			"resolved": "https://registry.npmjs.org/asn1/-/asn1-0.2.4.tgz",
			"integrity": "sha512-jxwzQpLQjSmWXgwaCZE9Nz+glAG01yF1QnWgbhGwHI5A6FRIEY6IVqtHhIepHqI7/kyEyQEagBC5mBEFlIYvdg==",
			"dependencies": {
				"safer-buffer": "~2.1.0"
			}
		},
		"node_modules/assert-plus": {
			"version": "1.0.0",
			"resolved": "https://registry.npmjs.org/assert-plus/-/assert-plus-1.0.0.tgz",
			"integrity": "sha1-8S4PPF13sLHN2RRpQuTpbB5N1SU=",
			"engines": {
				"node": ">=0.8"
			}
		},
		"node_modules/astral-regex": {
			"version": "1.0.0",
			"resolved": "https://registry.npmjs.org/astral-regex/-/astral-regex-1.0.0.tgz",
			"integrity": "sha512-+Ryf6g3BKoRc7jfp7ad8tM4TtMiaWvbF/1/sQcZPkkS7ag3D5nMBCe2UfOTONtAkaG0tO0ij3C5Lwmf1EiyjHg==",
			"dev": true,
			"engines": {
				"node": ">=4"
			}
		},
		"node_modules/async": {
			"version": "1.5.2",
			"resolved": "https://registry.npmjs.org/async/-/async-1.5.2.tgz",
			"integrity": "sha1-7GphrlZIDAw8skHJVhjiCJL5Zyo="
		},
		"node_modules/asynckit": {
			"version": "0.4.0",
			"resolved": "https://registry.npmjs.org/asynckit/-/asynckit-0.4.0.tgz",
			"integrity": "sha1-x57Zf380y48robyXkLzDZkdLS3k="
		},
		"node_modules/aws-sign2": {
			"version": "0.7.0",
			"resolved": "https://registry.npmjs.org/aws-sign2/-/aws-sign2-0.7.0.tgz",
			"integrity": "sha1-tG6JCTSpWR8tL2+G1+ap8bP+dqg=",
			"engines": {
				"node": "*"
			}
		},
		"node_modules/aws4": {
			"version": "1.8.0",
			"resolved": "https://registry.npmjs.org/aws4/-/aws4-1.8.0.tgz",
			"integrity": "sha512-ReZxvNHIOv88FlT7rxcXIIC0fPt4KZqZbOlivyWtXLt8ESx84zd3kMC6iK5jVeS2qt+g7ftS7ye4fi06X5rtRQ=="
		},
		"node_modules/babel-runtime": {
			"version": "6.26.0",
			"resolved": "https://registry.npmjs.org/babel-runtime/-/babel-runtime-6.26.0.tgz",
			"integrity": "sha1-llxwWGaOgrVde/4E/yM3vItWR/4=",
			"dependencies": {
				"core-js": "^2.4.0",
				"regenerator-runtime": "^0.11.0"
			}
		},
		"node_modules/babel-types": {
			"version": "6.26.0",
			"resolved": "https://registry.npmjs.org/babel-types/-/babel-types-6.26.0.tgz",
			"integrity": "sha1-o7Bz+Uq0nrb6Vc1lInozQ4BjJJc=",
			"dependencies": {
				"babel-runtime": "^6.26.0",
				"esutils": "^2.0.2",
				"lodash": "^4.17.4",
				"to-fast-properties": "^1.0.3"
			}
		},
		"node_modules/babylon": {
			"version": "6.18.0",
			"resolved": "https://registry.npmjs.org/babylon/-/babylon-6.18.0.tgz",
			"integrity": "sha512-q/UEjfGJ2Cm3oKV71DJz9d25TPnq5rhBVL2Q4fA5wcC3jcrdn7+SssEybFIxwAvvP+YCsCYNKughoF33GxgycQ==",
			"bin": {
				"babylon": "bin/babylon.js"
			}
		},
		"node_modules/balanced-match": {
			"version": "1.0.0",
			"resolved": "https://registry.npmjs.org/balanced-match/-/balanced-match-1.0.0.tgz",
			"integrity": "sha1-ibTRmasr7kneFk6gK4nORi1xt2c="
		},
		"node_modules/bcrypt-pbkdf": {
			"version": "1.0.2",
			"resolved": "https://registry.npmjs.org/bcrypt-pbkdf/-/bcrypt-pbkdf-1.0.2.tgz",
			"integrity": "sha1-pDAdOJtqQ/m2f/PKEaP2Y342Dp4=",
			"dependencies": {
				"tweetnacl": "^0.14.3"
			}
		},
		"node_modules/bl": {
			"version": "1.2.2",
			"resolved": "https://registry.npmjs.org/bl/-/bl-1.2.2.tgz",
			"integrity": "sha512-e8tQYnZodmebYDWGH7KMRvtzKXaJHx3BbilrgZCfvyLUYdKpK1t5PSPmpkny/SgiTSCnjfLW7v5rlONXVFkQEA==",
			"dependencies": {
				"readable-stream": "^2.3.5",
				"safe-buffer": "^5.1.1"
			}
		},
		"node_modules/bn.js": {
			"version": "4.11.8",
			"resolved": "https://registry.npmjs.org/bn.js/-/bn.js-4.11.8.tgz",
			"integrity": "sha512-ItfYfPLkWHUjckQCk8xC+LwxgK8NYcXywGigJgSwOP8Y2iyWT4f2vsZnoOXTTbo+o5yXmIUJ4gn5538SO5S3gA=="
		},
		"node_modules/body-parser": {
			"version": "1.19.0",
			"resolved": "https://registry.npmjs.org/body-parser/-/body-parser-1.19.0.tgz",
			"integrity": "sha512-dhEPs72UPbDnAQJ9ZKMNTP6ptJaionhP5cBb541nXPlW60Jepo9RV/a4fX4XWW9CuFNK22krhrj1+rgzifNCsw==",
			"dependencies": {
				"bytes": "3.1.0",
				"content-type": "~1.0.4",
				"debug": "2.6.9",
				"depd": "~1.1.2",
				"http-errors": "1.7.2",
				"iconv-lite": "0.4.24",
				"on-finished": "~2.3.0",
				"qs": "6.7.0",
				"raw-body": "2.4.0",
				"type-is": "~1.6.17"
			},
			"engines": {
				"node": ">= 0.8"
			}
		},
		"node_modules/body-parser/node_modules/qs": {
			"version": "6.7.0",
			"resolved": "https://registry.npmjs.org/qs/-/qs-6.7.0.tgz",
			"integrity": "sha512-VCdBRNFTX1fyE7Nb6FYoURo/SPe62QCaAyzJvUjwRaIsc+NePBEniHlvxFmmX56+HZphIGtV0XeCirBtpDrTyQ==",
			"engines": {
				"node": ">=0.6"
			}
		},
		"node_modules/brace-expansion": {
			"version": "1.1.11",
			"resolved": "https://registry.npmjs.org/brace-expansion/-/brace-expansion-1.1.11.tgz",
			"integrity": "sha512-iCuPHDFgrHX7H2vEI/5xpz07zSHB00TpugqhmYtVmMO6518mCuRMoOYFldEBl0g187ufozdaHgWKcYFb61qGiA==",
			"dependencies": {
				"balanced-match": "^1.0.0",
				"concat-map": "0.0.1"
			}
		},
		"node_modules/brorand": {
			"version": "1.1.0",
			"resolved": "https://registry.npmjs.org/brorand/-/brorand-1.1.0.tgz",
			"integrity": "sha1-EsJe/kCkXjwyPrhnWgoM5XsiNx8="
		},
		"node_modules/browser-request": {
			"version": "0.3.3",
			"resolved": "https://registry.npmjs.org/browser-request/-/browser-request-0.3.3.tgz",
			"integrity": "sha1-ns5bWsqJopkyJC4Yv5M975h2zBc=",
			"engines": [
				"node"
			]
		},
		"node_modules/buffer-alloc": {
			"version": "1.2.0",
			"resolved": "https://registry.npmjs.org/buffer-alloc/-/buffer-alloc-1.2.0.tgz",
			"integrity": "sha512-CFsHQgjtW1UChdXgbyJGtnm+O/uLQeZdtbDo8mfUgYXCHSM1wgrVxXm6bSyrUuErEb+4sYVGCzASBRot7zyrow==",
			"dependencies": {
				"buffer-alloc-unsafe": "^1.1.0",
				"buffer-fill": "^1.0.0"
			}
		},
		"node_modules/buffer-alloc-unsafe": {
			"version": "1.1.0",
			"resolved": "https://registry.npmjs.org/buffer-alloc-unsafe/-/buffer-alloc-unsafe-1.1.0.tgz",
			"integrity": "sha512-TEM2iMIEQdJ2yjPJoSIsldnleVaAk1oW3DBVUykyOLsEsFmEc9kn+SFFPz+gl54KQNxlDnAwCXosOS9Okx2xAg=="
		},
		"node_modules/buffer-fill": {
			"version": "1.0.0",
			"resolved": "https://registry.npmjs.org/buffer-fill/-/buffer-fill-1.0.0.tgz",
			"integrity": "sha1-+PeLdniYiO858gXNY39o5wISKyw="
		},
		"node_modules/bytebuffer": {
			"version": "5.0.1",
			"resolved": "https://registry.npmjs.org/bytebuffer/-/bytebuffer-5.0.1.tgz",
			"integrity": "sha1-WC7qSxqHO20CCkjVjfhfC7ps/d0=",
			"dependencies": {
				"long": "~3"
			},
			"engines": {
				"node": ">=0.8"
			}
		},
		"node_modules/bytebuffer/node_modules/long": {
			"version": "3.2.0",
			"resolved": "https://registry.npmjs.org/long/-/long-3.2.0.tgz",
			"integrity": "sha1-2CG3E4yhy1gcFymQ7xTbIAtcR0s=",
			"engines": {
				"node": ">=0.6"
			}
		},
		"node_modules/bytes": {
			"version": "3.1.0",
			"resolved": "https://registry.npmjs.org/bytes/-/bytes-3.1.0.tgz",
			"integrity": "sha512-zauLjrfCG+xvoyaqLoV8bLVXXNGC4JqlxFCutSDWA6fJrTo2ZuvLYTqZ7aHBLZSMOopbzwv8f+wZcVzfVTI2Dg==",
			"engines": {
				"node": ">= 0.8"
			}
		},
		"node_modules/callsite": {
			"version": "1.0.0",
			"resolved": "https://registry.npmjs.org/callsite/-/callsite-1.0.0.tgz",
			"integrity": "sha1-KAOY5dZkvXQDi28JBRU+borxvCA=",
			"engines": {
				"node": "*"
			}
		},
		"node_modules/callsites": {
			"version": "3.1.0",
			"resolved": "https://registry.npmjs.org/callsites/-/callsites-3.1.0.tgz",
			"integrity": "sha512-P8BjAsXvZS+VIDUI11hHCQEv74YT67YUi5JJFNWIqL235sBmjX4+qx9Muvls5ivyNENctx46xQLQ3aTuE7ssaQ==",
			"dev": true,
			"engines": {
				"node": ">=6"
			}
		},
		"node_modules/camelcase": {
			"version": "2.1.1",
			"resolved": "https://registry.npmjs.org/camelcase/-/camelcase-2.1.1.tgz",
			"integrity": "sha1-fB0W1nmhu+WcoCys7PsBHiAfWh8=",
			"engines": {
				"node": ">=0.10.0"
			}
		},
		"node_modules/caseless": {
			"version": "0.12.0",
			"resolved": "https://registry.npmjs.org/caseless/-/caseless-0.12.0.tgz",
			"integrity": "sha1-G2gcIf+EAzyCZUMJBolCDRhxUdw="
		},
		"node_modules/center-align": {
			"version": "0.1.3",
			"resolved": "https://registry.npmjs.org/center-align/-/center-align-0.1.3.tgz",
			"integrity": "sha1-qg0yYptu6XIgBBHL1EYckHvCt60=",
			"dependencies": {
				"align-text": "^0.1.3",
				"lazy-cache": "^1.0.3"
			},
			"engines": {
				"node": ">=0.10.0"
			}
		},
		"node_modules/chalk": {
			"version": "2.4.2",
			"resolved": "https://registry.npmjs.org/chalk/-/chalk-2.4.2.tgz",
			"integrity": "sha512-Mti+f9lpJNcwF4tWV8/OrTTtF1gZi+f8FqlyAdouralcFWFQWF2+NgCHShjkCb+IFBLq9buZwE1xckQU4peSuQ==",
			"dev": true,
			"dependencies": {
				"ansi-styles": "^3.2.1",
				"escape-string-regexp": "^1.0.5",
				"supports-color": "^5.3.0"
			},
			"engines": {
				"node": ">=4"
			}
		},
		"node_modules/character-parser": {
			"version": "2.2.0",
			"resolved": "https://registry.npmjs.org/character-parser/-/character-parser-2.2.0.tgz",
			"integrity": "sha1-x84o821LzZdE5f/CxfzeHHMmH8A=",
			"dependencies": {
				"is-regex": "^1.0.3"
			}
		},
		"node_modules/chardet": {
			"version": "0.7.0",
			"resolved": "https://registry.npmjs.org/chardet/-/chardet-0.7.0.tgz",
			"integrity": "sha512-mT8iDcrh03qDGRRmoA2hmBJnxpllMR+0/0qlzjqZES6NdiWDcZkCNAk4rPFZ9Q85r27unkiNNg8ZOiwZXBHwcA==",
			"dev": true
		},
		"node_modules/clean-css": {
			"version": "4.2.1",
			"resolved": "https://registry.npmjs.org/clean-css/-/clean-css-4.2.1.tgz",
			"integrity": "sha512-4ZxI6dy4lrY6FHzfiy1aEOXgu4LIsW2MhwG0VBKdcoGoH/XLFgaHSdLTGr4O8Be6A8r3MOphEiI8Gc1n0ecf3g==",
			"dependencies": {
				"source-map": "~0.6.0"
			},
			"engines": {
				"node": ">= 4.0"
			}
		},
		"node_modules/cli-cursor": {
			"version": "2.1.0",
			"resolved": "https://registry.npmjs.org/cli-cursor/-/cli-cursor-2.1.0.tgz",
			"integrity": "sha1-s12sN2R5+sw+lHR9QdDQ9SOP/LU=",
			"dev": true,
			"dependencies": {
				"restore-cursor": "^2.0.0"
			},
			"engines": {
				"node": ">=4"
			}
		},
		"node_modules/cli-width": {
			"version": "2.2.0",
			"resolved": "https://registry.npmjs.org/cli-width/-/cli-width-2.2.0.tgz",
			"integrity": "sha1-/xnt6Kml5XkyQUewwR8PvLq+1jk=",
			"dev": true
		},
		"node_modules/cliui": {
			"version": "3.2.0",
			"resolved": "https://registry.npmjs.org/cliui/-/cliui-3.2.0.tgz",
			"integrity": "sha1-EgYBU3qRbSmUD5NNo7SNWFo5IT0=",
			"dependencies": {
				"string-width": "^1.0.1",
				"strip-ansi": "^3.0.1",
				"wrap-ansi": "^2.0.0"
			}
		},
		"node_modules/cloudant-follow": {
			"version": "0.17.0",
			"resolved": "https://registry.npmjs.org/cloudant-follow/-/cloudant-follow-0.17.0.tgz",
			"integrity": "sha512-JQ1xvKAHh8rsnSVBjATLCjz/vQw1sWBGadxr2H69yFMwD7hShUGDwwEefdypaxroUJ/w6t1cSwilp/hRUxEW8w==",
			"deprecated": "This package is no longer maintained.",
			"dependencies": {
				"browser-request": "~0.3.0",
				"debug": "^3.0.0",
				"request": "^2.83.0"
			},
			"bin": {
				"follow": "cli.js"
			},
			"engines": {
				"node": ">=6.13.0"
			}
		},
		"node_modules/cloudant-follow/node_modules/debug": {
			"version": "3.2.6",
			"resolved": "https://registry.npmjs.org/debug/-/debug-3.2.6.tgz",
			"integrity": "sha512-mel+jf7nrtEl5Pn1Qx46zARXKDpBbvzezse7p7LqINmdoIk8PYP5SySaxEmYv6TZ0JyEKA1hsCId6DIhgITtWQ==",
			"deprecated": "Debug versions >=3.2.0 <3.2.7 || >=4 <4.3.1 have a low-severity ReDos regression when used in a Node.js environment. It is recommended you upgrade to 3.2.7 or 4.3.1. (https://github.com/visionmedia/debug/issues/797)",
			"dependencies": {
				"ms": "^2.1.1"
			}
		},
		"node_modules/code-point-at": {
			"version": "1.1.0",
			"resolved": "https://registry.npmjs.org/code-point-at/-/code-point-at-1.1.0.tgz",
			"integrity": "sha1-DQcLTQQ6W+ozovGkDi7bPZpMz3c=",
			"engines": {
				"node": ">=0.10.0"
			}
		},
		"node_modules/color-convert": {
			"version": "1.9.3",
			"resolved": "https://registry.npmjs.org/color-convert/-/color-convert-1.9.3.tgz",
			"integrity": "sha512-QfAUtd+vFdAtFQcC8CCyYt1fYWxSqAiK2cSD6zDB8N3cpsEBAvRxp9zOGg6G/SHHJYAT88/az/IuDGALsNVbGg==",
			"dev": true,
			"dependencies": {
				"color-name": "1.1.3"
			}
		},
		"node_modules/color-name": {
			"version": "1.1.3",
			"resolved": "https://registry.npmjs.org/color-name/-/color-name-1.1.3.tgz",
			"integrity": "sha1-p9BVi9icQveV3UIyj3QIMcpTvCU=",
			"dev": true
		},
		"node_modules/colors": {
			"version": "1.0.3",
			"resolved": "https://registry.npmjs.org/colors/-/colors-1.0.3.tgz",
			"integrity": "sha1-BDP0TYCWgP3rYO0mDxsMJi6CpAs=",
			"engines": {
				"node": ">=0.1.90"
			}
		},
		"node_modules/colour": {
			"version": "0.7.1",
			"resolved": "https://registry.npmjs.org/colour/-/colour-0.7.1.tgz",
			"integrity": "sha1-nLFpkX7F0SwHNtPoaFdG3xyt93g=",
			"engines": {
				"node": ">=0.8"
			}
		},
		"node_modules/combined-stream": {
			"version": "1.0.8",
			"resolved": "https://registry.npmjs.org/combined-stream/-/combined-stream-1.0.8.tgz",
			"integrity": "sha512-FQN4MRfuJeHf7cBbBMJFXhKSDq+2kAArBlmRBvcvFE5BB1HZKXtSFASDhdlz9zOYwxh8lDdnvmMOe/+5cdoEdg==",
			"dependencies": {
				"delayed-stream": "~1.0.0"
			},
			"engines": {
				"node": ">= 0.8"
			}
		},
		"node_modules/concat-map": {
			"version": "0.0.1",
			"resolved": "https://registry.npmjs.org/concat-map/-/concat-map-0.0.1.tgz",
			"integrity": "sha1-2Klr13/Wjfd5OnMDajug1UBdR3s="
		},
		"node_modules/constantinople": {
			"version": "3.1.2",
			"resolved": "https://registry.npmjs.org/constantinople/-/constantinople-3.1.2.tgz",
			"integrity": "sha512-yePcBqEFhLOqSBtwYOGGS1exHo/s1xjekXiinh4itpNQGCu4KA1euPh1fg07N2wMITZXQkBz75Ntdt1ctGZouw==",
			"dependencies": {
				"@types/babel-types": "^7.0.0",
				"@types/babylon": "^6.16.2",
				"babel-types": "^6.26.0",
				"babylon": "^6.18.0"
			}
		},
		"node_modules/content-disposition": {
			"version": "0.5.3",
			"resolved": "https://registry.npmjs.org/content-disposition/-/content-disposition-0.5.3.tgz",
			"integrity": "sha512-ExO0774ikEObIAEV9kDo50o+79VCUdEB6n6lzKgGwupcVeRlhrj3qGAfwq8G6uBJjkqLrhT0qEYFcWng8z1z0g==",
			"dependencies": {
				"safe-buffer": "5.1.2"
			},
			"engines": {
				"node": ">= 0.6"
			}
		},
		"node_modules/content-disposition/node_modules/safe-buffer": {
			"version": "5.1.2",
			"resolved": "https://registry.npmjs.org/safe-buffer/-/safe-buffer-5.1.2.tgz",
			"integrity": "sha512-Gd2UZBJDkXlY7GbJxfsE8/nvKkUEU1G38c1siN6QP6a9PT9MmHB8GnpscSmMJSoF8LOIrt8ud/wPtojys4G6+g=="
		},
		"node_modules/content-type": {
			"version": "1.0.4",
			"resolved": "https://registry.npmjs.org/content-type/-/content-type-1.0.4.tgz",
			"integrity": "sha512-hIP3EEPs8tB9AT1L+NUqtwOAps4mk2Zob89MWXMHjHWg9milF/j4osnnQLXBCBFBk/tvIG/tUc9mOUJiPBhPXA==",
			"engines": {
				"node": ">= 0.6"
			}
		},
		"node_modules/cookie": {
			"version": "0.4.0",
			"resolved": "https://registry.npmjs.org/cookie/-/cookie-0.4.0.tgz",
			"integrity": "sha512-+Hp8fLp57wnUSt0tY0tHEXh4voZRDnoIrZPqlo3DPiI4y9lwg/jqx+1Om94/W6ZaPDOUbnjOt/99w66zk+l1Xg==",
			"engines": {
				"node": ">= 0.6"
			}
		},
		"node_modules/cookie-signature": {
			"version": "1.0.6",
			"resolved": "https://registry.npmjs.org/cookie-signature/-/cookie-signature-1.0.6.tgz",
			"integrity": "sha1-4wOogrNCzD7oylE6eZmXNNqzriw="
		},
		"node_modules/core-js": {
			"version": "2.6.9",
			"resolved": "https://registry.npmjs.org/core-js/-/core-js-2.6.9.tgz",
			"integrity": "sha512-HOpZf6eXmnl7la+cUdMnLvUxKNqLUzJvgIziQ0DiF3JwSImNphIqdGqzj6hIKyX04MmV0poclQ7+wjWvxQyR2A==",
			"deprecated": "core-js@<3.23.3 is no longer maintained and not recommended for usage due to the number of issues. Because of the V8 engine whims, feature detection in old core-js versions could cause a slowdown up to 100x even if nothing is polyfilled. Some versions have web compatibility issues. Please, upgrade your dependencies to the actual version of core-js.",
			"hasInstallScript": true
		},
		"node_modules/core-util-is": {
			"version": "1.0.2",
			"resolved": "https://registry.npmjs.org/core-util-is/-/core-util-is-1.0.2.tgz",
			"integrity": "sha1-tf1UIgqivFq1eqtxQMlAdUUDwac="
		},
		"node_modules/cors": {
			"version": "2.8.5",
			"resolved": "https://registry.npmjs.org/cors/-/cors-2.8.5.tgz",
			"integrity": "sha512-KIHbLJqu73RGr/hnbrO9uBeixNGuvSQjul/jdFvS/KFSIH1hWVd1ng7zOHx+YrEfInLG7q4n6GHQ9cDtxv/P6g==",
			"dependencies": {
				"object-assign": "^4",
				"vary": "^1"
			},
			"engines": {
				"node": ">= 0.10"
			}
		},
		"node_modules/cross-spawn": {
			"version": "6.0.5",
			"resolved": "https://registry.npmjs.org/cross-spawn/-/cross-spawn-6.0.5.tgz",
			"integrity": "sha512-eTVLrBSt7fjbDygz805pMnstIs2VTBNkRm0qxZd+M7A5XDdxVRWO5MxGBXZhjY4cqLYLdtrGqRf8mBPmzwSpWQ==",
			"dev": true,
			"dependencies": {
				"nice-try": "^1.0.4",
				"path-key": "^2.0.1",
				"semver": "^5.5.0",
				"shebang-command": "^1.2.0",
				"which": "^1.2.9"
			},
			"engines": {
				"node": ">=4.8"
			}
		},
		"node_modules/cycle": {
			"version": "1.0.3",
			"resolved": "https://registry.npmjs.org/cycle/-/cycle-1.0.3.tgz",
			"integrity": "sha1-IegLK+hYD5i0aPN5QwZisEbDStI=",
			"engines": {
				"node": ">=0.4.0"
			}
		},
		"node_modules/dashdash": {
			"version": "1.14.1",
			"resolved": "https://registry.npmjs.org/dashdash/-/dashdash-1.14.1.tgz",
			"integrity": "sha1-hTz6D3y+L+1d4gMmuN1YEDX24vA=",
			"dependencies": {
				"assert-plus": "^1.0.0"
			},
			"engines": {
				"node": ">=0.10"
			}
		},
		"node_modules/debug": {
			"version": "2.6.9",
			"resolved": "https://registry.npmjs.org/debug/-/debug-2.6.9.tgz",
			"integrity": "sha512-bC7ElrdJaJnPbAP+1EotYvqZsb3ecl5wi6Bfi6BJTUcNowp6cvspg0jXznRTKDjm/E7AdgFBVeAPVMNcKGsHMA==",
			"dependencies": {
				"ms": "2.0.0"
			}
		},
		"node_modules/debug/node_modules/ms": {
			"version": "2.0.0",
			"resolved": "https://registry.npmjs.org/ms/-/ms-2.0.0.tgz",
			"integrity": "sha1-VgiurfwAvmwpAd9fmGF4jeDVl8g="
		},
		"node_modules/decamelize": {
			"version": "1.2.0",
			"resolved": "https://registry.npmjs.org/decamelize/-/decamelize-1.2.0.tgz",
			"integrity": "sha1-9lNNFRSCabIDUue+4m9QH5oZEpA=",
			"engines": {
				"node": ">=0.10.0"
			}
		},
		"node_modules/deep-is": {
			"version": "0.1.3",
			"resolved": "https://registry.npmjs.org/deep-is/-/deep-is-0.1.3.tgz",
			"integrity": "sha1-s2nW+128E+7PUk+RsHD+7cNXzzQ=",
			"dev": true
		},
		"node_modules/delayed-stream": {
			"version": "1.0.0",
			"resolved": "https://registry.npmjs.org/delayed-stream/-/delayed-stream-1.0.0.tgz",
			"integrity": "sha1-3zrhmayt+31ECqrgsp4icrJOxhk=",
			"engines": {
				"node": ">=0.4.0"
			}
		},
		"node_modules/depd": {
			"version": "1.1.2",
			"resolved": "https://registry.npmjs.org/depd/-/depd-1.1.2.tgz",
			"integrity": "sha1-m81S4UwJd2PnSbJ0xDRu0uVgtak=",
			"engines": {
				"node": ">= 0.6"
			}
		},
		"node_modules/destroy": {
			"version": "1.0.4",
			"resolved": "https://registry.npmjs.org/destroy/-/destroy-1.0.4.tgz",
			"integrity": "sha1-l4hXRCxEdJ5CBmE+N5RiBYJqvYA="
		},
		"node_modules/doctrine": {
			"version": "3.0.0",
			"resolved": "https://registry.npmjs.org/doctrine/-/doctrine-3.0.0.tgz",
			"integrity": "sha512-yS+Q5i3hBf7GBkd4KG8a7eBNNWNGLTaEwwYWUijIYM7zrlYDM0BFXHjjPWlWZ1Rg7UaddZeIDmi9jF3HmqiQ2w==",
			"dev": true,
			"dependencies": {
				"esutils": "^2.0.2"
			},
			"engines": {
				"node": ">=6.0.0"
			}
		},
		"node_modules/doctypes": {
			"version": "1.1.0",
			"resolved": "https://registry.npmjs.org/doctypes/-/doctypes-1.1.0.tgz",
			"integrity": "sha1-6oCxBqh1OHdOijpKWv4pPeSJ4Kk="
		},
		"node_modules/ecc-jsbn": {
			"version": "0.1.2",
			"resolved": "https://registry.npmjs.org/ecc-jsbn/-/ecc-jsbn-0.1.2.tgz",
			"integrity": "sha1-OoOpBOVDUyh4dMVkt1SThoSamMk=",
			"dependencies": {
				"jsbn": "~0.1.0",
				"safer-buffer": "^2.1.0"
			}
		},
		"node_modules/ee-first": {
			"version": "1.1.1",
			"resolved": "https://registry.npmjs.org/ee-first/-/ee-first-1.1.1.tgz",
			"integrity": "sha1-WQxhFWsK4vTwJVcyoViyZrxWsh0="
		},
		"node_modules/elliptic": {
			"version": "6.5.1",
			"resolved": "https://registry.npmjs.org/elliptic/-/elliptic-6.5.1.tgz",
			"integrity": "sha512-xvJINNLbTeWQjrl6X+7eQCrIy/YPv5XCpKW6kB5mKvtnGILoLDcySuwomfdzt0BMdLNVnuRNTuzKNHj0bva1Cg==",
			"dependencies": {
				"bn.js": "^4.4.0",
				"brorand": "^1.0.1",
				"hash.js": "^1.0.0",
				"hmac-drbg": "^1.0.0",
				"inherits": "^2.0.1",
				"minimalistic-assert": "^1.0.0",
				"minimalistic-crypto-utils": "^1.0.0"
			}
		},
		"node_modules/emoji-regex": {
			"version": "7.0.3",
			"resolved": "https://registry.npmjs.org/emoji-regex/-/emoji-regex-7.0.3.tgz",
			"integrity": "sha512-CwBLREIQ7LvYFB0WyRvwhq5N5qPhc6PMjD6bYggFlI5YyDgl+0vxq5VHbMOFqLg7hfWzmu8T5Z1QofhmTIhItA==",
			"dev": true
		},
		"node_modules/encodeurl": {
			"version": "1.0.2",
			"resolved": "https://registry.npmjs.org/encodeurl/-/encodeurl-1.0.2.tgz",
			"integrity": "sha1-rT/0yG7C0CkyL1oCw6mmBslbP1k=",
			"engines": {
				"node": ">= 0.8"
			}
		},
		"node_modules/end-of-stream": {
			"version": "1.4.2",
			"resolved": "https://registry.npmjs.org/end-of-stream/-/end-of-stream-1.4.2.tgz",
			"integrity": "sha512-gUSUszrsxlDnUbUwEI9Oygyrk4ZEWtVaHQc+uZHphVeNxl+qeqMV/jDWoTkjN1RmGlZ5QWAP7o458p/JMlikQg==",
			"dependencies": {
				"once": "^1.4.0"
			}
		},
		"node_modules/errs": {
			"version": "0.3.2",
			"resolved": "https://registry.npmjs.org/errs/-/errs-0.3.2.tgz",
			"integrity": "sha1-eYCZstvTfKK8dJ5TinwTB9C1BJk=",
			"engines": {
				"node": ">= 0.4.0"
			}
		},
		"node_modules/escape-html": {
			"version": "1.0.3",
			"resolved": "https://registry.npmjs.org/escape-html/-/escape-html-1.0.3.tgz",
			"integrity": "sha1-Aljq5NPQwJdN4cFpGI7wBR0dGYg="
		},
		"node_modules/escape-string-regexp": {
			"version": "1.0.5",
			"resolved": "https://registry.npmjs.org/escape-string-regexp/-/escape-string-regexp-1.0.5.tgz",
			"integrity": "sha1-G2HAViGQqN/2rjuyzwIAyhMLhtQ=",
			"dev": true,
			"engines": {
				"node": ">=0.8.0"
			}
		},
		"node_modules/eslint": {
			"version": "5.16.0",
			"resolved": "https://registry.npmjs.org/eslint/-/eslint-5.16.0.tgz",
			"integrity": "sha512-S3Rz11i7c8AA5JPv7xAH+dOyq/Cu/VXHiHXBPOU1k/JAM5dXqQPt3qcrhpHSorXmrpu2g0gkIBVXAqCpzfoZIg==",
			"deprecated": "This version is no longer supported. Please see https://eslint.org/version-support for other options.",
			"dev": true,
			"dependencies": {
				"@babel/code-frame": "^7.0.0",
				"ajv": "^6.9.1",
				"chalk": "^2.1.0",
				"cross-spawn": "^6.0.5",
				"debug": "^4.0.1",
				"doctrine": "^3.0.0",
				"eslint-scope": "^4.0.3",
				"eslint-utils": "^1.3.1",
				"eslint-visitor-keys": "^1.0.0",
				"espree": "^5.0.1",
				"esquery": "^1.0.1",
				"esutils": "^2.0.2",
				"file-entry-cache": "^5.0.1",
				"functional-red-black-tree": "^1.0.1",
				"glob": "^7.1.2",
				"globals": "^11.7.0",
				"ignore": "^4.0.6",
				"import-fresh": "^3.0.0",
				"imurmurhash": "^0.1.4",
				"inquirer": "^6.2.2",
				"js-yaml": "^3.13.0",
				"json-stable-stringify-without-jsonify": "^1.0.1",
				"levn": "^0.3.0",
				"lodash": "^4.17.11",
				"minimatch": "^3.0.4",
				"mkdirp": "^0.5.1",
				"natural-compare": "^1.4.0",
				"optionator": "^0.8.2",
				"path-is-inside": "^1.0.2",
				"progress": "^2.0.0",
				"regexpp": "^2.0.1",
				"semver": "^5.5.1",
				"strip-ansi": "^4.0.0",
				"strip-json-comments": "^2.0.1",
				"table": "^5.2.3",
				"text-table": "^0.2.0"
			},
			"bin": {
				"eslint": "bin/eslint.js"
			},
			"engines": {
				"node": "^6.14.0 || ^8.10.0 || >=9.10.0"
			}
		},
		"node_modules/eslint-scope": {
			"version": "4.0.3",
			"resolved": "https://registry.npmjs.org/eslint-scope/-/eslint-scope-4.0.3.tgz",
			"integrity": "sha512-p7VutNr1O/QrxysMo3E45FjYDTeXBy0iTltPFNSqKAIfjDSXC+4dj+qfyuD8bfAXrW/y6lW3O76VaYNPKfpKrg==",
			"dev": true,
			"dependencies": {
				"esrecurse": "^4.1.0",
				"estraverse": "^4.1.1"
			},
			"engines": {
				"node": ">=4.0.0"
			}
		},
		"node_modules/eslint-utils": {
			"version": "1.4.2",
			"resolved": "https://registry.npmjs.org/eslint-utils/-/eslint-utils-1.4.2.tgz",
			"integrity": "sha512-eAZS2sEUMlIeCjBeubdj45dmBHQwPHWyBcT1VSYB7o9x9WRRqKxyUoiXlRjyAwzN7YEzHJlYg0NmzDRWx6GP4Q==",
			"dev": true,
			"dependencies": {
				"eslint-visitor-keys": "^1.0.0"
			},
			"engines": {
				"node": ">=6"
			}
		},
		"node_modules/eslint-visitor-keys": {
			"version": "1.1.0",
			"resolved": "https://registry.npmjs.org/eslint-visitor-keys/-/eslint-visitor-keys-1.1.0.tgz",
			"integrity": "sha512-8y9YjtM1JBJU/A9Kc+SbaOV4y29sSWckBwMHa+FGtVj5gN/sbnKDf6xJUl+8g7FAij9LVaP8C24DUiH/f/2Z9A==",
			"dev": true,
			"engines": {
				"node": ">=4"
			}
		},
		"node_modules/eslint/node_modules/ansi-regex": {
			"version": "3.0.0",
			"resolved": "https://registry.npmjs.org/ansi-regex/-/ansi-regex-3.0.0.tgz",
			"integrity": "sha1-7QMXwyIGT3lGbAKWa922Bas32Zg=",
			"dev": true,
			"engines": {
				"node": ">=4"
			}
		},
		"node_modules/eslint/node_modules/debug": {
			"version": "4.1.1",
			"resolved": "https://registry.npmjs.org/debug/-/debug-4.1.1.tgz",
			"integrity": "sha512-pYAIzeRo8J6KPEaJ0VWOh5Pzkbw/RetuzehGM7QRRX5he4fPHx2rdKMB256ehJCkX+XRQm16eZLqLNS8RSZXZw==",
			"deprecated": "Debug versions >=3.2.0 <3.2.7 || >=4 <4.3.1 have a low-severity ReDos regression when used in a Node.js environment. It is recommended you upgrade to 3.2.7 or 4.3.1. (https://github.com/visionmedia/debug/issues/797)",
			"dev": true,
			"dependencies": {
				"ms": "^2.1.1"
			}
		},
		"node_modules/eslint/node_modules/strip-ansi": {
			"version": "4.0.0",
			"resolved": "https://registry.npmjs.org/strip-ansi/-/strip-ansi-4.0.0.tgz",
			"integrity": "sha1-qEeQIusaw2iocTibY1JixQXuNo8=",
			"dev": true,
			"dependencies": {
				"ansi-regex": "^3.0.0"
			},
			"engines": {
				"node": ">=4"
			}
		},
		"node_modules/espree": {
			"version": "5.0.1",
			"resolved": "https://registry.npmjs.org/espree/-/espree-5.0.1.tgz",
			"integrity": "sha512-qWAZcWh4XE/RwzLJejfcofscgMc9CamR6Tn1+XRXNzrvUSSbiAjGOI/fggztjIi7y9VLPqnICMIPiGyr8JaZ0A==",
			"dev": true,
			"dependencies": {
				"acorn": "^6.0.7",
				"acorn-jsx": "^5.0.0",
				"eslint-visitor-keys": "^1.0.0"
			},
			"engines": {
				"node": ">=6.0.0"
			}
		},
		"node_modules/esprima": {
			"version": "4.0.1",
			"resolved": "https://registry.npmjs.org/esprima/-/esprima-4.0.1.tgz",
			"integrity": "sha512-eGuFFw7Upda+g4p+QHvnW0RyTX/SVeJBDM/gCtMARO0cLuT2HcEKnTPvhjV6aGeqrCB/sbNop0Kszm0jsaWU4A==",
			"bin": {
				"esparse": "bin/esparse.js",
				"esvalidate": "bin/esvalidate.js"
			},
			"engines": {
				"node": ">=4"
			}
		},
		"node_modules/esquery": {
			"version": "1.0.1",
			"resolved": "https://registry.npmjs.org/esquery/-/esquery-1.0.1.tgz",
			"integrity": "sha512-SmiyZ5zIWH9VM+SRUReLS5Q8a7GxtRdxEBVZpm98rJM7Sb+A9DVCndXfkeFUd3byderg+EbDkfnevfCwynWaNA==",
			"dev": true,
			"dependencies": {
				"estraverse": "^4.0.0"
			},
			"engines": {
				"node": ">=0.6"
			}
		},
		"node_modules/esrecurse": {
			"version": "4.2.1",
			"resolved": "https://registry.npmjs.org/esrecurse/-/esrecurse-4.2.1.tgz",
			"integrity": "sha512-64RBB++fIOAXPw3P9cy89qfMlvZEXZkqqJkjqqXIvzP5ezRZjW+lPWjw35UX/3EhUPFYbg5ER4JYgDw4007/DQ==",
			"dev": true,
			"dependencies": {
				"estraverse": "^4.1.0"
			},
			"engines": {
				"node": ">=4.0"
			}
		},
		"node_modules/estraverse": {
			"version": "4.3.0",
			"resolved": "https://registry.npmjs.org/estraverse/-/estraverse-4.3.0.tgz",
			"integrity": "sha512-39nnKffWz8xN1BU/2c79n9nB9HDzo0niYUqx6xyqUnyoAnQyyWpOTdZEeiCch8BBu515t4wp9ZmgVfVhn9EBpw==",
			"dev": true,
			"engines": {
				"node": ">=4.0"
			}
		},
		"node_modules/esutils": {
			"version": "2.0.3",
			"resolved": "https://registry.npmjs.org/esutils/-/esutils-2.0.3.tgz",
			"integrity": "sha512-kVscqXk4OCp68SZ0dkgEKVi6/8ij300KBWTJq32P/dYeWTSwK41WyTxalN1eRmA5Z9UU/LX9D7FWSmV9SAYx6g==",
			"engines": {
				"node": ">=0.10.0"
			}
		},
		"node_modules/etag": {
			"version": "1.8.1",
			"resolved": "https://registry.npmjs.org/etag/-/etag-1.8.1.tgz",
			"integrity": "sha1-Qa4u62XvpiJorr/qg6x9eSmbCIc=",
			"engines": {
				"node": ">= 0.6"
			}
		},
		"node_modules/express": {
			"version": "4.17.1",
			"resolved": "https://registry.npmjs.org/express/-/express-4.17.1.tgz",
			"integrity": "sha512-mHJ9O79RqluphRrcw2X/GTh3k9tVv8YcoyY4Kkh4WDMUYKRZUq0h1o0w2rrrxBqM7VoeUVqgb27xlEMXTnYt4g==",
			"dependencies": {
				"accepts": "~1.3.7",
				"array-flatten": "1.1.1",
				"body-parser": "1.19.0",
				"content-disposition": "0.5.3",
				"content-type": "~1.0.4",
				"cookie": "0.4.0",
				"cookie-signature": "1.0.6",
				"debug": "2.6.9",
				"depd": "~1.1.2",
				"encodeurl": "~1.0.2",
				"escape-html": "~1.0.3",
				"etag": "~1.8.1",
				"finalhandler": "~1.1.2",
				"fresh": "0.5.2",
				"merge-descriptors": "1.0.1",
				"methods": "~1.1.2",
				"on-finished": "~2.3.0",
				"parseurl": "~1.3.3",
				"path-to-regexp": "0.1.7",
				"proxy-addr": "~2.0.5",
				"qs": "6.7.0",
				"range-parser": "~1.2.1",
				"safe-buffer": "5.1.2",
				"send": "0.17.1",
				"serve-static": "1.14.1",
				"setprototypeof": "1.1.1",
				"statuses": "~1.5.0",
				"type-is": "~1.6.18",
				"utils-merge": "1.0.1",
				"vary": "~1.1.2"
			},
			"engines": {
				"node": ">= 0.10.0"
			}
		},
		"node_modules/express/node_modules/qs": {
			"version": "6.7.0",
			"resolved": "https://registry.npmjs.org/qs/-/qs-6.7.0.tgz",
			"integrity": "sha512-VCdBRNFTX1fyE7Nb6FYoURo/SPe62QCaAyzJvUjwRaIsc+NePBEniHlvxFmmX56+HZphIGtV0XeCirBtpDrTyQ==",
			"engines": {
				"node": ">=0.6"
			}
		},
		"node_modules/express/node_modules/safe-buffer": {
			"version": "5.1.2",
			"resolved": "https://registry.npmjs.org/safe-buffer/-/safe-buffer-5.1.2.tgz",
			"integrity": "sha512-Gd2UZBJDkXlY7GbJxfsE8/nvKkUEU1G38c1siN6QP6a9PT9MmHB8GnpscSmMJSoF8LOIrt8ud/wPtojys4G6+g=="
		},
		"node_modules/extend": {
			"version": "3.0.2",
			"resolved": "https://registry.npmjs.org/extend/-/extend-3.0.2.tgz",
			"integrity": "sha512-fjquC59cD7CyW6urNXK0FBufkZcoiGG80wTuPujX590cB5Ttln20E2UB4S/WARVqhXffZl2LNgS+gQdPIIim/g=="
		},
		"node_modules/external-editor": {
			"version": "3.1.0",
			"resolved": "https://registry.npmjs.org/external-editor/-/external-editor-3.1.0.tgz",
			"integrity": "sha512-hMQ4CX1p1izmuLYyZqLMO/qGNw10wSv9QDCPfzXfyFrOaCSSoRfqE1Kf1s5an66J5JZC62NewG+mK49jOCtQew==",
			"dev": true,
			"dependencies": {
				"chardet": "^0.7.0",
				"iconv-lite": "^0.4.24",
				"tmp": "^0.0.33"
			},
			"engines": {
				"node": ">=4"
			}
		},
		"node_modules/extsprintf": {
			"version": "1.3.0",
			"resolved": "https://registry.npmjs.org/extsprintf/-/extsprintf-1.3.0.tgz",
			"integrity": "sha1-lpGEQOMEGnpBT4xS48V06zw+HgU=",
			"engines": [
				"node >=0.6.0"
			]
		},
		"node_modules/eyes": {
			"version": "0.1.8",
			"resolved": "https://registry.npmjs.org/eyes/-/eyes-0.1.8.tgz",
			"integrity": "sha1-Ys8SAjTGg3hdkCNIqADvPgzCC8A=",
			"engines": {
				"node": "> 0.1.90"
			}
		},
		"node_modules/fabric-ca-client": {
			"version": "1.4.4",
			"resolved": "https://registry.npmjs.org/fabric-ca-client/-/fabric-ca-client-1.4.4.tgz",
			"integrity": "sha512-lhs/ywszaatqCPObJx/884nGT4i3XWPqF/GKAhIoTfMWk5hXWoOliaV1pCbfkT6BVQMgYaoyx+k8hl+TiBlsDw==",
			"dependencies": {
				"@types/bytebuffer": "^5.0.34",
				"bn.js": "^4.11.3",
				"elliptic": "^6.2.3",
				"fs-extra": "^6.0.1",
				"grpc": "1.21.1",
				"js-sha3": "^0.7.0",
				"jsrsasign": "^7.2.2",
				"jssha": "^2.1.0",
				"long": "^4.0.0",
				"nconf": "^0.10.0",
				"sjcl": "1.0.7",
				"url": "^0.11.0",
				"util": "^0.10.3",
				"winston": "^2.2.0"
			},
			"engines": {
				"node": "^8.9.0 || ^10.15.3",
				"npm": "^5.5.1 || ^6.4.1"
			}
		},
		"node_modules/fabric-client": {
			"version": "1.4.4",
			"resolved": "https://registry.npmjs.org/fabric-client/-/fabric-client-1.4.4.tgz",
			"integrity": "sha512-QIC9dFCmQN5pWx23CoWq8cJTYwChXB7kEoZbpls5xPZaXtwNnvwBdbVWT+E0qwZQkhpLYe8y3N/A6jC5X3Cqtw==",
			"dependencies": {
				"@types/bytebuffer": "^5.0.34",
				"bn.js": "^4.11.3",
				"callsite": "^1.0.0",
				"elliptic": "^6.2.3",
				"fabric-ca-client": "latest",
				"fs-extra": "^6.0.1",
				"grpc": "1.21.1",
				"hoek": "^4.2.1",
				"ignore-walk": "^3.0.0",
				"js-sha3": "^0.7.0",
				"js-yaml": "^3.9.0",
				"jsrsasign": "^7.2.2",
				"jssha": "^2.1.0",
				"klaw": "^2.0.0",
				"long": "^4.0.0",
				"nano": "^6.4.4",
				"nconf": "^0.10.0",
				"pkcs11js": "^1.0.6",
				"promise-settle": "^0.3.0",
				"protobufjs": "5.0.3",
				"sjcl": "1.0.7",
				"stream-buffers": "3.0.1",
				"tar-stream": "1.6.1",
				"url": "^0.11.0",
				"winston": "^2.2.0"
			},
			"engines": {
				"node": "^8.9.0 || ^10.15.3",
				"npm": "^5.5.1 || ^6.4.1"
			}
		},
		"node_modules/fabric-network": {
			"version": "1.4.4",
			"resolved": "https://registry.npmjs.org/fabric-network/-/fabric-network-1.4.4.tgz",
			"integrity": "sha512-RMe9sq1jEfOrvxvW+cjPr2E88VMrg32yJHVI/K7pfObokwy955pzI24mnZbwTomyS8Vci66XmZLC24XeSYX/Mw==",
			"dependencies": {
				"fabric-ca-client": "latest",
				"fabric-client": "latest",
				"nano": "^6.4.4",
				"rimraf": "^2.6.2",
				"uuid": "^3.2.1"
			},
			"engines": {
				"node": "^8.9.0 || ^10.15.3",
				"npm": "^5.5.1 || ^6.4.1"
			}
		},
		"node_modules/fabric-network/node_modules/fabric-client": {
			"version": "1.4.4",
			"resolved": "https://registry.npmjs.org/fabric-client/-/fabric-client-1.4.4.tgz",
			"integrity": "sha512-QIC9dFCmQN5pWx23CoWq8cJTYwChXB7kEoZbpls5xPZaXtwNnvwBdbVWT+E0qwZQkhpLYe8y3N/A6jC5X3Cqtw==",
			"dependencies": {
				"@types/bytebuffer": "^5.0.34",
				"bn.js": "^4.11.3",
				"callsite": "^1.0.0",
				"elliptic": "^6.2.3",
				"fabric-ca-client": "latest",
				"fs-extra": "^6.0.1",
				"grpc": "1.21.1",
				"hoek": "^4.2.1",
				"ignore-walk": "^3.0.0",
				"js-sha3": "^0.7.0",
				"js-yaml": "^3.9.0",
				"jsrsasign": "^7.2.2",
				"jssha": "^2.1.0",
				"klaw": "^2.0.0",
				"long": "^4.0.0",
				"nano": "^6.4.4",
				"nconf": "^0.10.0",
				"pkcs11js": "^1.0.6",
				"promise-settle": "^0.3.0",
				"protobufjs": "5.0.3",
				"sjcl": "1.0.7",
				"stream-buffers": "3.0.1",
				"tar-stream": "1.6.1",
				"url": "^0.11.0",
				"winston": "^2.2.0"
			},
			"engines": {
				"node": "^8.9.0 || ^10.15.3",
				"npm": "^5.5.1 || ^6.4.1"
			}
		},
		"node_modules/fast-deep-equal": {
			"version": "2.0.1",
			"resolved": "https://registry.npmjs.org/fast-deep-equal/-/fast-deep-equal-2.0.1.tgz",
			"integrity": "sha1-ewUhjd+WZ79/Nwv3/bLLFf3Qqkk="
		},
		"node_modules/fast-json-stable-stringify": {
			"version": "2.0.0",
			"resolved": "https://registry.npmjs.org/fast-json-stable-stringify/-/fast-json-stable-stringify-2.0.0.tgz",
			"integrity": "sha1-1RQsDK7msRifh9OnYREGT4bIu/I="
		},
		"node_modules/fast-levenshtein": {
			"version": "2.0.6",
			"resolved": "https://registry.npmjs.org/fast-levenshtein/-/fast-levenshtein-2.0.6.tgz",
			"integrity": "sha1-PYpcZog6FqMMqGQ+hR8Zuqd5eRc=",
			"dev": true
		},
		"node_modules/figures": {
			"version": "2.0.0",
			"resolved": "https://registry.npmjs.org/figures/-/figures-2.0.0.tgz",
			"integrity": "sha1-OrGi0qYsi/tDGgyUy3l6L84nyWI=",
			"dev": true,
			"dependencies": {
				"escape-string-regexp": "^1.0.5"
			},
			"engines": {
				"node": ">=4"
			}
		},
		"node_modules/file-entry-cache": {
			"version": "5.0.1",
			"resolved": "https://registry.npmjs.org/file-entry-cache/-/file-entry-cache-5.0.1.tgz",
			"integrity": "sha512-bCg29ictuBaKUwwArK4ouCaqDgLZcysCFLmM/Yn/FDoqndh/9vNuQfXRDvTuXKLxfD/JtZQGKFT8MGcJBK644g==",
			"dev": true,
			"dependencies": {
				"flat-cache": "^2.0.1"
			},
			"engines": {
				"node": ">=4"
			}
		},
		"node_modules/finalhandler": {
			"version": "1.1.2",
			"resolved": "https://registry.npmjs.org/finalhandler/-/finalhandler-1.1.2.tgz",
			"integrity": "sha512-aAWcW57uxVNrQZqFXjITpW3sIUQmHGG3qSb9mUah9MgMC4NeWhNOlNjXEYq3HjRAvL6arUviZGGJsBg6z0zsWA==",
			"dependencies": {
				"debug": "2.6.9",
				"encodeurl": "~1.0.2",
				"escape-html": "~1.0.3",
				"on-finished": "~2.3.0",
				"parseurl": "~1.3.3",
				"statuses": "~1.5.0",
				"unpipe": "~1.0.0"
			},
			"engines": {
				"node": ">= 0.8"
			}
		},
		"node_modules/flat-cache": {
			"version": "2.0.1",
			"resolved": "https://registry.npmjs.org/flat-cache/-/flat-cache-2.0.1.tgz",
			"integrity": "sha512-LoQe6yDuUMDzQAEH8sgmh4Md6oZnc/7PjtwjNFSzveXqSHt6ka9fPBuso7IGf9Rz4uqnSnWiFH2B/zj24a5ReA==",
			"dev": true,
			"dependencies": {
				"flatted": "^2.0.0",
				"rimraf": "2.6.3",
				"write": "1.0.3"
			},
			"engines": {
				"node": ">=4"
			}
		},
		"node_modules/flat-cache/node_modules/rimraf": {
			"version": "2.6.3",
			"resolved": "https://registry.npmjs.org/rimraf/-/rimraf-2.6.3.tgz",
			"integrity": "sha512-mwqeW5XsA2qAejG46gYdENaxXjx9onRNCfn7L0duuP4hCuTIi/QO7PDK07KJfp1d+izWPrzEJDcSqBa0OZQriA==",
			"deprecated": "Rimraf versions prior to v4 are no longer supported",
			"dev": true,
			"dependencies": {
				"glob": "^7.1.3"
			},
			"bin": {
				"rimraf": "bin.js"
			}
		},
		"node_modules/flatted": {
			"version": "2.0.1",
			"resolved": "https://registry.npmjs.org/flatted/-/flatted-2.0.1.tgz",
			"integrity": "sha512-a1hQMktqW9Nmqr5aktAux3JMNqaucxGcjtjWnZLHX7yyPCmlSV3M54nGYbqT8K+0GhF3NBgmJCc3ma+WOgX8Jg==",
			"dev": true
		},
		"node_modules/forever-agent": {
			"version": "0.6.1",
			"resolved": "https://registry.npmjs.org/forever-agent/-/forever-agent-0.6.1.tgz",
			"integrity": "sha1-+8cfDEGt6zf5bFd60e1C2P2sypE=",
			"engines": {
				"node": "*"
			}
		},
		"node_modules/form-data": {
			"version": "2.3.3",
			"resolved": "https://registry.npmjs.org/form-data/-/form-data-2.3.3.tgz",
			"integrity": "sha512-1lLKB2Mu3aGP1Q/2eCOx0fNbRMe7XdwktwOruhfqqd0rIJWwN4Dh+E3hrPSlDCXnSR7UtZ1N38rVXm+6+MEhJQ==",
			"dependencies": {
				"asynckit": "^0.4.0",
				"combined-stream": "^1.0.6",
				"mime-types": "^2.1.12"
			},
			"engines": {
				"node": ">= 0.12"
			}
		},
		"node_modules/forwarded": {
			"version": "0.1.2",
			"resolved": "https://registry.npmjs.org/forwarded/-/forwarded-0.1.2.tgz",
			"integrity": "sha1-mMI9qxF1ZXuMBXPozszZGw/xjIQ=",
			"engines": {
				"node": ">= 0.6"
			}
		},
		"node_modules/fresh": {
			"version": "0.5.2",
			"resolved": "https://registry.npmjs.org/fresh/-/fresh-0.5.2.tgz",
			"integrity": "sha1-PYyt2Q2XZWn6g1qx+OSyOhBWBac=",
			"engines": {
				"node": ">= 0.6"
			}
		},
		"node_modules/fs-constants": {
			"version": "1.0.0",
			"resolved": "https://registry.npmjs.org/fs-constants/-/fs-constants-1.0.0.tgz",
			"integrity": "sha512-y6OAwoSIf7FyjMIv94u+b5rdheZEjzR63GTyZJm5qh4Bi+2YgwLCcI/fPFZkL5PSixOt6ZNKm+w+Hfp/Bciwow=="
		},
		"node_modules/fs-extra": {
			"version": "6.0.1",
			"resolved": "https://registry.npmjs.org/fs-extra/-/fs-extra-6.0.1.tgz",
			"integrity": "sha512-GnyIkKhhzXZUWFCaJzvyDLEEgDkPfb4/TPvJCJVuS8MWZgoSsErf++QpiAlDnKFcqhRlm+tIOcencCjyJE6ZCA==",
			"dependencies": {
				"graceful-fs": "^4.1.2",
				"jsonfile": "^4.0.0",
				"universalify": "^0.1.0"
			}
		},
		"node_modules/fs.realpath": {
			"version": "1.0.0",
			"resolved": "https://registry.npmjs.org/fs.realpath/-/fs.realpath-1.0.0.tgz",
			"integrity": "sha1-FQStJSMVjKpA20onh8sBQRmU6k8="
		},
		"node_modules/function-bind": {
			"version": "1.1.1",
			"resolved": "https://registry.npmjs.org/function-bind/-/function-bind-1.1.1.tgz",
			"integrity": "sha512-yIovAzMX49sF8Yl58fSCWJ5svSLuaibPxXQJFLmBObTuCr0Mf1KiPopGM9NiFjiYBCbfaa2Fh6breQ6ANVTI0A=="
		},
		"node_modules/functional-red-black-tree": {
			"version": "1.0.1",
			"resolved": "https://registry.npmjs.org/functional-red-black-tree/-/functional-red-black-tree-1.0.1.tgz",
			"integrity": "sha1-GwqzvVU7Kg1jmdKcDj6gslIHgyc=",
			"dev": true
		},
		"node_modules/getpass": {
			"version": "0.1.7",
			"resolved": "https://registry.npmjs.org/getpass/-/getpass-0.1.7.tgz",
			"integrity": "sha1-Xv+OPmhNVprkyysSgmBOi6YhSfo=",
			"dependencies": {
				"assert-plus": "^1.0.0"
			}
		},
		"node_modules/glob": {
			"version": "7.1.4",
			"resolved": "https://registry.npmjs.org/glob/-/glob-7.1.4.tgz",
			"integrity": "sha512-hkLPepehmnKk41pUGm3sYxoFs/umurYfYJCerbXEyFIWcAzvpipAgVkBqqT9RBKMGjnq6kMuyYwha6csxbiM1A==",
			"deprecated": "Glob versions prior to v9 are no longer supported",
			"dependencies": {
				"fs.realpath": "^1.0.0",
				"inflight": "^1.0.4",
				"inherits": "2",
				"minimatch": "^3.0.4",
				"once": "^1.3.0",
				"path-is-absolute": "^1.0.0"
			},
			"engines": {
				"node": "*"
			}
		},
		"node_modules/globals": {
			"version": "11.12.0",
			"resolved": "https://registry.npmjs.org/globals/-/globals-11.12.0.tgz",
			"integrity": "sha512-WOBp/EEGUiIsJSp7wcv/y6MO+lV9UoncWqxuFfm8eBwzWNgyfBd6Gz+IeKQ9jCmyhoH99g15M3T+QaVHFjizVA==",
			"dev": true,
			"engines": {
				"node": ">=4"
			}
		},
		"node_modules/graceful-fs": {
			"version": "4.2.2",
			"resolved": "https://registry.npmjs.org/graceful-fs/-/graceful-fs-4.2.2.tgz",
			"integrity": "sha512-IItsdsea19BoLC7ELy13q1iJFNmd7ofZH5+X/pJr90/nRoPEX0DJo1dHDbgtYWOhJhcCgMDTOw84RZ72q6lB+Q=="
		},
		"node_modules/grpc": {
			"version": "1.21.1",
			"resolved": "https://registry.npmjs.org/grpc/-/grpc-1.21.1.tgz",
			"integrity": "sha512-PFsZQazf62nP05a0xm23mlImMuw5oVlqF/0zakmsdqJgvbABe+d6VThY2PfhqJmWEL/FhQ6QNYsxS5EAM6++7g==",
			"bundleDependencies": [
				"node-pre-gyp"
			],
			"deprecated": "This library will not receive further updates other than security fixes. We recommend using @grpc/grpc-js instead.",
			"hasInstallScript": true,
			"dependencies": {
				"lodash.camelcase": "^4.3.0",
				"lodash.clone": "^4.5.0",
				"nan": "^2.13.2",
				"node-pre-gyp": "^0.13.0",
				"protobufjs": "^5.0.3"
			},
			"engines": {
				"node": ">=4"
			}
		},
		"node_modules/grpc/node_modules/abbrev": {
			"version": "1.1.1",
			"integrity": "sha512-nne9/IiQ/hzIhY6pdDnbBtz7DjPTKrY00P/zvPSm5pOFkl6xuGrGnXn/VtTNNfNtAfZ9/1RtehkszU9qcTii0Q==",
			"inBundle": true
		},
		"node_modules/grpc/node_modules/ansi-regex": {
			"version": "2.1.1",
			"integrity": "sha512-TIGnTpdo+E3+pCyAluZvtED5p5wCqLdezCyhPZzKPcxvFplEt4i+W7OONCKgeZFT3+y5NZZfOOS/Bdcanm1MYA==",
			"inBundle": true,
			"engines": {
				"node": ">=0.10.0"
			}
		},
		"node_modules/grpc/node_modules/aproba": {
			"version": "1.2.0",
			"integrity": "sha512-Y9J6ZjXtoYh8RnXVCMOU/ttDmk1aBjunq9vO0ta5x85WDQiQfUF9sIPBITdbiiIVcBo03Hi3jMxigBtsddlXRw==",
			"inBundle": true
		},
		"node_modules/grpc/node_modules/are-we-there-yet": {
			"version": "1.1.5",
			"integrity": "sha512-5hYdAkZlcG8tOLujVDTgCT+uPX0VnpAH28gWsLfzpXYm7wP6mp5Q/gYyR7YQ0cKVJcXJnl3j2kpBan13PtQf6w==",
			"deprecated": "This package is no longer supported.",
			"inBundle": true,
			"dependencies": {
				"delegates": "^1.0.0",
				"readable-stream": "^2.0.6"
			}
		},
		"node_modules/grpc/node_modules/balanced-match": {
			"version": "1.0.0",
			"integrity": "sha512-9Y0g0Q8rmSt+H33DfKv7FOc3v+iRI+o1lbzt8jGcIosYW37IIW/2XVYq5NPdmaD5NQ59Nk26Kl/vZbwW9Fr8vg==",
			"inBundle": true
		},
		"node_modules/grpc/node_modules/brace-expansion": {
			"version": "1.1.11",
			"integrity": "sha512-iCuPHDFgrHX7H2vEI/5xpz07zSHB00TpugqhmYtVmMO6518mCuRMoOYFldEBl0g187ufozdaHgWKcYFb61qGiA==",
			"inBundle": true,
			"dependencies": {
				"balanced-match": "^1.0.0",
				"concat-map": "0.0.1"
			}
		},
		"node_modules/grpc/node_modules/chownr": {
			"version": "1.1.1",
			"integrity": "sha512-j38EvO5+LHX84jlo6h4UzmOwi0UgW61WRyPtJz4qaadK5eY3BTS5TY/S1Stc3Uk2lIM6TPevAlULiEJwie860g==",
			"inBundle": true
		},
		"node_modules/grpc/node_modules/code-point-at": {
			"version": "1.1.0",
			"integrity": "sha512-RpAVKQA5T63xEj6/giIbUEtZwJ4UFIc3ZtvEkiaUERylqe8xb5IvqcgOurZLahv93CLKfxcw5YI+DZcUBRyLXA==",
			"inBundle": true,
			"engines": {
				"node": ">=0.10.0"
			}
		},
		"node_modules/grpc/node_modules/concat-map": {
			"version": "0.0.1",
			"integrity": "sha512-/Srv4dswyQNBfohGpz9o6Yb3Gz3SrUDqBH5rTuhGR7ahtlbYKnVxw2bCFMRljaA7EXHaXZ8wsHdodFvbkhKmqg==",
			"inBundle": true
		},
		"node_modules/grpc/node_modules/console-control-strings": {
			"version": "1.1.0",
			"integrity": "sha512-ty/fTekppD2fIwRvnZAVdeOiGd1c7YXEixbgJTNzqcxJWKQnjJ/V1bNEEE6hygpM3WjwHFUVK6HTjWSzV4a8sQ==",
			"inBundle": true
		},
		"node_modules/grpc/node_modules/core-util-is": {
			"version": "1.0.2",
			"integrity": "sha512-3lqz5YjWTYnW6dlDa5TLaTCcShfar1e40rmcJVwCBJC6mWlFuj0eCHIElmG1g5kyuJ/GD+8Wn4FFCcz4gJPfaQ==",
			"inBundle": true
		},
		"node_modules/grpc/node_modules/deep-extend": {
			"version": "0.6.0",
			"integrity": "sha512-LOHxIOaPYdHlJRtCQfDIVZtfw/ufM8+rVj649RIHzcm/vGwQRXFt6OPqIFWsm2XEMrNIEtWR64sY1LEKD2vAOA==",
			"inBundle": true,
			"engines": {
				"node": ">=4.0.0"
			}
		},
		"node_modules/grpc/node_modules/delegates": {
			"version": "1.0.0",
			"integrity": "sha512-bd2L678uiWATM6m5Z1VzNCErI3jiGzt6HGY8OVICs40JQq/HALfbyNJmp0UDakEY4pMMaN0Ly5om/B1VI/+xfQ==",
			"inBundle": true
		},
		"node_modules/grpc/node_modules/detect-libc": {
			"version": "1.0.3",
			"integrity": "sha512-pGjwhsmsp4kL2RTz08wcOlGN83otlqHeD/Z5T8GXZB+/YcpQ/dgo+lbU8ZsGxV0HIvqqxo9l7mqYwyYMD9bKDg==",
			"inBundle": true,
			"bin": {
				"detect-libc": "bin/detect-libc.js"
			},
			"engines": {
				"node": ">=0.10"
			}
		},
		"node_modules/grpc/node_modules/fs-minipass": {
			"version": "1.2.5",
			"integrity": "sha512-JhBl0skXjUPCFH7x6x61gQxrKyXsxB5gcgePLZCwfyCGGsTISMoIeObbrvVeP6Xmyaudw4TT43qV2Gz+iyd2oQ==",
			"inBundle": true,
			"dependencies": {
				"minipass": "^2.2.1"
			}
		},
		"node_modules/grpc/node_modules/fs.realpath": {
			"version": "1.0.0",
			"integrity": "sha512-OO0pH2lK6a0hZnAdau5ItzHPI6pUlvI7jMVnxUQRtw4owF2wk8lOSabtGDCTP4Ggrg2MbGnWO9X8K1t4+fGMDw==",
			"inBundle": true
		},
		"node_modules/grpc/node_modules/gauge": {
			"version": "2.7.4",
			"integrity": "sha512-14x4kjc6lkD3ltw589k0NrPD6cCNTD6CWoVUNpB85+DrtONoZn+Rug6xZU5RvSC4+TZPxA5AnBibQYAvZn41Hg==",
			"deprecated": "This package is no longer supported.",
			"inBundle": true,
			"dependencies": {
				"aproba": "^1.0.3",
				"console-control-strings": "^1.0.0",
				"has-unicode": "^2.0.0",
				"object-assign": "^4.1.0",
				"signal-exit": "^3.0.0",
				"string-width": "^1.0.1",
				"strip-ansi": "^3.0.1",
				"wide-align": "^1.1.0"
			}
		},
		"node_modules/grpc/node_modules/has-unicode": {
			"version": "2.0.1",
			"integrity": "sha512-8Rf9Y83NBReMnx0gFzA8JImQACstCYWUplepDa9xprwwtmgEZUF0h/i5xSA625zB/I37EtrswSST6OXxwaaIJQ==",
			"inBundle": true
		},
		"node_modules/grpc/node_modules/iconv-lite": {
			"version": "0.4.23",
			"integrity": "sha512-neyTUVFtahjf0mB3dZT77u+8O0QB89jFdnBkd5P1JgYPbPaia3gXXOVL2fq8VyU2gMMD7SaN7QukTB/pmXYvDA==",
			"inBundle": true,
			"dependencies": {
				"safer-buffer": ">= 2.1.2 < 3"
			},
			"engines": {
				"node": ">=0.10.0"
			}
		},
		"node_modules/grpc/node_modules/ignore-walk": {
			"version": "3.0.1",
			"integrity": "sha512-DTVlMx3IYPe0/JJcYP7Gxg7ttZZu3IInhuEhbchuqneY9wWe5Ojy2mXLBaQFUQmo0AW2r3qG7m1mg86js+gnlQ==",
			"inBundle": true,
			"dependencies": {
				"minimatch": "^3.0.4"
			}
		},
		"node_modules/grpc/node_modules/inflight": {
			"version": "1.0.6",
			"integrity": "sha512-k92I/b08q4wvFscXCLvqfsHCrjrF7yiXsQuIVvVE7N82W3+aqpzuUdBbfhWcy/FZR3/4IgflMgKLOsvPDrGCJA==",
			"deprecated": "This module is not supported, and leaks memory. Do not use it. Check out lru-cache if you want a good and tested way to coalesce async requests by a key value, which is much more comprehensive and powerful.",
			"inBundle": true,
			"dependencies": {
				"once": "^1.3.0",
				"wrappy": "1"
			}
		},
		"node_modules/grpc/node_modules/inherits": {
			"version": "2.0.3",
			"integrity": "sha512-x00IRNXNy63jwGkJmzPigoySHbaqpNuzKbBOmzK+g2OdZpQ9w+sxCN+VSB3ja7IAge2OP2qpfxTjeNcyjmW1uw==",
			"inBundle": true
		},
		"node_modules/grpc/node_modules/ini": {
			"version": "1.3.5",
			"integrity": "sha512-RZY5huIKCMRWDUqZlEi72f/lmXKMvuszcMBduliQ3nnWbx9X/ZBQO7DijMEYS9EhHBb2qacRUMtC7svLwe0lcw==",
			"deprecated": "Please update to ini >=1.3.6 to avoid a prototype pollution issue",
			"inBundle": true,
			"engines": {
				"node": "*"
			}
		},
		"node_modules/grpc/node_modules/is-fullwidth-code-point": {
			"version": "1.0.0",
			"integrity": "sha512-1pqUqRjkhPJ9miNq9SwMfdvi6lBJcd6eFxvfaivQhaH3SgisfiuudvFntdKOmxuee/77l+FPjKrQjWvmPjWrRw==",
			"inBundle": true,
			"dependencies": {
				"number-is-nan": "^1.0.0"
			},
			"engines": {
				"node": ">=0.10.0"
			}
		},
		"node_modules/grpc/node_modules/isarray": {
			"version": "1.0.0",
			"integrity": "sha512-VLghIWNM6ELQzo7zwmcg0NmTVyWKYjvIeM83yjp0wRDTmUnrM678fQbcKBo6n2CJEF0szoG//ytg+TKla89ALQ==",
			"inBundle": true
		},
		"node_modules/grpc/node_modules/minimatch": {
			"version": "3.0.4",
			"integrity": "sha512-yJHVQEhyqPLUTgt9B83PXu6W3rx4MvvHvSUvToogpwoGDOUQ+yDrR0HRot+yOCdCO7u4hX3pWft6kWBBcqh0UA==",
			"inBundle": true,
			"dependencies": {
				"brace-expansion": "^1.1.7"
			},
			"engines": {
				"node": "*"
			}
		},
		"node_modules/grpc/node_modules/minimist": {
			"version": "1.2.0",
			"integrity": "sha512-7Wl+Jz+IGWuSdgsQEJ4JunV0si/iMhg42MnQQG6h1R6TNeVenp4U9x5CC5v/gYqz/fENLQITAWXidNtVL0NNbw==",
			"inBundle": true
		},
		"node_modules/grpc/node_modules/minipass": {
			"version": "2.3.5",
			"integrity": "sha512-Gi1W4k059gyRbyVUZQ4mEqLm0YIUiGYfvxhF6SIlk3ui1WVxMTGfGdQ2SInh3PDrRTVvPKgULkpJtT4RH10+VA==",
			"inBundle": true,
			"dependencies": {
				"safe-buffer": "^5.1.2",
				"yallist": "^3.0.0"
			}
		},
		"node_modules/grpc/node_modules/minizlib": {
			"version": "1.2.1",
			"integrity": "sha512-7+4oTUOWKg7AuL3vloEWekXY2/D20cevzsrNT2kGWm+39J9hGTCBv8VI5Pm5lXZ/o3/mdR4f8rflAPhnQb8mPA==",
			"inBundle": true,
			"dependencies": {
				"minipass": "^2.2.1"
			}
		},
		"node_modules/grpc/node_modules/mkdirp": {
			"version": "0.5.1",
			"integrity": "sha512-SknJC52obPfGQPnjIkXbmA6+5H15E+fR+E4iR2oQ3zzCLbd7/ONua69R/Gw7AgkTLsRG+r5fzksYwWe1AgTyWA==",
			"deprecated": "Legacy versions of mkdirp are no longer supported. Please update to mkdirp 1.x. (Note that the API surface has changed to use Promises in 1.x.)",
			"inBundle": true,
			"dependencies": {
				"minimist": "0.0.8"
			},
			"bin": {
				"mkdirp": "bin/cmd.js"
			}
		},
		"node_modules/grpc/node_modules/mkdirp/node_modules/minimist": {
			"version": "0.0.8",
			"integrity": "sha512-miQKw5Hv4NS1Psg2517mV4e4dYNaO3++hjAvLOAzKqZ61rH8NS1SK+vbfBWZ5PY/Me/bEWhUwqMghEW5Fb9T7Q==",
			"inBundle": true
		},
		"node_modules/grpc/node_modules/needle": {
			"version": "2.3.1",
			"integrity": "sha512-CaLXV3W8Vnbps8ZANqDGz7j4x7Yj1LW4TWF/TQuDfj7Cfx4nAPTvw98qgTevtto1oHDrh3pQkaODbqupXlsWTg==",
			"inBundle": true,
			"dependencies": {
				"debug": "^4.1.0",
				"iconv-lite": "^0.4.4",
				"sax": "^1.2.4"
			},
			"bin": {
				"needle": "bin/needle"
			},
			"engines": {
				"node": ">= 4.4.x"
			}
		},
		"node_modules/grpc/node_modules/needle/node_modules/debug": {
			"version": "4.1.1",
			"integrity": "sha512-pYAIzeRo8J6KPEaJ0VWOh5Pzkbw/RetuzehGM7QRRX5he4fPHx2rdKMB256ehJCkX+XRQm16eZLqLNS8RSZXZw==",
			"deprecated": "Debug versions >=3.2.0 <3.2.7 || >=4 <4.3.1 have a low-severity ReDos regression when used in a Node.js environment. It is recommended you upgrade to 3.2.7 or 4.3.1. (https://github.com/visionmedia/debug/issues/797)",
			"inBundle": true,
			"dependencies": {
				"ms": "^2.1.1"
			}
		},
		"node_modules/grpc/node_modules/needle/node_modules/ms": {
			"version": "2.1.1",
			"integrity": "sha512-tgp+dl5cGk28utYktBsrFqA7HKgrhgPsg6Z/EfhWI4gl1Hwq8B/GmY/0oXZ6nF8hDVesS/FpnYaD/kOWhYQvyg==",
			"inBundle": true
		},
		"node_modules/grpc/node_modules/node-pre-gyp": {
			"version": "0.13.0",
			"integrity": "sha512-Md1D3xnEne8b/HGVQkZZwV27WUi1ZRuZBij24TNaZwUPU3ZAFtvT6xxJGaUVillfmMKnn5oD1HoGsp2Ftik7SQ==",
			"deprecated": "Please upgrade to @mapbox/node-pre-gyp: the non-scoped node-pre-gyp package is deprecated and only the @mapbox scoped package will recieve updates in the future",
			"inBundle": true,
			"dependencies": {
				"detect-libc": "^1.0.2",
				"mkdirp": "^0.5.1",
				"needle": "^2.2.1",
				"nopt": "^4.0.1",
				"npm-packlist": "^1.1.6",
				"npmlog": "^4.0.2",
				"rc": "^1.2.7",
				"rimraf": "^2.6.1",
				"semver": "^5.3.0",
				"tar": "^4"
			},
			"bin": {
				"node-pre-gyp": "bin/node-pre-gyp"
			}
		},
		"node_modules/grpc/node_modules/nopt": {
			"version": "4.0.1",
			"integrity": "sha512-+5XZFpQZEY0cg5JaxLwGxDlKNKYxuXwGt8/Oi3UXm5/4ymrJve9d2CURituxv3rSrVCGZj4m1U1JlHTdcKt2Ng==",
			"inBundle": true,
			"dependencies": {
				"abbrev": "1",
				"osenv": "^0.1.4"
			},
			"bin": {
				"nopt": "bin/nopt.js"
			}
		},
		"node_modules/grpc/node_modules/npm-bundled": {
			"version": "1.0.6",
			"integrity": "sha512-8/JCaftHwbd//k6y2rEWp6k1wxVfpFzB6t1p825+cUb7Ym2XQfhwIC5KwhrvzZRJu+LtDE585zVaS32+CGtf0g==",
			"inBundle": true
		},
		"node_modules/grpc/node_modules/npm-packlist": {
			"version": "1.4.1",
			"integrity": "sha512-+TcdO7HJJ8peiiYhvPxsEDhF3PJFGUGRcFsGve3vxvxdcpO2Z4Z7rkosRM0kWj6LfbK/P0gu3dzk5RU1ffvFcw==",
			"inBundle": true,
			"dependencies": {
				"ignore-walk": "^3.0.1",
				"npm-bundled": "^1.0.1"
			}
		},
		"node_modules/grpc/node_modules/npmlog": {
			"version": "4.1.2",
			"integrity": "sha512-2uUqazuKlTaSI/dC8AzicUck7+IrEaOnN/e0jd3Xtt1KcGpwx30v50mL7oPyr/h9bL3E4aZccVwpwP+5W9Vjkg==",
			"deprecated": "This package is no longer supported.",
			"inBundle": true,
			"dependencies": {
				"are-we-there-yet": "~1.1.2",
				"console-control-strings": "~1.1.0",
				"gauge": "~2.7.3",
				"set-blocking": "~2.0.0"
			}
		},
		"node_modules/grpc/node_modules/number-is-nan": {
			"version": "1.0.1",
			"integrity": "sha512-4jbtZXNAsfZbAHiiqjLPBiCl16dES1zI4Hpzzxw61Tk+loF+sBDBKx1ICKKKwIqQ7M0mFn1TmkN7euSncWgHiQ==",
			"inBundle": true,
			"engines": {
				"node": ">=0.10.0"
			}
		},
		"node_modules/grpc/node_modules/object-assign": {
			"version": "4.1.1",
			"integrity": "sha512-rJgTQnkUnH1sFw8yT6VSU3zD3sWmu6sZhIseY8VX+GRu3P6F7Fu+JNDoXfklElbLJSnc3FUQHVe4cU5hj+BcUg==",
			"inBundle": true,
			"engines": {
				"node": ">=0.10.0"
			}
		},
		"node_modules/grpc/node_modules/once": {
			"version": "1.4.0",
			"integrity": "sha512-lNaJgI+2Q5URQBkccEKHTQOPaXdUxnZZElQTZY0MFUAuaEqe1E+Nyvgdz/aIyNi6Z9MzO5dv1H8n58/GELp3+w==",
			"inBundle": true,
			"dependencies": {
				"wrappy": "1"
			}
		},
		"node_modules/grpc/node_modules/os-homedir": {
			"version": "1.0.2",
			"integrity": "sha512-B5JU3cabzk8c67mRRd3ECmROafjYMXbuzlwtqdM8IbS8ktlTix8aFGb2bAGKrSRIlnfKwovGUUr72JUPyOb6kQ==",
			"inBundle": true,
			"engines": {
				"node": ">=0.10.0"
			}
		},
		"node_modules/grpc/node_modules/os-tmpdir": {
			"version": "1.0.2",
			"integrity": "sha512-D2FR03Vir7FIu45XBY20mTb+/ZSWB00sjU9jdQXt83gDrI4Ztz5Fs7/yy74g2N5SVQY4xY1qDr4rNddwYRVX0g==",
			"inBundle": true,
			"engines": {
				"node": ">=0.10.0"
			}
		},
		"node_modules/grpc/node_modules/osenv": {
			"version": "0.1.5",
			"integrity": "sha512-0CWcCECdMVc2Rw3U5w9ZjqX6ga6ubk1xDVKxtBQPK7wis/0F2r9T6k4ydGYhecl7YUBxBVxhL5oisPsNxAPe2g==",
			"deprecated": "This package is no longer supported.",
			"inBundle": true,
			"dependencies": {
				"os-homedir": "^1.0.0",
				"os-tmpdir": "^1.0.0"
			}
		},
		"node_modules/grpc/node_modules/path-is-absolute": {
			"version": "1.0.1",
			"integrity": "sha512-AVbw3UJ2e9bq64vSaS9Am0fje1Pa8pbGqTTsmXfaIiMpnr5DlDhfJOuLj9Sf95ZPVDAUerDfEk88MPmPe7UCQg==",
			"inBundle": true,
			"engines": {
				"node": ">=0.10.0"
			}
		},
		"node_modules/grpc/node_modules/process-nextick-args": {
			"version": "2.0.0",
			"integrity": "sha512-MtEC1TqN0EU5nephaJ4rAtThHtC86dNN9qCuEhtshvpVBkAW5ZO7BASN9REnF9eoXGcRub+pFuKEpOHE+HbEMw==",
			"inBundle": true
		},
		"node_modules/grpc/node_modules/rc": {
			"version": "1.2.8",
			"integrity": "sha512-y3bGgqKj3QBdxLbLkomlohkvsA8gdAiUQlSBJnBhfn+BPxg4bc62d8TcBW15wavDfgexCgccckhcZvywyQYPOw==",
			"inBundle": true,
			"dependencies": {
				"deep-extend": "^0.6.0",
				"ini": "~1.3.0",
				"minimist": "^1.2.0",
				"strip-json-comments": "~2.0.1"
			},
			"bin": {
				"rc": "cli.js"
			}
		},
		"node_modules/grpc/node_modules/readable-stream": {
			"version": "2.3.6",
			"integrity": "sha512-tQtKA9WIAhBF3+VLAseyMqZeBjW0AHJoxOtYqSUZNJxauErmLbVm2FW1y+J/YA9dUrAC39ITejlZWhVIwawkKw==",
			"inBundle": true,
			"dependencies": {
				"core-util-is": "~1.0.0",
				"inherits": "~2.0.3",
				"isarray": "~1.0.0",
				"process-nextick-args": "~2.0.0",
				"safe-buffer": "~5.1.1",
				"string_decoder": "~1.1.1",
				"util-deprecate": "~1.0.1"
			}
		},
		"node_modules/grpc/node_modules/rimraf": {
			"version": "2.6.3",
			"integrity": "sha512-mwqeW5XsA2qAejG46gYdENaxXjx9onRNCfn7L0duuP4hCuTIi/QO7PDK07KJfp1d+izWPrzEJDcSqBa0OZQriA==",
			"deprecated": "Rimraf versions prior to v4 are no longer supported",
			"inBundle": true,
			"dependencies": {
				"glob": "^7.1.3"
			},
			"bin": {
				"rimraf": "bin.js"
			}
		},
		"node_modules/grpc/node_modules/rimraf/node_modules/glob": {
			"version": "7.1.4",
			"integrity": "sha512-hkLPepehmnKk41pUGm3sYxoFs/umurYfYJCerbXEyFIWcAzvpipAgVkBqqT9RBKMGjnq6kMuyYwha6csxbiM1A==",
			"deprecated": "Glob versions prior to v9 are no longer supported",
			"inBundle": true,
			"dependencies": {
				"fs.realpath": "^1.0.0",
				"inflight": "^1.0.4",
				"inherits": "2",
				"minimatch": "^3.0.4",
				"once": "^1.3.0",
				"path-is-absolute": "^1.0.0"
			},
			"engines": {
				"node": "*"
			}
		},
		"node_modules/grpc/node_modules/safe-buffer": {
			"version": "5.1.2",
			"integrity": "sha512-Gd2UZBJDkXlY7GbJxfsE8/nvKkUEU1G38c1siN6QP6a9PT9MmHB8GnpscSmMJSoF8LOIrt8ud/wPtojys4G6+g==",
			"inBundle": true
		},
		"node_modules/grpc/node_modules/safer-buffer": {
			"version": "2.1.2",
			"integrity": "sha512-YZo3K82SD7Riyi0E1EQPojLz7kpepnSQI9IyPbHHg1XXXevb5dJI7tpyN2ADxGcQbHG7vcyRHk0cbwqcQriUtg==",
			"inBundle": true
		},
		"node_modules/grpc/node_modules/sax": {
			"version": "1.2.4",
			"integrity": "sha512-NqVDv9TpANUjFm0N8uM5GxL36UgKi9/atZw+x7YFnQ8ckwFGKrl4xX4yWtrey3UJm5nP1kUbnYgLopqWNSRhWw==",
			"inBundle": true
		},
		"node_modules/grpc/node_modules/semver": {
			"version": "5.7.0",
			"integrity": "sha512-Ya52jSX2u7QKghxeoFGpLwCtGlt7j0oY9DYb5apt9nPlJ42ID+ulTXESnt/qAQcoSERyZ5sl3LDIOw0nAn/5DA==",
			"inBundle": true,
			"bin": {
				"semver": "bin/semver"
			}
		},
		"node_modules/grpc/node_modules/set-blocking": {
			"version": "2.0.0",
			"integrity": "sha512-KiKBS8AnWGEyLzofFfmvKwpdPzqiy16LvQfK3yv/fVH7Bj13/wl3JSR1J+rfgRE9q7xUJK4qvgS8raSOeLUehw==",
			"inBundle": true
		},
		"node_modules/grpc/node_modules/signal-exit": {
			"version": "3.0.2",
			"integrity": "sha512-meQNNykwecVxdu1RlYMKpQx4+wefIYpmxi6gexo/KAbwquJrBUrBmKYJrE8KFkVQAAVWEnwNdu21PgrD77J3xA==",
			"inBundle": true
		},
		"node_modules/grpc/node_modules/string_decoder": {
			"version": "1.1.1",
			"integrity": "sha512-n/ShnvDi6FHbbVfviro+WojiFzv+s8MPMHBczVePfUpDJLwoLT0ht1l4YwBCbi8pJAveEEdnkHyPyTP/mzRfwg==",
			"inBundle": true,
			"dependencies": {
				"safe-buffer": "~5.1.0"
			}
		},
		"node_modules/grpc/node_modules/string-width": {
			"version": "1.0.2",
			"integrity": "sha512-0XsVpQLnVCXHJfyEs8tC0zpTVIr5PKKsQtkT29IwupnPTjtPmQ3xT/4yCREF9hYkV/3M3kzcUTSAZT6a6h81tw==",
			"inBundle": true,
			"dependencies": {
				"code-point-at": "^1.0.0",
				"is-fullwidth-code-point": "^1.0.0",
				"strip-ansi": "^3.0.0"
			},
			"engines": {
				"node": ">=0.10.0"
			}
		},
		"node_modules/grpc/node_modules/strip-ansi": {
			"version": "3.0.1",
			"integrity": "sha512-VhumSSbBqDTP8p2ZLKj40UjBCV4+v8bUSEpUb4KjRgWk9pbqGF4REFj6KEagidb2f/M6AzC0EmFyDNGaw9OCzg==",
			"inBundle": true,
			"dependencies": {
				"ansi-regex": "^2.0.0"
			},
			"engines": {
				"node": ">=0.10.0"
			}
		},
		"node_modules/grpc/node_modules/strip-json-comments": {
			"version": "2.0.1",
			"integrity": "sha512-4gB8na07fecVVkOI6Rs4e7T6NOTki5EmL7TUduTs6bu3EdnSycntVJ4re8kgZA+wx9IueI2Y11bfbgwtzuE0KQ==",
			"inBundle": true,
			"engines": {
				"node": ">=0.10.0"
			}
		},
		"node_modules/grpc/node_modules/tar": {
			"version": "4.4.8",
			"integrity": "sha512-LzHF64s5chPQQS0IYBn9IN5h3i98c12bo4NCO7e0sGM2llXQ3p2FGC5sdENN4cTW48O915Sh+x+EXx7XW96xYQ==",
			"inBundle": true,
			"dependencies": {
				"chownr": "^1.1.1",
				"fs-minipass": "^1.2.5",
				"minipass": "^2.3.4",
				"minizlib": "^1.1.1",
				"mkdirp": "^0.5.0",
				"safe-buffer": "^5.1.2",
				"yallist": "^3.0.2"
			},
			"engines": {
				"node": ">=4.5"
			}
		},
		"node_modules/grpc/node_modules/util-deprecate": {
			"version": "1.0.2",
			"integrity": "sha512-EPD5q1uXyFxJpCrLnCc1nHnq3gOa6DZBocAIiI2TaSCA7VCJ1UJDMagCzIkXNsUYfD1daK//LTEQ8xiIbrHtcw==",
			"inBundle": true
		},
		"node_modules/grpc/node_modules/wide-align": {
			"version": "1.1.3",
			"integrity": "sha512-QGkOQc8XL6Bt5PwnsExKBPuMKBxnGxWWW3fU55Xt4feHozMUhdUMaBCk290qpm/wG5u/RSKzwdAC4i51YigihA==",
			"inBundle": true,
			"dependencies": {
				"string-width": "^1.0.2 || 2"
			}
		},
		"node_modules/grpc/node_modules/wrappy": {
			"version": "1.0.2",
			"integrity": "sha512-l4Sp/DRseor9wL6EvV2+TuQn63dMkPjZ/sp9XkghTEbV9KlPS1xUsZ3u7/IQO4wxtcFB4bgpQPRcR3QCvezPcQ==",
			"inBundle": true
		},
		"node_modules/grpc/node_modules/yallist": {
			"version": "3.0.3",
			"integrity": "sha512-S+Zk8DEWE6oKpV+vI3qWkaK+jSbIK86pCwe2IF/xwIpQ8jEuxpw9NyaGjmp9+BoJv5FV2piqCDcoCtStppiq2A==",
			"inBundle": true
		},
		"node_modules/har-schema": {
			"version": "2.0.0",
			"resolved": "https://registry.npmjs.org/har-schema/-/har-schema-2.0.0.tgz",
			"integrity": "sha1-qUwiJOvKwEeCoNkDVSHyRzW37JI=",
			"engines": {
				"node": ">=4"
			}
		},
		"node_modules/har-validator": {
			"version": "5.1.3",
			"resolved": "https://registry.npmjs.org/har-validator/-/har-validator-5.1.3.tgz",
			"integrity": "sha512-sNvOCzEQNr/qrvJgc3UG/kD4QtlHycrzwS+6mfTrrSq97BvaYcPZZI1ZSqGSPR73Cxn4LKTD4PttRwfU7jWq5g==",
			"deprecated": "this library is no longer supported",
			"dependencies": {
				"ajv": "^6.5.5",
				"har-schema": "^2.0.0"
			},
			"engines": {
				"node": ">=6"
			}
		},
		"node_modules/has": {
			"version": "1.0.3",
			"resolved": "https://registry.npmjs.org/has/-/has-1.0.3.tgz",
			"integrity": "sha512-f2dvO0VU6Oej7RkWJGrehjbzMAjFp5/VKPp5tTpWIV4JHHZK1/BxbFRtf/siA2SWTe09caDmVtYYzWEIbBS4zw==",
			"dependencies": {
				"function-bind": "^1.1.1"
			},
			"engines": {
				"node": ">= 0.4.0"
			}
		},
		"node_modules/has-flag": {
			"version": "3.0.0",
			"resolved": "https://registry.npmjs.org/has-flag/-/has-flag-3.0.0.tgz",
			"integrity": "sha1-tdRU3CGZriJWmfNGfloH87lVuv0=",
			"dev": true,
			"engines": {
				"node": ">=4"
			}
		},
		"node_modules/hash.js": {
			"version": "1.1.7",
			"resolved": "https://registry.npmjs.org/hash.js/-/hash.js-1.1.7.tgz",
			"integrity": "sha512-taOaskGt4z4SOANNseOviYDvjEJinIkRgmp7LbKP2YTTmVxWBl87s/uzK9r+44BclBSp2X7K1hqeNfz9JbBeXA==",
			"dependencies": {
				"inherits": "^2.0.3",
				"minimalistic-assert": "^1.0.1"
			}
		},
		"node_modules/hmac-drbg": {
			"version": "1.0.1",
			"resolved": "https://registry.npmjs.org/hmac-drbg/-/hmac-drbg-1.0.1.tgz",
			"integrity": "sha1-0nRXAQJabHdabFRXk+1QL8DGSaE=",
			"dependencies": {
				"hash.js": "^1.0.3",
				"minimalistic-assert": "^1.0.0",
				"minimalistic-crypto-utils": "^1.0.1"
			}
		},
		"node_modules/hoek": {
			"version": "4.2.1",
			"resolved": "https://registry.npmjs.org/hoek/-/hoek-4.2.1.tgz",
			"integrity": "sha512-QLg82fGkfnJ/4iy1xZ81/9SIJiq1NGFUMGs6ParyjBZr6jW2Ufj/snDqTHixNlHdPNwN2RLVD0Pi3igeK9+JfA==",
			"deprecated": "This version has been deprecated in accordance with the hapi support policy (hapi.im/support). Please upgrade to the latest version to get the best features, bug fixes, and security patches. If you are unable to upgrade at this time, paid support is available for older versions (hapi.im/commercial).",
			"engines": {
				"node": ">=4.0.0"
			}
		},
		"node_modules/http-errors": {
			"version": "1.7.2",
			"resolved": "https://registry.npmjs.org/http-errors/-/http-errors-1.7.2.tgz",
			"integrity": "sha512-uUQBt3H/cSIVfch6i1EuPNy/YsRSOUBXTVfZ+yR7Zjez3qjBz6i9+i4zjNaoqcoFVI4lQJ5plg63TvGfRSDCRg==",
			"dependencies": {
				"depd": "~1.1.2",
				"inherits": "2.0.3",
				"setprototypeof": "1.1.1",
				"statuses": ">= 1.5.0 < 2",
				"toidentifier": "1.0.0"
			},
			"engines": {
				"node": ">= 0.6"
			}
		},
		"node_modules/http-errors/node_modules/inherits": {
			"version": "2.0.3",
			"resolved": "https://registry.npmjs.org/inherits/-/inherits-2.0.3.tgz",
			"integrity": "sha1-Yzwsg+PaQqUC9SRmAiSA9CCCYd4="
		},
		"node_modules/http-signature": {
			"version": "1.2.0",
			"resolved": "https://registry.npmjs.org/http-signature/-/http-signature-1.2.0.tgz",
			"integrity": "sha1-muzZJRFHcvPZW2WmCruPfBj7rOE=",
			"dependencies": {
				"assert-plus": "^1.0.0",
				"jsprim": "^1.2.2",
				"sshpk": "^1.7.0"
			},
			"engines": {
				"node": ">=0.8",
				"npm": ">=1.3.7"
			}
		},
		"node_modules/iconv-lite": {
			"version": "0.4.24",
			"resolved": "https://registry.npmjs.org/iconv-lite/-/iconv-lite-0.4.24.tgz",
			"integrity": "sha512-v3MXnZAcvnywkTUEZomIActle7RXXeedOR31wwl7VlyoXO4Qi9arvSenNQWne1TcRwhCL1HwLI21bEqdpj8/rA==",
			"dependencies": {
				"safer-buffer": ">= 2.1.2 < 3"
			},
			"engines": {
				"node": ">=0.10.0"
			}
		},
		"node_modules/ignore": {
			"version": "4.0.6",
			"resolved": "https://registry.npmjs.org/ignore/-/ignore-4.0.6.tgz",
			"integrity": "sha512-cyFDKrqc/YdcWFniJhzI42+AzS+gNwmUzOSFcRCQYwySuBBBy/KjuxWLZ/FHEH6Moq1NizMOBWyTcv8O4OZIMg==",
			"dev": true,
			"engines": {
				"node": ">= 4"
			}
		},
		"node_modules/ignore-walk": {
			"version": "3.0.2",
			"resolved": "https://registry.npmjs.org/ignore-walk/-/ignore-walk-3.0.2.tgz",
			"integrity": "sha512-EXyErtpHbn75ZTsOADsfx6J/FPo6/5cjev46PXrcTpd8z3BoRkXgYu9/JVqrI7tusjmwCZutGeRJeU0Wo1e4Cw==",
			"dependencies": {
				"minimatch": "^3.0.4"
			}
		},
		"node_modules/import-fresh": {
			"version": "3.1.0",
			"resolved": "https://registry.npmjs.org/import-fresh/-/import-fresh-3.1.0.tgz",
			"integrity": "sha512-PpuksHKGt8rXfWEr9m9EHIpgyyaltBy8+eF6GJM0QCAxMgxCfucMF3mjecK2QsJr0amJW7gTqh5/wht0z2UhEQ==",
			"dev": true,
			"dependencies": {
				"parent-module": "^1.0.0",
				"resolve-from": "^4.0.0"
			},
			"engines": {
				"node": ">=6"
			}
		},
		"node_modules/imurmurhash": {
			"version": "0.1.4",
			"resolved": "https://registry.npmjs.org/imurmurhash/-/imurmurhash-0.1.4.tgz",
			"integrity": "sha1-khi5srkoojixPcT7a21XbyMUU+o=",
			"dev": true,
			"engines": {
				"node": ">=0.8.19"
			}
		},
		"node_modules/inflight": {
			"version": "1.0.6",
			"resolved": "https://registry.npmjs.org/inflight/-/inflight-1.0.6.tgz",
			"integrity": "sha1-Sb1jMdfQLQwJvJEKEHW6gWW1bfk=",
			"deprecated": "This module is not supported, and leaks memory. Do not use it. Check out lru-cache if you want a good and tested way to coalesce async requests by a key value, which is much more comprehensive and powerful.",
			"dependencies": {
				"once": "^1.3.0",
				"wrappy": "1"
			}
		},
		"node_modules/inherits": {
			"version": "2.0.4",
			"resolved": "https://registry.npmjs.org/inherits/-/inherits-2.0.4.tgz",
			"integrity": "sha512-k/vGaX4/Yla3WzyMCvTQOXYeIHvqOKtnqBduzTHpzpQZzAskKMhZ2K+EnBiSM9zGSoIFeMpXKxa4dYeZIQqewQ=="
		},
		"node_modules/ini": {
			"version": "1.3.5",
			"resolved": "https://registry.npmjs.org/ini/-/ini-1.3.5.tgz",
			"integrity": "sha512-RZY5huIKCMRWDUqZlEi72f/lmXKMvuszcMBduliQ3nnWbx9X/ZBQO7DijMEYS9EhHBb2qacRUMtC7svLwe0lcw==",
			"deprecated": "Please update to ini >=1.3.6 to avoid a prototype pollution issue",
			"engines": {
				"node": "*"
			}
		},
		"node_modules/inquirer": {
			"version": "6.5.2",
			"resolved": "https://registry.npmjs.org/inquirer/-/inquirer-6.5.2.tgz",
			"integrity": "sha512-cntlB5ghuB0iuO65Ovoi8ogLHiWGs/5yNrtUcKjFhSSiVeAIVpD7koaSU9RM8mpXw5YDi9RdYXGQMaOURB7ycQ==",
			"dev": true,
			"dependencies": {
				"ansi-escapes": "^3.2.0",
				"chalk": "^2.4.2",
				"cli-cursor": "^2.1.0",
				"cli-width": "^2.0.0",
				"external-editor": "^3.0.3",
				"figures": "^2.0.0",
				"lodash": "^4.17.12",
				"mute-stream": "0.0.7",
				"run-async": "^2.2.0",
				"rxjs": "^6.4.0",
				"string-width": "^2.1.0",
				"strip-ansi": "^5.1.0",
				"through": "^2.3.6"
			},
			"engines": {
				"node": ">=6.0.0"
			}
		},
		"node_modules/inquirer/node_modules/ansi-regex": {
			"version": "3.0.0",
			"resolved": "https://registry.npmjs.org/ansi-regex/-/ansi-regex-3.0.0.tgz",
			"integrity": "sha1-7QMXwyIGT3lGbAKWa922Bas32Zg=",
			"dev": true,
			"engines": {
				"node": ">=4"
			}
		},
		"node_modules/inquirer/node_modules/is-fullwidth-code-point": {
			"version": "2.0.0",
			"resolved": "https://registry.npmjs.org/is-fullwidth-code-point/-/is-fullwidth-code-point-2.0.0.tgz",
			"integrity": "sha1-o7MKXE8ZkYMWeqq5O+764937ZU8=",
			"dev": true,
			"engines": {
				"node": ">=4"
			}
		},
		"node_modules/inquirer/node_modules/string-width": {
			"version": "2.1.1",
			"resolved": "https://registry.npmjs.org/string-width/-/string-width-2.1.1.tgz",
			"integrity": "sha512-nOqH59deCq9SRHlxq1Aw85Jnt4w6KvLKqWVik6oA9ZklXLNIOlqg4F2yrT1MVaTjAqvVwdfeZ7w7aCvJD7ugkw==",
			"dev": true,
			"dependencies": {
				"is-fullwidth-code-point": "^2.0.0",
				"strip-ansi": "^4.0.0"
			},
			"engines": {
				"node": ">=4"
			}
		},
		"node_modules/inquirer/node_modules/string-width/node_modules/strip-ansi": {
			"version": "4.0.0",
			"resolved": "https://registry.npmjs.org/strip-ansi/-/strip-ansi-4.0.0.tgz",
			"integrity": "sha1-qEeQIusaw2iocTibY1JixQXuNo8=",
			"dev": true,
			"dependencies": {
				"ansi-regex": "^3.0.0"
			},
			"engines": {
				"node": ">=4"
			}
		},
		"node_modules/inquirer/node_modules/strip-ansi": {
			"version": "5.2.0",
			"resolved": "https://registry.npmjs.org/strip-ansi/-/strip-ansi-5.2.0.tgz",
			"integrity": "sha512-DuRs1gKbBqsMKIZlrffwlug8MHkcnpjs5VPmL1PAh+mA30U0DTotfDZ0d2UUsXpPmPmMMJ6W773MaA3J+lbiWA==",
			"dev": true,
			"dependencies": {
				"ansi-regex": "^4.1.0"
			},
			"engines": {
				"node": ">=6"
			}
		},
		"node_modules/inquirer/node_modules/strip-ansi/node_modules/ansi-regex": {
			"version": "4.1.0",
			"resolved": "https://registry.npmjs.org/ansi-regex/-/ansi-regex-4.1.0.tgz",
			"integrity": "sha512-1apePfXM1UOSqw0o9IiFAovVz9M5S1Dg+4TrDwfMewQ6p/rmMueb7tWZjQ1rx4Loy1ArBggoqGpfqqdI4rondg==",
			"dev": true,
			"engines": {
				"node": ">=6"
			}
		},
		"node_modules/invert-kv": {
			"version": "1.0.0",
			"resolved": "https://registry.npmjs.org/invert-kv/-/invert-kv-1.0.0.tgz",
			"integrity": "sha1-EEqOSqym09jNFXqO+L+rLXo//bY=",
			"engines": {
				"node": ">=0.10.0"
			}
		},
		"node_modules/ipaddr.js": {
			"version": "1.9.0",
			"resolved": "https://registry.npmjs.org/ipaddr.js/-/ipaddr.js-1.9.0.tgz",
			"integrity": "sha512-M4Sjn6N/+O6/IXSJseKqHoFc+5FdGJ22sXqnjTpdZweHK64MzEPAyQZyEU3R/KRv2GLoa7nNtg/C2Ev6m7z+eA==",
			"engines": {
				"node": ">= 0.10"
			}
		},
		"node_modules/is-buffer": {
			"version": "1.1.6",
			"resolved": "https://registry.npmjs.org/is-buffer/-/is-buffer-1.1.6.tgz",
			"integrity": "sha512-NcdALwpXkTm5Zvvbk7owOUSvVvBKDgKP5/ewfXEznmQFfs4ZRmanOeKBTjRVjka3QFoN6XJ+9F3USqfHqTaU5w=="
		},
		"node_modules/is-expression": {
			"version": "3.0.0",
			"resolved": "https://registry.npmjs.org/is-expression/-/is-expression-3.0.0.tgz",
			"integrity": "sha1-Oayqa+f9HzRx3ELHQW5hwkMXrJ8=",
			"dependencies": {
				"acorn": "~4.0.2",
				"object-assign": "^4.0.1"
			}
		},
		"node_modules/is-expression/node_modules/acorn": {
			"version": "4.0.13",
			"resolved": "https://registry.npmjs.org/acorn/-/acorn-4.0.13.tgz",
			"integrity": "sha1-EFSVrlNh1pe9GVyCUZLhrX8lN4c=",
			"bin": {
				"acorn": "bin/acorn"
			},
			"engines": {
				"node": ">=0.4.0"
			}
		},
		"node_modules/is-fullwidth-code-point": {
			"version": "1.0.0",
			"resolved": "https://registry.npmjs.org/is-fullwidth-code-point/-/is-fullwidth-code-point-1.0.0.tgz",
			"integrity": "sha1-754xOG8DGn8NZDr4L95QxFfvAMs=",
			"dependencies": {
				"number-is-nan": "^1.0.0"
			},
			"engines": {
				"node": ">=0.10.0"
			}
		},
		"node_modules/is-promise": {
			"version": "2.1.0",
			"resolved": "https://registry.npmjs.org/is-promise/-/is-promise-2.1.0.tgz",
			"integrity": "sha1-eaKp7OfwlugPNtKy87wWwf9L8/o="
		},
		"node_modules/is-regex": {
			"version": "1.0.4",
			"resolved": "https://registry.npmjs.org/is-regex/-/is-regex-1.0.4.tgz",
			"integrity": "sha1-VRdIm1RwkbCTDglWVM7SXul+lJE=",
			"dependencies": {
				"has": "^1.0.1"
			},
			"engines": {
				"node": ">= 0.4"
			}
		},
		"node_modules/is-typedarray": {
			"version": "1.0.0",
			"resolved": "https://registry.npmjs.org/is-typedarray/-/is-typedarray-1.0.0.tgz",
			"integrity": "sha1-5HnICFjfDBsR3dppQPlgEfzaSpo="
		},
		"node_modules/isarray": {
			"version": "1.0.0",
			"resolved": "https://registry.npmjs.org/isarray/-/isarray-1.0.0.tgz",
			"integrity": "sha1-u5NdSFgsuhaMBoNJV6VKPgcSTxE="
		},
		"node_modules/isexe": {
			"version": "2.0.0",
			"resolved": "https://registry.npmjs.org/isexe/-/isexe-2.0.0.tgz",
			"integrity": "sha1-6PvzdNxVb/iUehDcsFctYz8s+hA=",
			"dev": true
		},
		"node_modules/isstream": {
			"version": "0.1.2",
			"resolved": "https://registry.npmjs.org/isstream/-/isstream-0.1.2.tgz",
			"integrity": "sha1-R+Y/evVa+m+S4VAOaQ64uFKcCZo="
		},
		"node_modules/js-sha3": {
			"version": "0.7.0",
			"resolved": "https://registry.npmjs.org/js-sha3/-/js-sha3-0.7.0.tgz",
			"integrity": "sha512-Wpks3yBDm0UcL5qlVhwW9Jr9n9i4FfeWBFOOXP5puDS/SiudJGhw7DPyBqn3487qD4F0lsC0q3zxink37f7zeA=="
		},
		"node_modules/js-stringify": {
			"version": "1.0.2",
			"resolved": "https://registry.npmjs.org/js-stringify/-/js-stringify-1.0.2.tgz",
			"integrity": "sha1-Fzb939lyTyijaCrcYjCufk6Weds="
		},
		"node_modules/js-tokens": {
			"version": "4.0.0",
			"resolved": "https://registry.npmjs.org/js-tokens/-/js-tokens-4.0.0.tgz",
			"integrity": "sha512-RdJUflcE3cUzKiMqQgsCu06FPu9UdIJO0beYbPhHN4k6apgJtifcoCtT9bcxOpYBtpD2kCM6Sbzg4CausW/PKQ==",
			"dev": true
		},
		"node_modules/js-yaml": {
			"version": "3.13.1",
			"resolved": "https://registry.npmjs.org/js-yaml/-/js-yaml-3.13.1.tgz",
			"integrity": "sha512-YfbcO7jXDdyj0DGxYVSlSeQNHbD7XPWvrVWeVUujrQEoZzWJIRrCPoyk6kL6IAjAG2IolMK4T0hNUe0HOUs5Jw==",
			"dependencies": {
				"argparse": "^1.0.7",
				"esprima": "^4.0.0"
			},
			"bin": {
				"js-yaml": "bin/js-yaml.js"
			}
		},
		"node_modules/jsbn": {
			"version": "0.1.1",
			"resolved": "https://registry.npmjs.org/jsbn/-/jsbn-0.1.1.tgz",
			"integrity": "sha1-peZUwuWi3rXyAdls77yoDA7y9RM="
		},
		"node_modules/json-schema": {
			"version": "0.2.3",
			"resolved": "https://registry.npmjs.org/json-schema/-/json-schema-0.2.3.tgz",
			"integrity": "sha1-tIDIkuWaLwWVTOcnvT8qTogvnhM="
		},
		"node_modules/json-schema-traverse": {
			"version": "0.4.1",
			"resolved": "https://registry.npmjs.org/json-schema-traverse/-/json-schema-traverse-0.4.1.tgz",
			"integrity": "sha512-xbbCH5dCYU5T8LcEhhuh7HJ88HXuW3qsI3Y0zOZFKfZEHcpWiHU/Jxzk629Brsab/mMiHQti9wMP+845RPe3Vg=="
		},
		"node_modules/json-stable-stringify-without-jsonify": {
			"version": "1.0.1",
			"resolved": "https://registry.npmjs.org/json-stable-stringify-without-jsonify/-/json-stable-stringify-without-jsonify-1.0.1.tgz",
			"integrity": "sha1-nbe1lJatPzz+8wp1FC0tkwrXJlE=",
			"dev": true
		},
		"node_modules/json-stringify-safe": {
			"version": "5.0.1",
			"resolved": "https://registry.npmjs.org/json-stringify-safe/-/json-stringify-safe-5.0.1.tgz",
			"integrity": "sha1-Epai1Y/UXxmg9s4B1lcB4sc1tus="
		},
		"node_modules/jsonfile": {
			"version": "4.0.0",
			"resolved": "https://registry.npmjs.org/jsonfile/-/jsonfile-4.0.0.tgz",
			"integrity": "sha1-h3Gq4HmbZAdrdmQPygWPnBDjPss=",
			"optionalDependencies": {
				"graceful-fs": "^4.1.6"
			}
		},
		"node_modules/jsprim": {
			"version": "1.4.1",
			"resolved": "https://registry.npmjs.org/jsprim/-/jsprim-1.4.1.tgz",
			"integrity": "sha1-MT5mvB5cwG5Di8G3SZwuXFastqI=",
			"engines": [
				"node >=0.6.0"
			],
			"dependencies": {
				"assert-plus": "1.0.0",
				"extsprintf": "1.3.0",
				"json-schema": "0.2.3",
				"verror": "1.10.0"
			}
		},
		"node_modules/jsrsasign": {
			"version": "7.2.2",
			"resolved": "https://registry.npmjs.org/jsrsasign/-/jsrsasign-7.2.2.tgz",
			"integrity": "sha1-rlIwy1V0RRu5eanMaXQoxg9ZjSA="
		},
		"node_modules/jssha": {
			"version": "2.3.1",
			"resolved": "https://registry.npmjs.org/jssha/-/jssha-2.3.1.tgz",
			"integrity": "sha1-FHshJTaQNcpLL30hDcU58Amz3po=",
			"deprecated": "jsSHA versions < 3.0.0 will no longer receive feature updates",
			"engines": {
				"node": "*"
			}
		},
		"node_modules/jstransformer": {
			"version": "1.0.0",
			"resolved": "https://registry.npmjs.org/jstransformer/-/jstransformer-1.0.0.tgz",
			"integrity": "sha1-7Yvwkh4vPx7U1cGkT2hwntJHIsM=",
			"dependencies": {
				"is-promise": "^2.0.0",
				"promise": "^7.0.1"
			}
		},
		"node_modules/kind-of": {
			"version": "3.2.2",
			"resolved": "https://registry.npmjs.org/kind-of/-/kind-of-3.2.2.tgz",
			"integrity": "sha1-MeohpzS6ubuw8yRm2JOupR5KPGQ=",
			"dependencies": {
				"is-buffer": "^1.1.5"
			},
			"engines": {
				"node": ">=0.10.0"
			}
		},
		"node_modules/klaw": {
			"version": "2.1.1",
			"resolved": "https://registry.npmjs.org/klaw/-/klaw-2.1.1.tgz",
			"integrity": "sha1-QrdolHARacyRD9DRnOZ3tfs3ivE=",
			"dependencies": {
				"graceful-fs": "^4.1.9"
			}
		},
		"node_modules/lazy-cache": {
			"version": "1.0.4",
			"resolved": "https://registry.npmjs.org/lazy-cache/-/lazy-cache-1.0.4.tgz",
			"integrity": "sha1-odePw6UEdMuAhF07O24dpJpEbo4=",
			"engines": {
				"node": ">=0.10.0"
			}
		},
		"node_modules/lcid": {
			"version": "1.0.0",
			"resolved": "https://registry.npmjs.org/lcid/-/lcid-1.0.0.tgz",
			"integrity": "sha1-MIrMr6C8SDo4Z7S28rlQYlHRuDU=",
			"dependencies": {
				"invert-kv": "^1.0.0"
			},
			"engines": {
				"node": ">=0.10.0"
			}
		},
		"node_modules/levn": {
			"version": "0.3.0",
			"resolved": "https://registry.npmjs.org/levn/-/levn-0.3.0.tgz",
			"integrity": "sha1-OwmSTt+fCDwEkP3UwLxEIeBHZO4=",
			"dev": true,
			"dependencies": {
				"prelude-ls": "~1.1.2",
				"type-check": "~0.3.2"
			},
			"engines": {
				"node": ">= 0.8.0"
			}
		},
		"node_modules/lodash": {
			"version": "4.17.15",
			"resolved": "https://registry.npmjs.org/lodash/-/lodash-4.17.15.tgz",
			"integrity": "sha512-8xOcRHvCjnocdS5cpwXQXVzmmh5e5+saE2QGoeQmbKmRS6J3VQppPOIt0MnmE+4xlZoumy0GPG0D0MVIQbNA1A=="
		},
		"node_modules/lodash.camelcase": {
			"version": "4.3.0",
			"resolved": "https://registry.npmjs.org/lodash.camelcase/-/lodash.camelcase-4.3.0.tgz",
			"integrity": "sha1-soqmKIorn8ZRA1x3EfZathkDMaY="
		},
		"node_modules/lodash.clone": {
			"version": "4.5.0",
			"resolved": "https://registry.npmjs.org/lodash.clone/-/lodash.clone-4.5.0.tgz",
			"integrity": "sha1-GVhwRQ9aExkkeN9Lw9I9LeoZB7Y=",
			"deprecated": "This package is deprecated. Use structuredClone instead."
		},
		"node_modules/lodash.isempty": {
			"version": "4.4.0",
			"resolved": "https://registry.npmjs.org/lodash.isempty/-/lodash.isempty-4.4.0.tgz",
			"integrity": "sha1-b4bL7di+TsmHvpqvM8loTbGzHn4="
		},
		"node_modules/long": {
			"version": "4.0.0",
			"resolved": "https://registry.npmjs.org/long/-/long-4.0.0.tgz",
			"integrity": "sha512-XsP+KhQif4bjX1kbuSiySJFNAehNxgLb6hPRGJ9QsUr8ajHkuXGdrHmFUTUUXhDwVX2R5bY4JNZEwbUiMhV+MA=="
		},
		"node_modules/longest": {
			"version": "1.0.1",
			"resolved": "https://registry.npmjs.org/longest/-/longest-1.0.1.tgz",
			"integrity": "sha1-MKCy2jj3N3DoKUoNIuZiXtd9AJc=",
			"engines": {
				"node": ">=0.10.0"
			}
		},
		"node_modules/media-typer": {
			"version": "0.3.0",
			"resolved": "https://registry.npmjs.org/media-typer/-/media-typer-0.3.0.tgz",
			"integrity": "sha1-hxDXrwqmJvj/+hzgAWhUUmMlV0g=",
			"engines": {
				"node": ">= 0.6"
			}
		},
		"node_modules/merge-descriptors": {
			"version": "1.0.1",
			"resolved": "https://registry.npmjs.org/merge-descriptors/-/merge-descriptors-1.0.1.tgz",
			"integrity": "sha1-sAqqVW3YtEVoFQ7J0blT8/kMu2E="
		},
		"node_modules/methods": {
			"version": "1.1.2",
			"resolved": "https://registry.npmjs.org/methods/-/methods-1.1.2.tgz",
			"integrity": "sha1-VSmk1nZUE07cxSZmVoNbD4Ua/O4=",
			"engines": {
				"node": ">= 0.6"
			}
		},
		"node_modules/mime": {
			"version": "1.6.0",
			"resolved": "https://registry.npmjs.org/mime/-/mime-1.6.0.tgz",
			"integrity": "sha512-x0Vn8spI+wuJ1O6S7gnbaQg8Pxh4NNHb7KSINmEWKiPE4RKOplvijn+NkmYmmRgP68mc70j2EbeTFRsrswaQeg==",
			"bin": {
				"mime": "cli.js"
			},
			"engines": {
				"node": ">=4"
			}
		},
		"node_modules/mime-db": {
			"version": "1.40.0",
			"resolved": "https://registry.npmjs.org/mime-db/-/mime-db-1.40.0.tgz",
			"integrity": "sha512-jYdeOMPy9vnxEqFRRo6ZvTZ8d9oPb+k18PKoYNYUe2stVEBPPwsln/qWzdbmaIvnhZ9v2P+CuecK+fpUfsV2mA==",
			"engines": {
				"node": ">= 0.6"
			}
		},
		"node_modules/mime-types": {
			"version": "2.1.24",
			"resolved": "https://registry.npmjs.org/mime-types/-/mime-types-2.1.24.tgz",
			"integrity": "sha512-WaFHS3MCl5fapm3oLxU4eYDw77IQM2ACcxQ9RIxfaC3ooc6PFuBMGZZsYpvoXS5D5QTWPieo1jjLdAm3TBP3cQ==",
			"dependencies": {
				"mime-db": "1.40.0"
			},
			"engines": {
				"node": ">= 0.6"
			}
		},
		"node_modules/mimic-fn": {
			"version": "1.2.0",
			"resolved": "https://registry.npmjs.org/mimic-fn/-/mimic-fn-1.2.0.tgz",
			"integrity": "sha512-jf84uxzwiuiIVKiOLpfYk7N46TSy8ubTonmneY9vrpHNAnp0QBt2BxWV9dO3/j+BoVAb+a5G6YDPW3M5HOdMWQ==",
			"dev": true,
			"engines": {
				"node": ">=4"
			}
		},
		"node_modules/minimalistic-assert": {
			"version": "1.0.1",
			"resolved": "https://registry.npmjs.org/minimalistic-assert/-/minimalistic-assert-1.0.1.tgz",
			"integrity": "sha512-UtJcAD4yEaGtjPezWuO9wC4nwUnVH/8/Im3yEHQP4b67cXlD/Qr9hdITCU1xDbSEXg2XKNaP8jsReV7vQd00/A=="
		},
		"node_modules/minimalistic-crypto-utils": {
			"version": "1.0.1",
			"resolved": "https://registry.npmjs.org/minimalistic-crypto-utils/-/minimalistic-crypto-utils-1.0.1.tgz",
			"integrity": "sha1-9sAMHAsIIkblxNmd+4x8CDsrWCo="
		},
		"node_modules/minimatch": {
			"version": "3.0.4",
			"resolved": "https://registry.npmjs.org/minimatch/-/minimatch-3.0.4.tgz",
			"integrity": "sha512-yJHVQEhyqPLUTgt9B83PXu6W3rx4MvvHvSUvToogpwoGDOUQ+yDrR0HRot+yOCdCO7u4hX3pWft6kWBBcqh0UA==",
			"dependencies": {
				"brace-expansion": "^1.1.7"
			},
			"engines": {
				"node": "*"
			}
		},
		"node_modules/minimist": {
			"version": "0.0.8",
			"resolved": "https://registry.npmjs.org/minimist/-/minimist-0.0.8.tgz",
			"integrity": "sha1-hX/Kv8M5fSYluCKCYuhqp6ARsF0=",
			"dev": true
		},
		"node_modules/mkdirp": {
			"version": "0.5.1",
			"resolved": "https://registry.npmjs.org/mkdirp/-/mkdirp-0.5.1.tgz",
			"integrity": "sha1-MAV0OOrGz3+MR2fzhkjWaX11yQM=",
			"deprecated": "Legacy versions of mkdirp are no longer supported. Please update to mkdirp 1.x. (Note that the API surface has changed to use Promises in 1.x.)",
			"dev": true,
			"dependencies": {
				"minimist": "0.0.8"
			},
			"bin": {
				"mkdirp": "bin/cmd.js"
			}
		},
		"node_modules/ms": {
			"version": "2.1.2",
			"resolved": "https://registry.npmjs.org/ms/-/ms-2.1.2.tgz",
			"integrity": "sha512-sGkPx+VjMtmA6MX27oA4FBFELFCZZ4S4XqeGOXCv68tT+jb3vk/RyaKWP0PTKyWtmLSM0b+adUTEvbs1PEaH2w=="
		},
		"node_modules/mute-stream": {
			"version": "0.0.7",
			"resolved": "https://registry.npmjs.org/mute-stream/-/mute-stream-0.0.7.tgz",
			"integrity": "sha1-MHXOk7whuPq0PhvE2n6BFe0ee6s=",
			"dev": true
		},
		"node_modules/nan": {
			"version": "2.14.0",
			"resolved": "https://registry.npmjs.org/nan/-/nan-2.14.0.tgz",
			"integrity": "sha512-INOFj37C7k3AfaNTtX8RhsTw7qRy7eLET14cROi9+5HAVbbHuIWUHEauBv5qT4Av2tWasiTY1Jw6puUNqRJXQg=="
		},
		"node_modules/nano": {
			"version": "6.4.4",
			"resolved": "https://registry.npmjs.org/nano/-/nano-6.4.4.tgz",
			"integrity": "sha512-7sldMrZI1ZH8QE29PnzohxLfR67WNVzMKLa7EMl3x9Hr+0G+YpOUCq50qZ9G66APrjcb0Of2BTOZLNBCutZGag==",
			"dependencies": {
				"cloudant-follow": "~0.17.0",
				"debug": "^2.2.0",
				"errs": "^0.3.2",
				"lodash.isempty": "^4.4.0",
				"request": "^2.85.0"
			},
			"engines": {
				"node": ">=6"
			}
		},
		"node_modules/natural-compare": {
			"version": "1.4.0",
			"resolved": "https://registry.npmjs.org/natural-compare/-/natural-compare-1.4.0.tgz",
			"integrity": "sha1-Sr6/7tdUHywnrPspvbvRXI1bpPc=",
			"dev": true
		},
		"node_modules/nconf": {
			"version": "0.10.0",
			"resolved": "https://registry.npmjs.org/nconf/-/nconf-0.10.0.tgz",
			"integrity": "sha512-fKiXMQrpP7CYWJQzKkPPx9hPgmq+YLDyxcG9N8RpiE9FoCkCbzD0NyW0YhE3xn3Aupe7nnDeIx4PFzYehpHT9Q==",
			"dependencies": {
				"async": "^1.4.0",
				"ini": "^1.3.0",
				"secure-keys": "^1.0.0",
				"yargs": "^3.19.0"
			},
			"engines": {
				"node": ">= 0.4.0"
			}
		},
		"node_modules/negotiator": {
			"version": "0.6.2",
			"resolved": "https://registry.npmjs.org/negotiator/-/negotiator-0.6.2.tgz",
			"integrity": "sha512-hZXc7K2e+PgeI1eDBe/10Ard4ekbfrrqG8Ep+8Jmf4JID2bNg7NvCPOZN+kfF574pFQI7mum2AUqDidoKqcTOw==",
			"engines": {
				"node": ">= 0.6"
			}
		},
		"node_modules/nice-try": {
			"version": "1.0.5",
			"resolved": "https://registry.npmjs.org/nice-try/-/nice-try-1.0.5.tgz",
			"integrity": "sha512-1nh45deeb5olNY7eX82BkPO7SSxR5SSYJiPTrTdFUVYwAl8CKMA5N9PjTYkHiRjisVcxcQ1HXdLhx2qxxJzLNQ==",
			"dev": true
		},
		"node_modules/number-is-nan": {
			"version": "1.0.1",
			"resolved": "https://registry.npmjs.org/number-is-nan/-/number-is-nan-1.0.1.tgz",
			"integrity": "sha1-CXtgK1NCKlIsGvuHkDGDNpQaAR0=",
			"engines": {
				"node": ">=0.10.0"
			}
		},
		"node_modules/oauth-sign": {
			"version": "0.9.0",
			"resolved": "https://registry.npmjs.org/oauth-sign/-/oauth-sign-0.9.0.tgz",
			"integrity": "sha512-fexhUFFPTGV8ybAtSIGbV6gOkSv8UtRbDBnAyLQw4QPKkgNlsH2ByPGtMUqdWkos6YCRmAqViwgZrJc/mRDzZQ==",
			"engines": {
				"node": "*"
			}
		},
		"node_modules/object-assign": {
			"version": "4.1.1",
			"resolved": "https://registry.npmjs.org/object-assign/-/object-assign-4.1.1.tgz",
			"integrity": "sha1-IQmtx5ZYh8/AXLvUQsrIv7s2CGM=",
			"engines": {
				"node": ">=0.10.0"
			}
		},
		"node_modules/on-finished": {
			"version": "2.3.0",
			"resolved": "https://registry.npmjs.org/on-finished/-/on-finished-2.3.0.tgz",
			"integrity": "sha1-IPEzZIGwg811M3mSoWlxqi2QaUc=",
			"dependencies": {
				"ee-first": "1.1.1"
			},
			"engines": {
				"node": ">= 0.8"
			}
		},
		"node_modules/once": {
			"version": "1.4.0",
			"resolved": "https://registry.npmjs.org/once/-/once-1.4.0.tgz",
			"integrity": "sha1-WDsap3WWHUsROsF9nFC6753Xa9E=",
			"dependencies": {
				"wrappy": "1"
			}
		},
		"node_modules/onetime": {
			"version": "2.0.1",
			"resolved": "https://registry.npmjs.org/onetime/-/onetime-2.0.1.tgz",
			"integrity": "sha1-BnQoIw/WdEOyeUsiu6UotoZ5YtQ=",
			"dev": true,
			"dependencies": {
				"mimic-fn": "^1.0.0"
			},
			"engines": {
				"node": ">=4"
			}
		},
		"node_modules/optionator": {
			"version": "0.8.2",
			"resolved": "https://registry.npmjs.org/optionator/-/optionator-0.8.2.tgz",
			"integrity": "sha1-NkxeQJ0/TWMB1sC0wFu6UBgK62Q=",
			"dev": true,
			"dependencies": {
				"deep-is": "~0.1.3",
				"fast-levenshtein": "~2.0.4",
				"levn": "~0.3.0",
				"prelude-ls": "~1.1.2",
				"type-check": "~0.3.2",
				"wordwrap": "~1.0.0"
			},
			"engines": {
				"node": ">= 0.8.0"
			}
		},
		"node_modules/optjs": {
			"version": "3.2.2",
			"resolved": "https://registry.npmjs.org/optjs/-/optjs-3.2.2.tgz",
			"integrity": "sha1-aabOicRCpEQDFBrS+bNwvVu29O4="
		},
		"node_modules/os-locale": {
			"version": "1.4.0",
			"resolved": "https://registry.npmjs.org/os-locale/-/os-locale-1.4.0.tgz",
			"integrity": "sha1-IPnxeuKe00XoveWDsT0gCYA8FNk=",
			"dependencies": {
				"lcid": "^1.0.0"
			},
			"engines": {
				"node": ">=0.10.0"
			}
		},
		"node_modules/os-tmpdir": {
			"version": "1.0.2",
			"resolved": "https://registry.npmjs.org/os-tmpdir/-/os-tmpdir-1.0.2.tgz",
			"integrity": "sha1-u+Z0BseaqFxc/sdm/lc0VV36EnQ=",
			"dev": true,
			"engines": {
				"node": ">=0.10.0"
			}
		},
		"node_modules/parent-module": {
			"version": "1.0.1",
			"resolved": "https://registry.npmjs.org/parent-module/-/parent-module-1.0.1.tgz",
			"integrity": "sha512-GQ2EWRpQV8/o+Aw8YqtfZZPfNRWZYkbidE9k5rpl/hC3vtHHBfGm2Ifi6qWV+coDGkrUKZAxE3Lot5kcsRlh+g==",
			"dev": true,
			"dependencies": {
				"callsites": "^3.0.0"
			},
			"engines": {
				"node": ">=6"
			}
		},
		"node_modules/parseurl": {
			"version": "1.3.3",
			"resolved": "https://registry.npmjs.org/parseurl/-/parseurl-1.3.3.tgz",
			"integrity": "sha512-CiyeOxFT/JZyN5m0z9PfXw4SCBJ6Sygz1Dpl0wqjlhDEGGBP1GnsUVEL0p63hoG1fcj3fHynXi9NYO4nWOL+qQ==",
			"engines": {
				"node": ">= 0.8"
			}
		},
		"node_modules/path-is-absolute": {
			"version": "1.0.1",
			"resolved": "https://registry.npmjs.org/path-is-absolute/-/path-is-absolute-1.0.1.tgz",
			"integrity": "sha1-F0uSaHNVNP+8es5r9TpanhtcX18=",
			"engines": {
				"node": ">=0.10.0"
			}
		},
		"node_modules/path-is-inside": {
			"version": "1.0.2",
			"resolved": "https://registry.npmjs.org/path-is-inside/-/path-is-inside-1.0.2.tgz",
			"integrity": "sha1-NlQX3t5EQw0cEa9hAn+s8HS9/FM=",
			"dev": true
		},
		"node_modules/path-key": {
			"version": "2.0.1",
			"resolved": "https://registry.npmjs.org/path-key/-/path-key-2.0.1.tgz",
			"integrity": "sha1-QRyttXTFoUDTpLGRDUDYDMn0C0A=",
			"dev": true,
			"engines": {
				"node": ">=4"
			}
		},
		"node_modules/path-parse": {
			"version": "1.0.6",
			"resolved": "https://registry.npmjs.org/path-parse/-/path-parse-1.0.6.tgz",
			"integrity": "sha512-GSmOT2EbHrINBf9SR7CDELwlJ8AENk3Qn7OikK4nFYAu3Ote2+JYNVvkpAEQm3/TLNEJFD/xZJjzyxg3KBWOzw=="
		},
		"node_modules/path-to-regexp": {
			"version": "0.1.7",
			"resolved": "https://registry.npmjs.org/path-to-regexp/-/path-to-regexp-0.1.7.tgz",
			"integrity": "sha1-32BBeABfUi8V60SQ5yR6G/qmf4w="
		},
		"node_modules/performance-now": {
			"version": "2.1.0",
			"resolved": "https://registry.npmjs.org/performance-now/-/performance-now-2.1.0.tgz",
			"integrity": "sha1-Ywn04OX6kT7BxpMHrjZLSzd8nns="
		},
		"node_modules/pkcs11js": {
			"version": "1.0.19",
			"resolved": "https://registry.npmjs.org/pkcs11js/-/pkcs11js-1.0.19.tgz",
			"integrity": "sha512-BThNeWreqDXbMAZOTtG8PodY4WAS0HNHsXtsVbDBX4L4C58AvxIIXjjZrsBadXUagbjTllmZwsZHkebVUTpwcA==",
			"hasInstallScript": true,
			"dependencies": {
				"nan": "^2.14.0"
			}
		},
		"node_modules/prelude-ls": {
			"version": "1.1.2",
			"resolved": "https://registry.npmjs.org/prelude-ls/-/prelude-ls-1.1.2.tgz",
			"integrity": "sha1-IZMqVJ9eUv/ZqCf1cOBL5iqX2lQ=",
			"dev": true,
			"engines": {
				"node": ">= 0.8.0"
			}
		},
		"node_modules/process-nextick-args": {
			"version": "2.0.1",
			"resolved": "https://registry.npmjs.org/process-nextick-args/-/process-nextick-args-2.0.1.tgz",
			"integrity": "sha512-3ouUOpQhtgrbOa17J7+uxOTpITYWaGP7/AhoR3+A+/1e9skrzelGi/dXzEYyvbxubEF6Wn2ypscTKiKJFFn1ag=="
		},
		"node_modules/progress": {
			"version": "2.0.3",
			"resolved": "https://registry.npmjs.org/progress/-/progress-2.0.3.tgz",
			"integrity": "sha512-7PiHtLll5LdnKIMw100I+8xJXR5gW2QwWYkT6iJva0bXitZKa/XMrSbdmg3r2Xnaidz9Qumd0VPaMrZlF9V9sA==",
			"dev": true,
			"engines": {
				"node": ">=0.4.0"
			}
		},
		"node_modules/promise": {
			"version": "7.3.1",
			"resolved": "https://registry.npmjs.org/promise/-/promise-7.3.1.tgz",
			"integrity": "sha512-nolQXZ/4L+bP/UGlkfaIujX9BKxGwmQ9OT4mOt5yvy8iK1h3wqTEJCijzGANTCCl9nWjY41juyAn2K3Q1hLLTg==",
			"dependencies": {
				"asap": "~2.0.3"
			}
		},
		"node_modules/promise-settle": {
			"version": "0.3.0",
			"resolved": "https://registry.npmjs.org/promise-settle/-/promise-settle-0.3.0.tgz",
			"integrity": "sha1-tO/VcqHrdM95T4KM00naQKCOTpY=",
			"engines": {
				"node": ">= 0.10.0"
			}
		},
		"node_modules/protobufjs": {
			"version": "5.0.3",
			"resolved": "https://registry.npmjs.org/protobufjs/-/protobufjs-5.0.3.tgz",
			"integrity": "sha512-55Kcx1MhPZX0zTbVosMQEO5R6/rikNXd9b6RQK4KSPcrSIIwoXTtebIczUrXlwaSrbz4x8XUVThGPob1n8I4QA==",
			"dependencies": {
				"ascli": "~1",
				"bytebuffer": "~5",
				"glob": "^7.0.5",
				"yargs": "^3.10.0"
			},
			"bin": {
				"pbjs": "bin/pbjs"
			},
			"engines": {
				"node": ">=0.8"
			}
		},
		"node_modules/proxy-addr": {
			"version": "2.0.5",
			"resolved": "https://registry.npmjs.org/proxy-addr/-/proxy-addr-2.0.5.tgz",
			"integrity": "sha512-t/7RxHXPH6cJtP0pRG6smSr9QJidhB+3kXu0KgXnbGYMgzEnUxRQ4/LDdfOwZEMyIh3/xHb8PX3t+lfL9z+YVQ==",
			"dependencies": {
				"forwarded": "~0.1.2",
				"ipaddr.js": "1.9.0"
			},
			"engines": {
				"node": ">= 0.10"
			}
		},
		"node_modules/psl": {
			"version": "1.4.0",
			"resolved": "https://registry.npmjs.org/psl/-/psl-1.4.0.tgz",
			"integrity": "sha512-HZzqCGPecFLyoRj5HLfuDSKYTJkAfB5thKBIkRHtGjWwY7p1dAyveIbXIq4tO0KYfDF2tHqPUgY9SDnGm00uFw=="
		},
		"node_modules/pug": {
			"version": "2.0.4",
			"resolved": "https://registry.npmjs.org/pug/-/pug-2.0.4.tgz",
			"integrity": "sha512-XhoaDlvi6NIzL49nu094R2NA6P37ijtgMDuWE+ofekDChvfKnzFal60bhSdiy8y2PBO6fmz3oMEIcfpBVRUdvw==",
			"dependencies": {
				"pug-code-gen": "^2.0.2",
				"pug-filters": "^3.1.1",
				"pug-lexer": "^4.1.0",
				"pug-linker": "^3.0.6",
				"pug-load": "^2.0.12",
				"pug-parser": "^5.0.1",
				"pug-runtime": "^2.0.5",
				"pug-strip-comments": "^1.0.4"
			}
		},
		"node_modules/pug-attrs": {
			"version": "2.0.4",
			"resolved": "https://registry.npmjs.org/pug-attrs/-/pug-attrs-2.0.4.tgz",
			"integrity": "sha512-TaZ4Z2TWUPDJcV3wjU3RtUXMrd3kM4Wzjbe3EWnSsZPsJ3LDI0F3yCnf2/W7PPFF+edUFQ0HgDL1IoxSz5K8EQ==",
			"dependencies": {
				"constantinople": "^3.0.1",
				"js-stringify": "^1.0.1",
				"pug-runtime": "^2.0.5"
			}
		},
		"node_modules/pug-code-gen": {
			"version": "2.0.2",
			"resolved": "https://registry.npmjs.org/pug-code-gen/-/pug-code-gen-2.0.2.tgz",
			"integrity": "sha512-kROFWv/AHx/9CRgoGJeRSm+4mLWchbgpRzTEn8XCiwwOy6Vh0gAClS8Vh5TEJ9DBjaP8wCjS3J6HKsEsYdvaCw==",
			"dependencies": {
				"constantinople": "^3.1.2",
				"doctypes": "^1.1.0",
				"js-stringify": "^1.0.1",
				"pug-attrs": "^2.0.4",
				"pug-error": "^1.3.3",
				"pug-runtime": "^2.0.5",
				"void-elements": "^2.0.1",
				"with": "^5.0.0"
			}
		},
		"node_modules/pug-error": {
			"version": "1.3.3",
			"resolved": "https://registry.npmjs.org/pug-error/-/pug-error-1.3.3.tgz",
			"integrity": "sha512-qE3YhESP2mRAWMFJgKdtT5D7ckThRScXRwkfo+Erqga7dyJdY3ZquspprMCj/9sJ2ijm5hXFWQE/A3l4poMWiQ=="
		},
		"node_modules/pug-filters": {
			"version": "3.1.1",
			"resolved": "https://registry.npmjs.org/pug-filters/-/pug-filters-3.1.1.tgz",
			"integrity": "sha512-lFfjNyGEyVWC4BwX0WyvkoWLapI5xHSM3xZJFUhx4JM4XyyRdO8Aucc6pCygnqV2uSgJFaJWW3Ft1wCWSoQkQg==",
			"dependencies": {
				"clean-css": "^4.1.11",
				"constantinople": "^3.0.1",
				"jstransformer": "1.0.0",
				"pug-error": "^1.3.3",
				"pug-walk": "^1.1.8",
				"resolve": "^1.1.6",
				"uglify-js": "^2.6.1"
			}
		},
		"node_modules/pug-lexer": {
			"version": "4.1.0",
			"resolved": "https://registry.npmjs.org/pug-lexer/-/pug-lexer-4.1.0.tgz",
			"integrity": "sha512-i55yzEBtjm0mlplW4LoANq7k3S8gDdfC6+LThGEvsK4FuobcKfDAwt6V4jKPH9RtiE3a2Akfg5UpafZ1OksaPA==",
			"dependencies": {
				"character-parser": "^2.1.1",
				"is-expression": "^3.0.0",
				"pug-error": "^1.3.3"
			}
		},
		"node_modules/pug-linker": {
			"version": "3.0.6",
			"resolved": "https://registry.npmjs.org/pug-linker/-/pug-linker-3.0.6.tgz",
			"integrity": "sha512-bagfuHttfQOpANGy1Y6NJ+0mNb7dD2MswFG2ZKj22s8g0wVsojpRlqveEQHmgXXcfROB2RT6oqbPYr9EN2ZWzg==",
			"dependencies": {
				"pug-error": "^1.3.3",
				"pug-walk": "^1.1.8"
			}
		},
		"node_modules/pug-load": {
			"version": "2.0.12",
			"resolved": "https://registry.npmjs.org/pug-load/-/pug-load-2.0.12.tgz",
			"integrity": "sha512-UqpgGpyyXRYgJs/X60sE6SIf8UBsmcHYKNaOccyVLEuT6OPBIMo6xMPhoJnqtB3Q3BbO4Z3Bjz5qDsUWh4rXsg==",
			"dependencies": {
				"object-assign": "^4.1.0",
				"pug-walk": "^1.1.8"
			}
		},
		"node_modules/pug-parser": {
			"version": "5.0.1",
			"resolved": "https://registry.npmjs.org/pug-parser/-/pug-parser-5.0.1.tgz",
			"integrity": "sha512-nGHqK+w07p5/PsPIyzkTQfzlYfuqoiGjaoqHv1LjOv2ZLXmGX1O+4Vcvps+P4LhxZ3drYSljjq4b+Naid126wA==",
			"dependencies": {
				"pug-error": "^1.3.3",
				"token-stream": "0.0.1"
			}
		},
		"node_modules/pug-runtime": {
			"version": "2.0.5",
			"resolved": "https://registry.npmjs.org/pug-runtime/-/pug-runtime-2.0.5.tgz",
			"integrity": "sha512-P+rXKn9un4fQY77wtpcuFyvFaBww7/91f3jHa154qU26qFAnOe6SW1CbIDcxiG5lLK9HazYrMCCuDvNgDQNptw=="
		},
		"node_modules/pug-strip-comments": {
			"version": "1.0.4",
			"resolved": "https://registry.npmjs.org/pug-strip-comments/-/pug-strip-comments-1.0.4.tgz",
			"integrity": "sha512-i5j/9CS4yFhSxHp5iKPHwigaig/VV9g+FgReLJWWHEHbvKsbqL0oP/K5ubuLco6Wu3Kan5p7u7qk8A4oLLh6vw==",
			"dependencies": {
				"pug-error": "^1.3.3"
			}
		},
		"node_modules/pug-walk": {
			"version": "1.1.8",
			"resolved": "https://registry.npmjs.org/pug-walk/-/pug-walk-1.1.8.tgz",
			"integrity": "sha512-GMu3M5nUL3fju4/egXwZO0XLi6fW/K3T3VTgFQ14GxNi8btlxgT5qZL//JwZFm/2Fa64J/PNS8AZeys3wiMkVA=="
		},
		"node_modules/punycode": {
			"version": "1.3.2",
			"resolved": "https://registry.npmjs.org/punycode/-/punycode-1.3.2.tgz",
			"integrity": "sha1-llOgNvt8HuQjQvIyXM7v6jkmxI0="
		},
		"node_modules/qs": {
			"version": "6.5.2",
			"resolved": "https://registry.npmjs.org/qs/-/qs-6.5.2.tgz",
			"integrity": "sha512-N5ZAX4/LxJmF+7wN74pUD6qAh9/wnvdQcjq9TZjevvXzSUo7bfmw91saqMjzGS2xq91/odN2dW/WOl7qQHNDGA==",
			"engines": {
				"node": ">=0.6"
			}
		},
		"node_modules/querystring": {
			"version": "0.2.0",
			"resolved": "https://registry.npmjs.org/querystring/-/querystring-0.2.0.tgz",
			"integrity": "sha1-sgmEkgO7Jd+CDadW50cAWHhSFiA=",
			"deprecated": "The querystring API is considered Legacy. new code should use the URLSearchParams API instead.",
			"engines": {
				"node": ">=0.4.x"
			}
		},
		"node_modules/range-parser": {
			"version": "1.2.1",
			"resolved": "https://registry.npmjs.org/range-parser/-/range-parser-1.2.1.tgz",
			"integrity": "sha512-Hrgsx+orqoygnmhFbKaHE6c296J+HTAQXoxEF6gNupROmmGJRoyzfG3ccAveqCBrwr/2yxQ5BVd/GTl5agOwSg==",
			"engines": {
				"node": ">= 0.6"
			}
		},
		"node_modules/raw-body": {
			"version": "2.4.0",
			"resolved": "https://registry.npmjs.org/raw-body/-/raw-body-2.4.0.tgz",
			"integrity": "sha512-4Oz8DUIwdvoa5qMJelxipzi/iJIi40O5cGV1wNYp5hvZP8ZN0T+jiNkL0QepXs+EsQ9XJ8ipEDoiH70ySUJP3Q==",
			"dependencies": {
				"bytes": "3.1.0",
				"http-errors": "1.7.2",
				"iconv-lite": "0.4.24",
				"unpipe": "1.0.0"
			},
			"engines": {
				"node": ">= 0.8"
			}
		},
		"node_modules/readable-stream": {
			"version": "2.3.6",
			"resolved": "https://registry.npmjs.org/readable-stream/-/readable-stream-2.3.6.tgz",
			"integrity": "sha512-tQtKA9WIAhBF3+VLAseyMqZeBjW0AHJoxOtYqSUZNJxauErmLbVm2FW1y+J/YA9dUrAC39ITejlZWhVIwawkKw==",
			"dependencies": {
				"core-util-is": "~1.0.0",
				"inherits": "~2.0.3",
				"isarray": "~1.0.0",
				"process-nextick-args": "~2.0.0",
				"safe-buffer": "~5.1.1",
				"string_decoder": "~1.1.1",
				"util-deprecate": "~1.0.1"
			}
		},
		"node_modules/readable-stream/node_modules/safe-buffer": {
			"version": "5.1.2",
			"resolved": "https://registry.npmjs.org/safe-buffer/-/safe-buffer-5.1.2.tgz",
			"integrity": "sha512-Gd2UZBJDkXlY7GbJxfsE8/nvKkUEU1G38c1siN6QP6a9PT9MmHB8GnpscSmMJSoF8LOIrt8ud/wPtojys4G6+g=="
		},
		"node_modules/regenerator-runtime": {
			"version": "0.11.1",
			"resolved": "https://registry.npmjs.org/regenerator-runtime/-/regenerator-runtime-0.11.1.tgz",
			"integrity": "sha512-MguG95oij0fC3QV3URf4V2SDYGJhJnJGqvIIgdECeODCT98wSWDAJ94SSuVpYQUoTcGUIL6L4yNB7j1DFFHSBg=="
		},
		"node_modules/regexpp": {
			"version": "2.0.1",
			"resolved": "https://registry.npmjs.org/regexpp/-/regexpp-2.0.1.tgz",
			"integrity": "sha512-lv0M6+TkDVniA3aD1Eg0DVpfU/booSu7Eev3TDO/mZKHBfVjgCGTV4t4buppESEYDtkArYFOxTJWv6S5C+iaNw==",
			"dev": true,
			"engines": {
				"node": ">=6.5.0"
			}
		},
		"node_modules/repeat-string": {
			"version": "1.6.1",
			"resolved": "https://registry.npmjs.org/repeat-string/-/repeat-string-1.6.1.tgz",
			"integrity": "sha1-jcrkcOHIirwtYA//Sndihtp15jc=",
			"engines": {
				"node": ">=0.10"
			}
		},
		"node_modules/request": {
			"version": "2.88.0",
			"resolved": "https://registry.npmjs.org/request/-/request-2.88.0.tgz",
			"integrity": "sha512-NAqBSrijGLZdM0WZNsInLJpkJokL72XYjUpnB0iwsRgxh7dB6COrHnTBNwN0E+lHDAJzu7kLAkDeY08z2/A0hg==",
			"deprecated": "request has been deprecated, see https://github.com/request/request/issues/3142",
			"dependencies": {
				"aws-sign2": "~0.7.0",
				"aws4": "^1.8.0",
				"caseless": "~0.12.0",
				"combined-stream": "~1.0.6",
				"extend": "~3.0.2",
				"forever-agent": "~0.6.1",
				"form-data": "~2.3.2",
				"har-validator": "~5.1.0",
				"http-signature": "~1.2.0",
				"is-typedarray": "~1.0.0",
				"isstream": "~0.1.2",
				"json-stringify-safe": "~5.0.1",
				"mime-types": "~2.1.19",
				"oauth-sign": "~0.9.0",
				"performance-now": "^2.1.0",
				"qs": "~6.5.2",
				"safe-buffer": "^5.1.2",
				"tough-cookie": "~2.4.3",
				"tunnel-agent": "^0.6.0",
				"uuid": "^3.3.2"
			},
			"engines": {
				"node": ">= 4"
			}
		},
		"node_modules/resolve": {
			"version": "1.12.0",
			"resolved": "https://registry.npmjs.org/resolve/-/resolve-1.12.0.tgz",
			"integrity": "sha512-B/dOmuoAik5bKcD6s6nXDCjzUKnaDvdkRyAk6rsmsKLipWj4797iothd7jmmUhWTfinVMU+wc56rYKsit2Qy4w==",
			"dependencies": {
				"path-parse": "^1.0.6"
			}
		},
		"node_modules/resolve-from": {
			"version": "4.0.0",
			"resolved": "https://registry.npmjs.org/resolve-from/-/resolve-from-4.0.0.tgz",
			"integrity": "sha512-pb/MYmXstAkysRFx8piNI1tGFNQIFA3vkE3Gq4EuA1dF6gHp/+vgZqsCGJapvy8N3Q+4o7FwvquPJcnZ7RYy4g==",
			"dev": true,
			"engines": {
				"node": ">=4"
			}
		},
		"node_modules/restore-cursor": {
			"version": "2.0.0",
			"resolved": "https://registry.npmjs.org/restore-cursor/-/restore-cursor-2.0.0.tgz",
			"integrity": "sha1-n37ih/gv0ybU/RYpI9YhKe7g368=",
			"dev": true,
			"dependencies": {
				"onetime": "^2.0.0",
				"signal-exit": "^3.0.2"
			},
			"engines": {
				"node": ">=4"
			}
		},
		"node_modules/right-align": {
			"version": "0.1.3",
			"resolved": "https://registry.npmjs.org/right-align/-/right-align-0.1.3.tgz",
			"integrity": "sha1-YTObci/mo1FWiSENJOFMlhSGE+8=",
			"dependencies": {
				"align-text": "^0.1.1"
			},
			"engines": {
				"node": ">=0.10.0"
			}
		},
		"node_modules/rimraf": {
			"version": "2.7.1",
			"resolved": "https://registry.npmjs.org/rimraf/-/rimraf-2.7.1.tgz",
			"integrity": "sha512-uWjbaKIK3T1OSVptzX7Nl6PvQ3qAGtKEtVRjRuazjfL3Bx5eI409VZSqgND+4UNnmzLVdPj9FqFJNPqBZFve4w==",
			"deprecated": "Rimraf versions prior to v4 are no longer supported",
			"dependencies": {
				"glob": "^7.1.3"
			},
			"bin": {
				"rimraf": "bin.js"
			}
		},
		"node_modules/run-async": {
			"version": "2.3.0",
			"resolved": "https://registry.npmjs.org/run-async/-/run-async-2.3.0.tgz",
			"integrity": "sha1-A3GrSuC91yDUFm19/aZP96RFpsA=",
			"dev": true,
			"dependencies": {
				"is-promise": "^2.1.0"
			},
			"engines": {
				"node": ">=0.12.0"
			}
		},
		"node_modules/rxjs": {
			"version": "6.5.3",
			"resolved": "https://registry.npmjs.org/rxjs/-/rxjs-6.5.3.tgz",
			"integrity": "sha512-wuYsAYYFdWTAnAaPoKGNhfpWwKZbJW+HgAJ+mImp+Epl7BG8oNWBCTyRM8gba9k4lk8BgWdoYm21Mo/RYhhbgA==",
			"dev": true,
			"dependencies": {
				"tslib": "^1.9.0"
			},
			"engines": {
				"npm": ">=2.0.0"
			}
		},
		"node_modules/safe-buffer": {
			"version": "5.2.0",
			"resolved": "https://registry.npmjs.org/safe-buffer/-/safe-buffer-5.2.0.tgz",
			"integrity": "sha512-fZEwUGbVl7kouZs1jCdMLdt95hdIv0ZeHg6L7qPeciMZhZ+/gdesW4wgTARkrFWEpspjEATAzUGPG8N2jJiwbg=="
		},
		"node_modules/safer-buffer": {
			"version": "2.1.2",
			"resolved": "https://registry.npmjs.org/safer-buffer/-/safer-buffer-2.1.2.tgz",
			"integrity": "sha512-YZo3K82SD7Riyi0E1EQPojLz7kpepnSQI9IyPbHHg1XXXevb5dJI7tpyN2ADxGcQbHG7vcyRHk0cbwqcQriUtg=="
		},
		"node_modules/secure-keys": {
			"version": "1.0.0",
			"resolved": "https://registry.npmjs.org/secure-keys/-/secure-keys-1.0.0.tgz",
			"integrity": "sha1-8MgtmKOxOah3aogIBQuCRDEIf8o="
		},
		"node_modules/semver": {
			"version": "5.7.1",
			"resolved": "https://registry.npmjs.org/semver/-/semver-5.7.1.tgz",
			"integrity": "sha512-sauaDf/PZdVgrLTNYHRtpXa1iRiKcaebiKQ1BJdpQlWH2lCvexQdX55snPFyK7QzpudqbCI0qXFfOasHdyNDGQ==",
			"dev": true,
			"bin": {
				"semver": "bin/semver"
			}
		},
		"node_modules/send": {
			"version": "0.17.1",
			"resolved": "https://registry.npmjs.org/send/-/send-0.17.1.tgz",
			"integrity": "sha512-BsVKsiGcQMFwT8UxypobUKyv7irCNRHk1T0G680vk88yf6LBByGcZJOTJCrTP2xVN6yI+XjPJcNuE3V4fT9sAg==",
			"dependencies": {
				"debug": "2.6.9",
				"depd": "~1.1.2",
				"destroy": "~1.0.4",
				"encodeurl": "~1.0.2",
				"escape-html": "~1.0.3",
				"etag": "~1.8.1",
				"fresh": "0.5.2",
				"http-errors": "~1.7.2",
				"mime": "1.6.0",
				"ms": "2.1.1",
				"on-finished": "~2.3.0",
				"range-parser": "~1.2.1",
				"statuses": "~1.5.0"
			},
			"engines": {
				"node": ">= 0.8.0"
			}
		},
		"node_modules/send/node_modules/ms": {
			"version": "2.1.1",
			"resolved": "https://registry.npmjs.org/ms/-/ms-2.1.1.tgz",
			"integrity": "sha512-tgp+dl5cGk28utYktBsrFqA7HKgrhgPsg6Z/EfhWI4gl1Hwq8B/GmY/0oXZ6nF8hDVesS/FpnYaD/kOWhYQvyg=="
		},
		"node_modules/serve-static": {
			"version": "1.14.1",
			"resolved": "https://registry.npmjs.org/serve-static/-/serve-static-1.14.1.tgz",
			"integrity": "sha512-JMrvUwE54emCYWlTI+hGrGv5I8dEwmco/00EvkzIIsR7MqrHonbD9pO2MOfFnpFntl7ecpZs+3mW+XbQZu9QCg==",
			"dependencies": {
				"encodeurl": "~1.0.2",
				"escape-html": "~1.0.3",
				"parseurl": "~1.3.3",
				"send": "0.17.1"
			},
			"engines": {
				"node": ">= 0.8.0"
			}
		},
		"node_modules/setprototypeof": {
			"version": "1.1.1",
			"resolved": "https://registry.npmjs.org/setprototypeof/-/setprototypeof-1.1.1.tgz",
			"integrity": "sha512-JvdAWfbXeIGaZ9cILp38HntZSFSo3mWg6xGcJJsd+d4aRMOqauag1C63dJfDw7OaMYwEbHMOxEZ1lqVRYP2OAw=="
		},
		"node_modules/shebang-command": {
			"version": "1.2.0",
			"resolved": "https://registry.npmjs.org/shebang-command/-/shebang-command-1.2.0.tgz",
			"integrity": "sha1-RKrGW2lbAzmJaMOfNj/uXer98eo=",
			"dev": true,
			"dependencies": {
				"shebang-regex": "^1.0.0"
			},
			"engines": {
				"node": ">=0.10.0"
			}
		},
		"node_modules/shebang-regex": {
			"version": "1.0.0",
			"resolved": "https://registry.npmjs.org/shebang-regex/-/shebang-regex-1.0.0.tgz",
			"integrity": "sha1-2kL0l0DAtC2yypcoVxyxkMmO/qM=",
			"dev": true,
			"engines": {
				"node": ">=0.10.0"
			}
		},
		"node_modules/signal-exit": {
			"version": "3.0.2",
			"resolved": "https://registry.npmjs.org/signal-exit/-/signal-exit-3.0.2.tgz",
			"integrity": "sha1-tf3AjxKH6hF4Yo5BXiUTK3NkbG0=",
			"dev": true
		},
		"node_modules/sjcl": {
			"version": "1.0.7",
			"resolved": "https://registry.npmjs.org/sjcl/-/sjcl-1.0.7.tgz",
			"integrity": "sha1-MrNlpQ3Ju6JriLo8nfjqNCF9n0U=",
			"engines": {
				"node": "*"
			}
		},
		"node_modules/slice-ansi": {
			"version": "2.1.0",
			"resolved": "https://registry.npmjs.org/slice-ansi/-/slice-ansi-2.1.0.tgz",
			"integrity": "sha512-Qu+VC3EwYLldKa1fCxuuvULvSJOKEgk9pi8dZeCVK7TqBfUNTH4sFkk4joj8afVSfAYgJoSOetjx9QWOJ5mYoQ==",
			"dev": true,
			"dependencies": {
				"ansi-styles": "^3.2.0",
				"astral-regex": "^1.0.0",
				"is-fullwidth-code-point": "^2.0.0"
			},
			"engines": {
				"node": ">=6"
			}
		},
		"node_modules/slice-ansi/node_modules/is-fullwidth-code-point": {
			"version": "2.0.0",
			"resolved": "https://registry.npmjs.org/is-fullwidth-code-point/-/is-fullwidth-code-point-2.0.0.tgz",
			"integrity": "sha1-o7MKXE8ZkYMWeqq5O+764937ZU8=",
			"dev": true,
			"engines": {
				"node": ">=4"
			}
		},
		"node_modules/source-map": {
			"version": "0.6.1",
			"resolved": "https://registry.npmjs.org/source-map/-/source-map-0.6.1.tgz",
			"integrity": "sha512-UjgapumWlbMhkBgzT7Ykc5YXUT46F0iKu8SGXq0bcwP5dz/h0Plj6enJqjz1Zbq2l5WaqYnrVbwWOWMyF3F47g==",
			"engines": {
				"node": ">=0.10.0"
			}
		},
		"node_modules/sprintf-js": {
			"version": "1.0.3",
			"resolved": "https://registry.npmjs.org/sprintf-js/-/sprintf-js-1.0.3.tgz",
			"integrity": "sha1-BOaSb2YolTVPPdAVIDYzuFcpfiw="
		},
		"node_modules/sshpk": {
			"version": "1.16.1",
			"resolved": "https://registry.npmjs.org/sshpk/-/sshpk-1.16.1.tgz",
			"integrity": "sha512-HXXqVUq7+pcKeLqqZj6mHFUMvXtOJt1uoUx09pFW6011inTMxqI8BA8PM95myrIyyKwdnzjdFjLiE6KBPVtJIg==",
			"dependencies": {
				"asn1": "~0.2.3",
				"assert-plus": "^1.0.0",
				"bcrypt-pbkdf": "^1.0.0",
				"dashdash": "^1.12.0",
				"ecc-jsbn": "~0.1.1",
				"getpass": "^0.1.1",
				"jsbn": "~0.1.0",
				"safer-buffer": "^2.0.2",
				"tweetnacl": "~0.14.0"
			},
			"bin": {
				"sshpk-conv": "bin/sshpk-conv",
				"sshpk-sign": "bin/sshpk-sign",
				"sshpk-verify": "bin/sshpk-verify"
			},
			"engines": {
				"node": ">=0.10.0"
			}
		},
		"node_modules/stack-trace": {
			"version": "0.0.10",
			"resolved": "https://registry.npmjs.org/stack-trace/-/stack-trace-0.0.10.tgz",
			"integrity": "sha1-VHxws0fo0ytOEI6hoqFZ5f3eGcA=",
			"engines": {
				"node": "*"
			}
		},
		"node_modules/statuses": {
			"version": "1.5.0",
			"resolved": "https://registry.npmjs.org/statuses/-/statuses-1.5.0.tgz",
			"integrity": "sha1-Fhx9rBd2Wf2YEfQ3cfqZOBR4Yow=",
			"engines": {
				"node": ">= 0.6"
			}
		},
		"node_modules/stream-buffers": {
			"version": "3.0.1",
			"resolved": "https://registry.npmjs.org/stream-buffers/-/stream-buffers-3.0.1.tgz",
			"integrity": "sha1-aKOMX6re3tef95mI02jj+xMl7wY=",
			"engines": {
				"node": ">= 0.10.0"
			}
		},
		"node_modules/string_decoder": {
			"version": "1.1.1",
			"resolved": "https://registry.npmjs.org/string_decoder/-/string_decoder-1.1.1.tgz",
			"integrity": "sha512-n/ShnvDi6FHbbVfviro+WojiFzv+s8MPMHBczVePfUpDJLwoLT0ht1l4YwBCbi8pJAveEEdnkHyPyTP/mzRfwg==",
			"dependencies": {
				"safe-buffer": "~5.1.0"
			}
		},
		"node_modules/string_decoder/node_modules/safe-buffer": {
			"version": "5.1.2",
			"resolved": "https://registry.npmjs.org/safe-buffer/-/safe-buffer-5.1.2.tgz",
			"integrity": "sha512-Gd2UZBJDkXlY7GbJxfsE8/nvKkUEU1G38c1siN6QP6a9PT9MmHB8GnpscSmMJSoF8LOIrt8ud/wPtojys4G6+g=="
		},
		"node_modules/string-width": {
			"version": "1.0.2",
			"resolved": "https://registry.npmjs.org/string-width/-/string-width-1.0.2.tgz",
			"integrity": "sha1-EYvfW4zcUaKn5w0hHgfisLmxB9M=",
			"dependencies": {
				"code-point-at": "^1.0.0",
				"is-fullwidth-code-point": "^1.0.0",
				"strip-ansi": "^3.0.0"
			},
			"engines": {
				"node": ">=0.10.0"
			}
		},
		"node_modules/strip-ansi": {
			"version": "3.0.1",
			"resolved": "https://registry.npmjs.org/strip-ansi/-/strip-ansi-3.0.1.tgz",
			"integrity": "sha1-ajhfuIU9lS1f8F0Oiq+UJ43GPc8=",
			"dependencies": {
				"ansi-regex": "^2.0.0"
			},
			"engines": {
				"node": ">=0.10.0"
			}
		},
		"node_modules/strip-json-comments": {
			"version": "2.0.1",
			"resolved": "https://registry.npmjs.org/strip-json-comments/-/strip-json-comments-2.0.1.tgz",
			"integrity": "sha1-PFMZQukIwml8DsNEhYwobHygpgo=",
			"dev": true,
			"engines": {
				"node": ">=0.10.0"
			}
		},
		"node_modules/supports-color": {
			"version": "5.5.0",
			"resolved": "https://registry.npmjs.org/supports-color/-/supports-color-5.5.0.tgz",
			"integrity": "sha512-QjVjwdXIt408MIiAqCX4oUKsgU2EqAGzs2Ppkm4aQYbjm+ZEWEcW4SfFNTr4uMNZma0ey4f5lgLrkB0aX0QMow==",
			"dev": true,
			"dependencies": {
				"has-flag": "^3.0.0"
			},
			"engines": {
				"node": ">=4"
			}
		},
		"node_modules/table": {
			"version": "5.4.6",
			"resolved": "https://registry.npmjs.org/table/-/table-5.4.6.tgz",
			"integrity": "sha512-wmEc8m4fjnob4gt5riFRtTu/6+4rSe12TpAELNSqHMfF3IqnA+CH37USM6/YR3qRZv7e56kAEAtd6nKZaxe0Ug==",
			"dev": true,
			"dependencies": {
				"ajv": "^6.10.2",
				"lodash": "^4.17.14",
				"slice-ansi": "^2.1.0",
				"string-width": "^3.0.0"
			},
			"engines": {
				"node": ">=6.0.0"
			}
		},
		"node_modules/table/node_modules/ansi-regex": {
			"version": "4.1.0",
			"resolved": "https://registry.npmjs.org/ansi-regex/-/ansi-regex-4.1.0.tgz",
			"integrity": "sha512-1apePfXM1UOSqw0o9IiFAovVz9M5S1Dg+4TrDwfMewQ6p/rmMueb7tWZjQ1rx4Loy1ArBggoqGpfqqdI4rondg==",
			"dev": true,
			"engines": {
				"node": ">=6"
			}
		},
		"node_modules/table/node_modules/is-fullwidth-code-point": {
			"version": "2.0.0",
			"resolved": "https://registry.npmjs.org/is-fullwidth-code-point/-/is-fullwidth-code-point-2.0.0.tgz",
			"integrity": "sha1-o7MKXE8ZkYMWeqq5O+764937ZU8=",
			"dev": true,
			"engines": {
				"node": ">=4"
			}
		},
		"node_modules/table/node_modules/string-width": {
			"version": "3.1.0",
			"resolved": "https://registry.npmjs.org/string-width/-/string-width-3.1.0.tgz",
			"integrity": "sha512-vafcv6KjVZKSgz06oM/H6GDBrAtz8vdhQakGjFIvNrHA6y3HCF1CInLy+QLq8dTJPQ1b+KDUqDFctkdRW44e1w==",
			"dev": true,
			"dependencies": {
				"emoji-regex": "^7.0.1",
				"is-fullwidth-code-point": "^2.0.0",
				"strip-ansi": "^5.1.0"
			},
			"engines": {
				"node": ">=6"
			}
		},
		"node_modules/table/node_modules/strip-ansi": {
			"version": "5.2.0",
			"resolved": "https://registry.npmjs.org/strip-ansi/-/strip-ansi-5.2.0.tgz",
			"integrity": "sha512-DuRs1gKbBqsMKIZlrffwlug8MHkcnpjs5VPmL1PAh+mA30U0DTotfDZ0d2UUsXpPmPmMMJ6W773MaA3J+lbiWA==",
			"dev": true,
			"dependencies": {
				"ansi-regex": "^4.1.0"
			},
			"engines": {
				"node": ">=6"
			}
		},
		"node_modules/tar-stream": {
			"version": "1.6.1",
			"resolved": "https://registry.npmjs.org/tar-stream/-/tar-stream-1.6.1.tgz",
			"integrity": "sha512-IFLM5wp3QrJODQFPm6/to3LJZrONdBY/otxcvDIQzu217zKye6yVR3hhi9lAjrC2Z+m/j5oDxMPb1qcd8cIvpA==",
			"dependencies": {
				"bl": "^1.0.0",
				"buffer-alloc": "^1.1.0",
				"end-of-stream": "^1.0.0",
				"fs-constants": "^1.0.0",
				"readable-stream": "^2.3.0",
				"to-buffer": "^1.1.0",
				"xtend": "^4.0.0"
			},
			"engines": {
				"node": ">= 0.8.0"
			}
		},
		"node_modules/text-table": {
			"version": "0.2.0",
			"resolved": "https://registry.npmjs.org/text-table/-/text-table-0.2.0.tgz",
			"integrity": "sha1-f17oI66AUgfACvLfSoTsP8+lcLQ=",
			"dev": true
		},
		"node_modules/through": {
			"version": "2.3.8",
			"resolved": "https://registry.npmjs.org/through/-/through-2.3.8.tgz",
			"integrity": "sha1-DdTJ/6q8NXlgsbckEV1+Doai4fU=",
			"dev": true
		},
		"node_modules/tmp": {
			"version": "0.0.33",
			"resolved": "https://registry.npmjs.org/tmp/-/tmp-0.0.33.tgz",
			"integrity": "sha512-jRCJlojKnZ3addtTOjdIqoRuPEKBvNXcGYqzO6zWZX8KfKEpnGY5jfggJQ3EjKuu8D4bJRr0y+cYJFmYbImXGw==",
			"dev": true,
			"dependencies": {
				"os-tmpdir": "~1.0.2"
			},
			"engines": {
				"node": ">=0.6.0"
			}
		},
		"node_modules/to-buffer": {
			"version": "1.1.1",
			"resolved": "https://registry.npmjs.org/to-buffer/-/to-buffer-1.1.1.tgz",
			"integrity": "sha512-lx9B5iv7msuFYE3dytT+KE5tap+rNYw+K4jVkb9R/asAb+pbBSM17jtunHplhBe6RRJdZx3Pn2Jph24O32mOVg=="
		},
		"node_modules/to-fast-properties": {
			"version": "1.0.3",
			"resolved": "https://registry.npmjs.org/to-fast-properties/-/to-fast-properties-1.0.3.tgz",
			"integrity": "sha1-uDVx+k2MJbguIxsG46MFXeTKGkc=",
			"engines": {
				"node": ">=0.10.0"
			}
		},
		"node_modules/toidentifier": {
			"version": "1.0.0",
			"resolved": "https://registry.npmjs.org/toidentifier/-/toidentifier-1.0.0.tgz",
			"integrity": "sha512-yaOH/Pk/VEhBWWTlhI+qXxDFXlejDGcQipMlyxda9nthulaxLZUNcUqFxokp0vcYnvteJln5FNQDRrxj3YcbVw==",
			"engines": {
				"node": ">=0.6"
			}
		},
		"node_modules/token-stream": {
			"version": "0.0.1",
			"resolved": "https://registry.npmjs.org/token-stream/-/token-stream-0.0.1.tgz",
			"integrity": "sha1-zu78cXp2xDFvEm0LnbqlXX598Bo="
		},
		"node_modules/tough-cookie": {
			"version": "2.4.3",
			"resolved": "https://registry.npmjs.org/tough-cookie/-/tough-cookie-2.4.3.tgz",
			"integrity": "sha512-Q5srk/4vDM54WJsJio3XNn6K2sCG+CQ8G5Wz6bZhRZoAe/+TxjWB/GlFAnYEbkYVlON9FMk/fE3h2RLpPXo4lQ==",
			"dependencies": {
				"psl": "^1.1.24",
				"punycode": "^1.4.1"
			},
			"engines": {
				"node": ">=0.8"
			}
		},
		"node_modules/tough-cookie/node_modules/punycode": {
			"version": "1.4.1",
			"resolved": "https://registry.npmjs.org/punycode/-/punycode-1.4.1.tgz",
			"integrity": "sha1-wNWmOycYgArY4esPpSachN1BhF4="
		},
		"node_modules/tslib": {
			"version": "1.10.0",
			"resolved": "https://registry.npmjs.org/tslib/-/tslib-1.10.0.tgz",
			"integrity": "sha512-qOebF53frne81cf0S9B41ByenJ3/IuH8yJKngAX35CmiZySA0khhkovshKK+jGCaMnVomla7gVlIcc3EvKPbTQ==",
			"dev": true
		},
		"node_modules/tunnel-agent": {
			"version": "0.6.0",
			"resolved": "https://registry.npmjs.org/tunnel-agent/-/tunnel-agent-0.6.0.tgz",
			"integrity": "sha1-J6XeoGs2sEoKmWZ3SykIaPD8QP0=",
			"dependencies": {
				"safe-buffer": "^5.0.1"
			},
			"engines": {
				"node": "*"
			}
		},
		"node_modules/tweetnacl": {
			"version": "0.14.5",
			"resolved": "https://registry.npmjs.org/tweetnacl/-/tweetnacl-0.14.5.tgz",
			"integrity": "sha1-WuaBd/GS1EViadEIr6k/+HQ/T2Q="
		},
		"node_modules/type-check": {
			"version": "0.3.2",
			"resolved": "https://registry.npmjs.org/type-check/-/type-check-0.3.2.tgz",
			"integrity": "sha1-WITKtRLPHTVeP7eE8wgEsrUg23I=",
			"dev": true,
			"dependencies": {
				"prelude-ls": "~1.1.2"
			},
			"engines": {
				"node": ">= 0.8.0"
			}
		},
		"node_modules/type-is": {
			"version": "1.6.18",
			"resolved": "https://registry.npmjs.org/type-is/-/type-is-1.6.18.tgz",
			"integrity": "sha512-TkRKr9sUTxEH8MdfuCSP7VizJyzRNMjj2J2do2Jr3Kym598JVdEksuzPQCnlFPW4ky9Q+iA+ma9BGm06XQBy8g==",
			"dependencies": {
				"media-typer": "0.3.0",
				"mime-types": "~2.1.24"
			},
			"engines": {
				"node": ">= 0.6"
			}
		},
		"node_modules/uglify-js": {
			"version": "2.8.29",
			"resolved": "https://registry.npmjs.org/uglify-js/-/uglify-js-2.8.29.tgz",
			"integrity": "sha1-KcVzMUgFe7Th913zW3qcty5qWd0=",
			"dependencies": {
				"source-map": "~0.5.1",
				"yargs": "~3.10.0"
			},
			"bin": {
				"uglifyjs": "bin/uglifyjs"
			},
			"engines": {
				"node": ">=0.8.0"
			},
			"optionalDependencies": {
				"uglify-to-browserify": "~1.0.0"
			}
		},
		"node_modules/uglify-js/node_modules/camelcase": {
			"version": "1.2.1",
			"resolved": "https://registry.npmjs.org/camelcase/-/camelcase-1.2.1.tgz",
			"integrity": "sha1-m7UwTS4LVmmLLHWLCKPqqdqlijk=",
			"engines": {
				"node": ">=0.10.0"
			}
		},
		"node_modules/uglify-js/node_modules/cliui": {
			"version": "2.1.0",
			"resolved": "https://registry.npmjs.org/cliui/-/cliui-2.1.0.tgz",
			"integrity": "sha1-S0dXYP+AJkx2LDoXGQMukcf+oNE=",
			"dependencies": {
				"center-align": "^0.1.1",
				"right-align": "^0.1.1",
				"wordwrap": "0.0.2"
			}
		},
		"node_modules/uglify-js/node_modules/source-map": {
			"version": "0.5.7",
			"resolved": "https://registry.npmjs.org/source-map/-/source-map-0.5.7.tgz",
			"integrity": "sha1-igOdLRAh0i0eoUyA2OpGi6LvP8w=",
			"engines": {
				"node": ">=0.10.0"
			}
		},
		"node_modules/uglify-js/node_modules/window-size": {
			"version": "0.1.0",
			"resolved": "https://registry.npmjs.org/window-size/-/window-size-0.1.0.tgz",
			"integrity": "sha1-VDjNLqk7IC76Ohn+iIeu58lPnJ0=",
			"engines": {
				"node": ">= 0.8.0"
			}
		},
		"node_modules/uglify-js/node_modules/wordwrap": {
			"version": "0.0.2",
			"resolved": "https://registry.npmjs.org/wordwrap/-/wordwrap-0.0.2.tgz",
			"integrity": "sha1-t5Zpu0LstAn4PVg8rVLKF+qhZD8=",
			"engines": {
				"node": ">=0.4.0"
			}
		},
		"node_modules/uglify-js/node_modules/yargs": {
			"version": "3.10.0",
			"resolved": "https://registry.npmjs.org/yargs/-/yargs-3.10.0.tgz",
			"integrity": "sha1-9+572FfdfB0tOMDnTvvWgdFDH9E=",
			"dependencies": {
				"camelcase": "^1.0.2",
				"cliui": "^2.1.0",
				"decamelize": "^1.0.0",
				"window-size": "0.1.0"
			}
		},
		"node_modules/uglify-to-browserify": {
			"version": "1.0.2",
			"resolved": "https://registry.npmjs.org/uglify-to-browserify/-/uglify-to-browserify-1.0.2.tgz",
			"integrity": "sha1-bgkk1r2mta/jSeOabWMoUKD4grc=",
			"optional": true
		},
		"node_modules/universalify": {
			"version": "0.1.2",
			"resolved": "https://registry.npmjs.org/universalify/-/universalify-0.1.2.tgz",
			"integrity": "sha512-rBJeI5CXAlmy1pV+617WB9J63U6XcazHHF2f2dbJix4XzpUF0RS3Zbj0FGIOCAva5P/d/GBOYaACQ1w+0azUkg==",
			"engines": {
				"node": ">= 4.0.0"
			}
		},
		"node_modules/unpipe": {
			"version": "1.0.0",
			"resolved": "https://registry.npmjs.org/unpipe/-/unpipe-1.0.0.tgz",
			"integrity": "sha1-sr9O6FFKrmFltIF4KdIbLvSZBOw=",
			"engines": {
				"node": ">= 0.8"
			}
		},
		"node_modules/uri-js": {
			"version": "4.2.2",
			"resolved": "https://registry.npmjs.org/uri-js/-/uri-js-4.2.2.tgz",
			"integrity": "sha512-KY9Frmirql91X2Qgjry0Wd4Y+YTdrdZheS8TFwvkbLWf/G5KNJDCh6pKL5OZctEW4+0Baa5idK2ZQuELRwPznQ==",
			"dependencies": {
				"punycode": "^2.1.0"
			}
		},
		"node_modules/uri-js/node_modules/punycode": {
			"version": "2.1.1",
			"resolved": "https://registry.npmjs.org/punycode/-/punycode-2.1.1.tgz",
			"integrity": "sha512-XRsRjdf+j5ml+y/6GKHPZbrF/8p2Yga0JPtdqTIY2Xe5ohJPD9saDJJLPvp9+NSBprVvevdXZybnj2cv8OEd0A==",
			"engines": {
				"node": ">=6"
			}
		},
		"node_modules/url": {
			"version": "0.11.0",
			"resolved": "https://registry.npmjs.org/url/-/url-0.11.0.tgz",
			"integrity": "sha1-ODjpfPxgUh63PFJajlW/3Z4uKPE=",
			"dependencies": {
				"punycode": "1.3.2",
				"querystring": "0.2.0"
			}
		},
		"node_modules/util": {
			"version": "0.10.4",
			"resolved": "https://registry.npmjs.org/util/-/util-0.10.4.tgz",
			"integrity": "sha512-0Pm9hTQ3se5ll1XihRic3FDIku70C+iHUdT/W926rSgHV5QgXsYbKZN8MSC3tJtSkhuROzvsQjAaFENRXr+19A==",
			"dependencies": {
				"inherits": "2.0.3"
			}
		},
		"node_modules/util-deprecate": {
			"version": "1.0.2",
			"resolved": "https://registry.npmjs.org/util-deprecate/-/util-deprecate-1.0.2.tgz",
			"integrity": "sha1-RQ1Nyfpw3nMnYvvS1KKJgUGaDM8="
		},
		"node_modules/util/node_modules/inherits": {
			"version": "2.0.3",
			"resolved": "https://registry.npmjs.org/inherits/-/inherits-2.0.3.tgz",
			"integrity": "sha1-Yzwsg+PaQqUC9SRmAiSA9CCCYd4="
		},
		"node_modules/utils-merge": {
			"version": "1.0.1",
			"resolved": "https://registry.npmjs.org/utils-merge/-/utils-merge-1.0.1.tgz",
			"integrity": "sha1-n5VxD1CiZ5R7LMwSR0HBAoQn5xM=",
			"engines": {
				"node": ">= 0.4.0"
			}
		},
		"node_modules/uuid": {
			"version": "3.3.3",
			"resolved": "https://registry.npmjs.org/uuid/-/uuid-3.3.3.tgz",
			"integrity": "sha512-pW0No1RGHgzlpHJO1nsVrHKpOEIxkGg1xB+v0ZmdNH5OAeAwzAVrCnI2/6Mtx+Uys6iaylxa+D3g4j63IKKjSQ==",
			"deprecated": "Please upgrade  to version 7 or higher.  Older versions may use Math.random() in certain circumstances, which is known to be problematic.  See https://v8.dev/blog/math-random for details.",
			"bin": {
				"uuid": "bin/uuid"
			}
		},
		"node_modules/vary": {
			"version": "1.1.2",
			"resolved": "https://registry.npmjs.org/vary/-/vary-1.1.2.tgz",
			"integrity": "sha1-IpnwLG3tMNSllhsLn3RSShj2NPw=",
			"engines": {
				"node": ">= 0.8"
			}
		},
		"node_modules/verror": {
			"version": "1.10.0",
			"resolved": "https://registry.npmjs.org/verror/-/verror-1.10.0.tgz",
			"integrity": "sha1-OhBcoXBTr1XW4nDB+CiGguGNpAA=",
			"engines": [
				"node >=0.6.0"
			],
			"dependencies": {
				"assert-plus": "^1.0.0",
				"core-util-is": "1.0.2",
				"extsprintf": "^1.2.0"
			}
		},
		"node_modules/void-elements": {
			"version": "2.0.1",
			"resolved": "https://registry.npmjs.org/void-elements/-/void-elements-2.0.1.tgz",
			"integrity": "sha1-wGavtYK7HLQSjWDqkjkulNXp2+w=",
			"engines": {
				"node": ">=0.10.0"
			}
		},
		"node_modules/which": {
			"version": "1.3.1",
			"resolved": "https://registry.npmjs.org/which/-/which-1.3.1.tgz",
			"integrity": "sha512-HxJdYWq1MTIQbJ3nw0cqssHoTNU267KlrDuGZ1WYlxDStUtKUhOaJmh112/TZmHxxUfuJqPXSOm7tDyas0OSIQ==",
			"dev": true,
			"dependencies": {
				"isexe": "^2.0.0"
			},
			"bin": {
				"which": "bin/which"
			}
		},
		"node_modules/window-size": {
			"version": "0.1.4",
			"resolved": "https://registry.npmjs.org/window-size/-/window-size-0.1.4.tgz",
			"integrity": "sha1-+OGqHuWlPsW/FR/6CXQqatdpeHY=",
			"bin": {
				"window-size": "cli.js"
			},
			"engines": {
				"node": ">= 0.10.0"
			}
		},
		"node_modules/winston": {
			"version": "2.4.4",
			"resolved": "https://registry.npmjs.org/winston/-/winston-2.4.4.tgz",
			"integrity": "sha512-NBo2Pepn4hK4V01UfcWcDlmiVTs7VTB1h7bgnB0rgP146bYhMxX0ypCz3lBOfNxCO4Zuek7yeT+y/zM1OfMw4Q==",
			"dependencies": {
				"async": "~1.0.0",
				"colors": "1.0.x",
				"cycle": "1.0.x",
				"eyes": "0.1.x",
				"isstream": "0.1.x",
				"stack-trace": "0.0.x"
			},
			"engines": {
				"node": ">= 0.10.0"
			}
		},
		"node_modules/winston/node_modules/async": {
			"version": "1.0.0",
			"resolved": "https://registry.npmjs.org/async/-/async-1.0.0.tgz",
			"integrity": "sha1-+PwEyjoTeErenhZBr5hXjPvWR6k="
		},
		"node_modules/with": {
			"version": "5.1.1",
			"resolved": "https://registry.npmjs.org/with/-/with-5.1.1.tgz",
			"integrity": "sha1-+k2qktrzLE6pTtRTyB8EaGtXXf4=",
			"dependencies": {
				"acorn": "^3.1.0",
				"acorn-globals": "^3.0.0"
			}
		},
		"node_modules/with/node_modules/acorn": {
			"version": "3.3.0",
			"resolved": "https://registry.npmjs.org/acorn/-/acorn-3.3.0.tgz",
			"integrity": "sha1-ReN/s56No/JbruP/U2niu18iAXo=",
			"bin": {
				"acorn": "bin/acorn"
			},
			"engines": {
				"node": ">=0.4.0"
			}
		},
		"node_modules/wordwrap": {
			"version": "1.0.0",
			"resolved": "https://registry.npmjs.org/wordwrap/-/wordwrap-1.0.0.tgz",
			"integrity": "sha1-J1hIEIkUVqQXHI0CJkQa3pDLyus=",
			"dev": true
		},
		"node_modules/wrap-ansi": {
			"version": "2.1.0",
			"resolved": "https://registry.npmjs.org/wrap-ansi/-/wrap-ansi-2.1.0.tgz",
			"integrity": "sha1-2Pw9KE3QV5T+hJc8rs3Rz4JP3YU=",
			"dependencies": {
				"string-width": "^1.0.1",
				"strip-ansi": "^3.0.1"
			},
			"engines": {
				"node": ">=0.10.0"
			}
		},
		"node_modules/wrappy": {
			"version": "1.0.2",
			"resolved": "https://registry.npmjs.org/wrappy/-/wrappy-1.0.2.tgz",
			"integrity": "sha1-tSQ9jz7BqjXxNkYFvA0QNuMKtp8="
		},
		"node_modules/write": {
			"version": "1.0.3",
			"resolved": "https://registry.npmjs.org/write/-/write-1.0.3.tgz",
			"integrity": "sha512-/lg70HAjtkUgWPVZhZcm+T4hkL8Zbtp1nFNOn3lRrxnlv50SRBv7cR7RqR+GMsd3hUXy9hWBo4CHTbFTcOYwig==",
			"dev": true,
			"dependencies": {
				"mkdirp": "^0.5.1"
			},
			"engines": {
				"node": ">=4"
			}
		},
		"node_modules/xtend": {
			"version": "4.0.2",
			"resolved": "https://registry.npmjs.org/xtend/-/xtend-4.0.2.tgz",
			"integrity": "sha512-LKYU1iAXJXUgAXn9URjiu+MWhyUXHsvfp7mcuYm9dSUKK0/CjtrUwFAxD82/mCWbtLsGjFIad0wIsod4zrTAEQ==",
			"engines": {
				"node": ">=0.4"
			}
		},
		"node_modules/y18n": {
			"version": "3.2.1",
			"resolved": "https://registry.npmjs.org/y18n/-/y18n-3.2.1.tgz",
			"integrity": "sha1-bRX7qITAhnnA136I53WegR4H+kE="
		},
		"node_modules/yargs": {
			"version": "3.32.0",
			"resolved": "https://registry.npmjs.org/yargs/-/yargs-3.32.0.tgz",
			"integrity": "sha1-AwiOnr+edWtpdRYR0qXvWRSCyZU=",
			"dependencies": {
				"camelcase": "^2.0.1",
				"cliui": "^3.0.3",
				"decamelize": "^1.1.1",
				"os-locale": "^1.4.0",
				"string-width": "^1.0.1",
				"window-size": "^0.1.4",
				"y18n": "^3.2.0"
			}
		}
	}
}

application/package.json
{
	"name": "certification_network",
	"version": "1.0.0",
	"description": "NodeJS Application Accessing The Certification Chaincode on Fabric Network",
	"main": "index.js",
	"scripts": {
		"test": "rm -rf identity && node index.js"
	},
	"author": "Avi K",
	"dependencies": {
		"cors": "^2.8.5",
		"express": "^4.17.1",
		"fabric-client": "~1.4.4",
		"fabric-network": "~1.4.4",
		"js-yaml": "^3.12.0",
		"pug": "^2.0.4"
	},
	"devDependencies": {
		"eslint": "^5.6.0"
	}
}



